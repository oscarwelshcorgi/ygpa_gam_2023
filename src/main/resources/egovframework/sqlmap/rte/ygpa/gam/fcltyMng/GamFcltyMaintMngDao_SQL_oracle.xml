<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ygpa.gam.fcltyMng">

    <typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
    <typeAlias alias="hashMap" type="java.util.HashMap"/>
    <typeAlias alias="gamFcltyMaintMngVO" type="egovframework.rte.ygpa.gam.fcltyMng.service.GamFcltyMaintMngVO"/>

    <resultMap id="gamFcltyMaintMngSumMap" class="gamFcltyMaintMngVO">
		<result property="totCnt" column="TOT_CNT" columnIndex="1"/>
		<result property="sumMntnRprCnstAmt" column="SUM_MNTN_RPR_CNST_AMT" columnIndex="2"/>
		<result property="sumMntnRprBdgt" column="SUM_MNTN_RPR_BDGT" columnIndex="3"/>
	</resultMap>
    <!-- 유지보수내역 -->
	<select id="gamFcltyMaintMngDao.selectFcltyMaintMngList_D" parameterClass="gamFcltyMaintMngVO" resultClass="egovMap">
        SELECT A.*
           FROM (
                SELECT ROWNUM RNUM, S.*
                	FROM (
						SELECT
							M.MNTN_RPR_CNST_NM
							, GAM_GET_MNTN_FCLTS_CNST_INFO(M.CTRT_NO, M.MNTN_RPR_CNST_NM) MNTN_FCLTS_CNST_INFO
							, M.PLANNER_NM
							, M.CNST_CHARG_NM
							, TO_CHAR(M.MNTN_RPR_CNST_START_DT,'YYYY-MM-DD') MNTN_RPR_CNST_START_DT
							, TO_CHAR(M.MNTN_RPR_CNST_END_DT,'YYYY-MM-DD') MNTN_RPR_CNST_END_DT
							, M.MNTN_RPR_CNST_AMT
							, M.RM
							, M.REG_USR
							, M.REGIST_DT
							, M.UPD_USR
							, M.UPDT_DT
							, M.CTRT_NO
							, (SELECT I.CTRT_NM FROM CTRT_INFO_F I WHERE I.CTRT_NO = M.CTRT_NO) CTRT_NM
							, M.FCLTS_JOB_SE
							, M.FCLTS_MNG_GROUP_NO
							, (SELECT G.FCLTS_MNG_GROUP_NM FROM FCLTS_MNG_GROUP_F G WHERE G.FCLTS_MNG_GROUP_NO = M.FCLTS_MNG_GROUP_NO) FCLTS_MNG_GROUP_NM
							, M.MNTN_RPR_SEQ
							, M.MNTN_RPR_SE
							, M.MNTN_SUB_RPR_SE
							, GAM_GET_MNTN_RPR_SE_NM(M.MNTN_RPR_SE) MNTN_RPR_SE_NM
							, GAM_GET_MNTN_RPR_SE_NM(M.MNTN_SUB_RPR_SE) MNTN_SUB_RPR_SE_NM
							, M.MNTN_RPR_PART
							, M.MNTN_RPR_CN
							, M.MNTN_RPR_BDGT
							, M.CNSTRTR
							, M.RESPON_ENGINEER
							, M.ENFORCE_YEAR
						FROM
							MNTN_RPR_DTLS_F M
						WHERE
							1 = 1

						<isNotEmpty property="sFcltsMngGroupNo">
	           				AND M.FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
	           			</isNotEmpty>

	           			<isNotEmpty property="sCtrtNo">
	           				AND M.CTRT_NO = #sCtrtNo#
	           			</isNotEmpty>

						<isNotEmpty property="sFcltsJobSe">
	           				AND M.FCLTS_JOB_SE = #sFcltsJobSe#
	           			</isNotEmpty>

	           			<isNotEmpty property="sMntnRprCnstNm">
	           				AND M.MNTN_RPR_CNST_NM LIKE '%' || #sMntnRprCnstNm# || '%'
	           			</isNotEmpty>

	           			<isNotEmpty property="sMntnRprSe">
	           				AND M.MNTN_RPR_SE = #sMntnRprSe#
	           			</isNotEmpty>

	           			<isNotEmpty property="sMntnRprCnstStartDtFr">
	           			<isEmpty property="sMapFcltsMngNo">
	           				AND
	           				(
	           					<![CDATA[ M.MNTN_RPR_CNST_START_DT >= #sMntnRprCnstStartDtFr# ]]>
	           				<isNotEmpty property="sMntnRprCnstStartDtTo">
		           				<![CDATA[ AND M.MNTN_RPR_CNST_START_DT <= #sMntnRprCnstStartDtTo# ]]>
		           			</isNotEmpty>
		           			)
	           			</isEmpty>
	           			</isNotEmpty>

						<isNotEmpty property="sMapFcltsMngNo">
							AND EXISTS (SELECT 'Y'
											FROM MNTN_RPR_OBJ_FCLTS_F
										WHERE FCLTS_MNG_GROUP_NO = M.FCLTS_MNG_GROUP_NO
										 AND FCLTS_JOB_SE = M.FCLTS_JOB_SE
										 AND MNTN_RPR_SEQ = M.MNTN_RPR_SEQ
										 AND FCLTS_MNG_NO = #sMapFcltsMngNo#)
						</isNotEmpty>

						ORDER BY
							M.WRT_DT DESC NULLS LAST,
							M.MNTN_RPR_CNST_NM ASC
                ) S
             ) A
        <![CDATA[ WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex# ]]>
	</select>

	<select id="gamFcltyMaintMngDao.selectFcltyMaintMngListTotCnt_S" parameterClass="gamFcltyMaintMngVO" resultMap="gamFcltyMaintMngSumMap">
		SELECT
			COUNT(*) TOT_CNT
			, NVL(SUM(M.MNTN_RPR_CNST_AMT),0) AS SUM_MNTN_RPR_CNST_AMT
			, NVL(SUM(M.MNTN_RPR_BDGT),0) AS SUM_MNTN_RPR_BDGT
		FROM
			MNTN_RPR_DTLS_F M
		WHERE
			1 = 1

		<isNotEmpty property="sFcltsMngGroupNo">
			AND M.FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
		</isNotEmpty>

		<isNotEmpty property="sCtrtNo">
			AND M.CTRT_NO = #sCtrtNo#
		</isNotEmpty>

		<isNotEmpty property="sFcltsJobSe">
			AND M.FCLTS_JOB_SE = #sFcltsJobSe#
		</isNotEmpty>

		<isNotEmpty property="sMntnRprCnstNm">
			AND M.MNTN_RPR_CNST_NM LIKE '%' || #sMntnRprCnstNm# || '%'
		</isNotEmpty>

		<isNotEmpty property="sMntnRprSe">
			AND M.MNTN_RPR_SE = #sMntnRprSe#
		</isNotEmpty>

		<isNotEmpty property="sMntnRprCnstStartDtFr">
			AND
			(
				<![CDATA[ M.MNTN_RPR_CNST_START_DT >= #sMntnRprCnstStartDtFr# ]]>
			<isNotEmpty property="sMntnRprCnstStartDtTo">
				<![CDATA[ AND M.MNTN_RPR_CNST_START_DT <= #sMntnRprCnstStartDtTo# ]]>
			</isNotEmpty>
			)
		</isNotEmpty>

		<isNotEmpty property="sMapFcltsMngNo">
			AND EXISTS (SELECT 'Y'
							FROM MNTN_RPR_OBJ_FCLTS_F
						WHERE FCLTS_MNG_GROUP_NO = M.FCLTS_MNG_GROUP_NO
						 AND FCLTS_JOB_SE = M.FCLTS_JOB_SE
						 AND MNTN_RPR_SEQ = M.MNTN_RPR_SEQ
						 AND FCLTS_MNG_NO = #sMapFcltsMngNo#)
		</isNotEmpty>

	</select>


	<select id="gamFcltyMaintMngDao.selectFcltyMaintMngDetail_S" parameterClass="gamFcltyMaintMngVO" resultClass="egovMap">
		SELECT
			M.MNTN_RPR_CNST_NM
			, M.PLANNER_NM
			, M.CNST_CHARG_NM
			, TO_CHAR(M.MNTN_RPR_CNST_START_DT,'YYYY-MM-DD') MNTN_RPR_CNST_START_DT
			, TO_CHAR(M.MNTN_RPR_CNST_END_DT,'YYYY-MM-DD') MNTN_RPR_CNST_END_DT
			, M.MNTN_RPR_CNST_AMT
			, M.RM
			, M.REG_USR
			, M.REGIST_DT
			, M.UPD_USR
			, M.UPDT_DT
			, M.CTRT_NO
			, (SELECT I.CTRT_NM FROM CTRT_INFO_F I WHERE I.CTRT_NO = M.CTRT_NO) CTRT_NM
			, M.FCLTS_JOB_SE
			, M.FCLTS_MNG_GROUP_NO
			, (SELECT G.FCLTS_MNG_GROUP_NM FROM FCLTS_MNG_GROUP_F G WHERE G.FCLTS_MNG_GROUP_NO = M.FCLTS_MNG_GROUP_NO) FCLTS_MNG_GROUP_NO_NM
			, M.MNTN_RPR_SEQ
			, M.MNTN_RPR_SE
			, M.MNTN_SUB_RPR_SE
			, M.MNTN_RPR_PART
			, M.MNTN_RPR_CN
			, M.MNTN_RPR_BDGT
			, M.CNSTRTR
			, M.RESPON_ENGINEER
			, M.ENFORCE_YEAR
			, TO_CHAR(M.WRT_DT,'YYYY-MM-DD') WRT_DT
			, M.WRT_USR
			, M.PLAN_HIST_SE
		FROM
			MNTN_RPR_DTLS_F M
		WHERE
			M.FCLTS_JOB_SE = #fcltsJobSe#
			AND M.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND M.MNTN_RPR_SEQ = TO_NUMBER(#mntnRprSeq#)
	</select>


	<!-- 유지보수대상시설물내역 -->
	<select id="gamFcltyMaintMngDao.selectMntnRprObjFcltsFList_D" parameterClass="gamFcltyMaintMngVO" resultClass="egovMap">

		SELECT
			G.FCLTS_MNG_NO
			, G.PRT_FCLTY_NM
			, G.PRT_FCLTY_SE
			, GAM_GETCODENAME(#codeId#,G.GIS_PRT_FCLTY_CD) GIS_PRT_FCLTY_NM
			, DECODE(O.FCLTS_MNG_NO,NULL,'','TRUE') CHK_ROLE
		FROM
			GIS_PRT_FCLTY_CD_F G
        LEFT OUTER JOIN
			MNTN_RPR_OBJ_FCLTS_F O
        ON
			O.FCLTS_MNG_GROUP_NO = G.FCLTS_MNG_GROUP_NO
			AND O.FCLTS_MNG_NO = G.FCLTS_MNG_NO
			AND O.MNTN_RPR_SEQ = TO_NUMBER(#mntnRprSeq#)
		WHERE
			<![CDATA[ 1<>1 ]]>

		OR (
		<isNotEmpty property="fcltsJobSe">
			G.PRT_FCLTY_SE = #fcltsJobSe#
			<isNotEmpty property="fcltsMngGroupNo">
				AND
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="fcltsMngGroupNo">
			G.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
		</isNotEmpty>
			)
        ORDER BY
          	G.PRT_FCLTY_SE, G.FCLTS_MNG_NO ASC

	</select>



	<!-- 유지보수첨부파일내역 -->
	<select id="gamFcltyMaintMngDao.selectFcltyMaintFileList_D" parameterClass="gamFcltyMaintMngVO" resultClass="egovMap">
        SELECT
			FCLTS_JOB_SE
			, FCLTS_MNG_GROUP_NO
			, MNTN_RPR_SEQ
			, ATCH_FILE_SEQ
			, ATCH_FILE_SE
			, GAM_GET_FILE_SE_NM(ATCH_FILE_SE) AS ATCH_FILE_SE_NM
			, ATCH_FILE_SJ
			, ATCH_FILE_NM_LOGIC
			, ATCH_FILE_NM_PHYSICL
			, TO_CHAR(ATCH_FILE_WRITNG_DT,'YYYY-MM-DD') ATCH_FILE_WRITNG_DT
			, REG_USR
			, REGIST_DT
			, UPD_USR
			, UPDT_DT
		FROM
			MNTN_RPR_ATCH_FILE_F
		WHERE
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND MNTN_RPR_SEQ = TO_NUMBER(#mntnRprSeq#)

		ORDER BY
			MNTN_RPR_SEQ ASC
	</select>


	<!-- 유지보수순번 -->
	<select id="gamFcltyMaintMngDao.selectNextMntnRprSeq_S" parameterClass="hashMap" resultClass="int">
		SELECT
			(NVL(MAX(MNTN_RPR_SEQ),0) + 1) NEXT_MNTN_RPR_SEQ
		FROM
			MNTN_RPR_DTLS_F
		WHERE
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
	</select>


	<!-- 유지보수내역입력 -->
	<insert id="gamFcltyMaintMngDao.insertFcltyMaintMng">
		INSERT INTO
			MNTN_RPR_DTLS_F
			(
				MNTN_RPR_CNST_NM
				, PLANNER_NM
				, CNST_CHARG_NM
				, MNTN_RPR_CNST_START_DT
				, MNTN_RPR_CNST_END_DT
				, MNTN_RPR_CNST_AMT
				, RM
				, CTRT_NO
				, FCLTS_JOB_SE
				, FCLTS_MNG_GROUP_NO
				, MNTN_RPR_SEQ
				, MNTN_RPR_SE
				, MNTN_SUB_RPR_SE
				, MNTN_RPR_PART
				, MNTN_RPR_CN
				, MNTN_RPR_BDGT
				, CNSTRTR
				, RESPON_ENGINEER
				, ENFORCE_YEAR
				, REG_USR
				, REGIST_DT
				, WRT_DT
				, WRT_USR
				, PLAN_HIST_SE
			)
			VALUES
			(
				#mntnRprCnstNm#
				, #plannerNm#
				, #cnstChargNm#
				, #mntnRprCnstStartDt#
				, #mntnRprCnstEndDt#
				, TO_NUMBER(#mntnRprCnstAmt#)
				, #rm#
				, #ctrtNo#
				, #fcltsJobSe#
				, #fcltsMngGroupNo#
				, #mntnRprSeq#
				, #mntnRprSe#
				, #mntnSubRprSe#
				, #mntnRprPart#
				, #mntnRprCn#
				, TO_NUMBER(#mntnRprBdgt#)
				, #cnstrtr#
				, #responEngineer#
				, #enforceYear#
				, #regUsr#
				, SYSDATE
				, #wrtDt#
				, #wrtUsr#
				, #planHistSe#
			)
	</insert>

	<!-- 유지보수내역수정 -->
	<update id="gamFcltyMaintMngDao.updateFcltyMaintMng">
		UPDATE MNTN_RPR_DTLS_F
			SET
				MNTN_RPR_CNST_NM = #mntnRprCnstNm#
				, PLANNER_NM = #plannerNm#
				, CNST_CHARG_NM = #cnstChargNm#
				, MNTN_RPR_CNST_START_DT = #mntnRprCnstStartDt#
				, MNTN_RPR_CNST_END_DT = #mntnRprCnstEndDt#
				, MNTN_RPR_CNST_AMT = TO_NUMBER(#mntnRprCnstAmt#)
				, RM = #rm#
				, CTRT_NO = #ctrtNo#
				, MNTN_RPR_SE = #mntnRprSe#
				, MNTN_SUB_RPR_SE = #mntnSubRprSe#
				, MNTN_RPR_PART = #mntnRprPart#
				, MNTN_RPR_CN = #mntnRprCn#
				, MNTN_RPR_BDGT = TO_NUMBER(#mntnRprBdgt#)
				, CNSTRTR = #cnstrtr#
				, RESPON_ENGINEER = #responEngineer#
				, ENFORCE_YEAR = #enforceYear#
				, UPD_USR = #updUsr#
				, UPDT_DT = SYSDATE
				, WRT_DT = #wrtDt#
				, WRT_USR = #wrtUsr#
				, PLAN_HIST_SE = #planHistSe#
			WHERE
				FCLTS_JOB_SE = #fcltsJobSe#
				AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
				AND MNTN_RPR_SEQ = TO_NUMBER(#mntnRprSeq#)
	</update>

	<!-- 유지보수내역삭제 -->
	<delete id="gamFcltyMaintMngDao.deleteFcltyMaintMng">
		DELETE FROM
			MNTN_RPR_DTLS_F
		WHERE
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND MNTN_RPR_SEQ = TO_NUMBER(#mntnRprSeq#)
	</delete>


	<!-- 유지보수대상시설물입력 -->
	<insert id="gamFcltyMaintMngDao.insertMntnRprObjFcltsF">
		INSERT INTO
			MNTN_RPR_OBJ_FCLTS_F
			(
				FCLTS_JOB_SE
				, FCLTS_MNG_GROUP_NO
				, MNTN_RPR_SEQ
				, MNTN_RPR_CNST_MTH
				, UNIT
				, QY
				, PRICE
				, MNTN_RPR_CNST_AMT
				, RM
				, FCLTS_MNG_NO
				, REG_USR
				, REGIST_DT
			)
			VALUES
			(
				#fcltsJobSe#
				, #fcltsMngGroupNo#
				, #mntnRprSeq#
				, #mntnRprCnstMth#
				, #unit#
				, TO_NUMBER(#qy#)
				, TO_NUMBER(#price#)
				, TO_NUMBER(#objMntnRprCnstAmt#)
				, #objRm#
				, #fcltsMngNo#
				, #regUsr#
				, SYSDATE
			)
	</insert>


	<!-- 유지보수대상시설물삭제 -->
	<delete id="gamFcltyMaintMngDao.deleteMntnRprObjFcltsF">
		DELETE FROM
			MNTN_RPR_OBJ_FCLTS_F
		WHERE
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND MNTN_RPR_SEQ = TO_NUMBER(#mntnRprSeq#)
		<isNotEmpty property="fcltsMngNo">
			AND FCLTS_MNG_NO = #fcltsMngNo#
		</isNotEmpty>

	</delete>



	<!-- 유지보수첨부파일입력 -->
	<insert id="gamFcltyMaintMngDao.insertFcltyMaintFile">
		<selectKey keyProperty="maxAtchFileSeq" resultClass="String">
	       	SELECT
	       		(NVL(MAX(ATCH_FILE_SEQ),0) + 1)
			FROM
				MNTN_RPR_ATCH_FILE_F
			WHERE
				FCLTS_JOB_SE = #fcltsJobSe#
				AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
				AND MNTN_RPR_SEQ = TO_NUMBER(#mntnRprSeq#)
	    </selectKey>

		INSERT INTO
			MNTN_RPR_ATCH_FILE_F
			(
				FCLTS_JOB_SE
				, FCLTS_MNG_GROUP_NO
				, MNTN_RPR_SEQ
				, ATCH_FILE_SEQ
				, ATCH_FILE_SE
				, ATCH_FILE_SJ
				, ATCH_FILE_NM_LOGIC
				, ATCH_FILE_NM_PHYSICL
				, ATCH_FILE_WRITNG_DT
				, REG_USR
				, REGIST_DT
			)
			VALUES
			(
				#fcltsJobSe#
				, #fcltsMngGroupNo#
				, #mntnRprSeq#
				, #maxAtchFileSeq#
				, #atchFileSe#
				, #atchFileSj#
				, #atchFileNmLogic#
				, #atchFileNmPhysicl#
				, #atchFileWritngDt#
				, #regUsr#
				, SYSDATE
			)
	</insert>


	<!-- 유지보수첨부파일삭제 -->
	<delete id="gamFcltyMaintMngDao.deleteFcltyMaintFile">
		DELETE FROM
			MNTN_RPR_ATCH_FILE_F
		WHERE
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND MNTN_RPR_SEQ = TO_NUMBER(#mntnRprSeq#)
		<isNotEmpty property="atchFileSeq">
			AND ATCH_FILE_SEQ = TO_NUMBER(#atchFileSeq#)
		</isNotEmpty>

	</delete>




	<select id="gamFcltyMaintMngDao.selectMaintMngAtchFileDirList_D" parameterClass="gamAtchFileDirMngVO" resultClass="egovMap">
		SELECT
				 T.DIR_NO AS DIR_NO
				,T.DEPTH_SORT AS DEPTH_SORT
				,T.DIR_NM AS DIR_NM
				,T.DIR_UPPER_NO
			FROM (
				SELECT
						 1 AS DIR_NO
						,0 AS DEPTH_SORT
						,'ROOT' AS DIR_NM
						,0 AS DIR_UPPER_NO
					FROM DUAL
				UNION ALL
				SELECT
						 T1.DIR_NO AS DIR_NO
						,T1.DEPTH_SORT AS DEPTH_SORT
						,T1.DIR_NM AS DIR_NM
						,(CASE WHEN T1.DEPTH_SORT <![CDATA[ > ]]> 1 THEN T1.DIR_UPPER_NO ELSE 1 END) AS DIR_UPPER_NO
					FROM ATCH_FILE_DIR_F T1
				WHERE 1 = 1
				<isNotEmpty property="dirQueryOption">
				AND T1.FCLTS_JOB_SE = #dirQueryOption#
				</isNotEmpty>
				) T
		ORDER BY T.DIR_NO,T.DEPTH_SORT
	</select>

	<select id="gamFcltyMaintMngDao.selectMaintMngAtchFileDirPk_S" parameterClass="gamAtchFileDirMngVO" resultClass="egovMap">
		SELECT
				 TO_CHAR(T1.DIR_NO) AS DIR_NO
				,T1.DIR_NM AS DIR_NM
				,T1.DIR_PATH AS DIR_PATH
				,TO_CHAR(T1.DIR_UPPER_NO) AS DIR_UPPER_NO
				,TO_CHAR(T1.DEPTH_SORT) AS DEPTH_SORT
				,T1.LEAF_YN AS LEAF_YN
				,T1.FCLTS_JOB_SE AS DIR_FCLTS_JOB_SE
				,T1.REG_USR AS REG_USR
				,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
				,T1.UPD_USR AS UPD_USR
				,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
			FROM ATCH_FILE_DIR_F T1
		WHERE T1.DIR_NO = NVL(TO_NUMBER(REPLACE(#dirNo#,',','')),0)
	</select>

	<insert id="gamFcltyMaintMngDao.insertMaintMngAtchFileDir_S" parameterClass="gamAtchFileDirMngVO">
		INSERT INTO ATCH_FILE_DIR_F
		(
			 DIR_NO
			,DIR_NM
			,DIR_PATH
			,DIR_UPPER_NO
			,DEPTH_SORT
			,LEAF_YN
			,FCLTS_JOB_SE
			,REG_USR
			,REGIST_DT
		)
		VALUES
		(
			 TO_NUMBER(REPLACE(#dirNo#,',',''))
			,#dirNm#
			,#dirPath#
			,TO_NUMBER(REPLACE(#dirUpperNo#,',',''))
			,TO_NUMBER(REPLACE(#depthSort#,',',''))
			,#leafYn#
			,#dirFcltsJobSe#
			,#regUsr#
			,SYSDATE
		)
	</insert>

	<update id="gamFcltyMaintMngDao.updateMaintMngAtchFileDir_S" parameterClass="gamAtchFileDirMngVO">
		UPDATE ATCH_FILE_DIR_F SET
			 DIR_NM = #dirNm#
			,DIR_PATH = #dirPath#
			,DIR_UPPER_NO = TO_NUMBER(REPLACE(#dirUpperNo#,',',''))
			,DEPTH_SORT = TO_NUMBER(REPLACE(#depthSort#,',',''))
			,LEAF_YN = #leafYn#
			,FCLTS_JOB_SE = #dirFcltsJobSe#
			,UPD_USR = #updUsr#
			,UPDT_DT = SYSDATE
		WHERE DIR_NO = TO_NUMBER(REPLACE(#dirNo#,',',''))
	</update>

	<update id="gamFcltyMaintMngDao.updateMaintMngInsertAtchFileDirLeafYn_S" parameterClass="gamAtchFileDirMngVO">
		UPDATE ATCH_FILE_DIR_F SET
			 LEAF_YN = 'N'
		WHERE DIR_NO = TO_NUMBER(REPLACE(#dirUpperNo#,',',''))
	</update>

	<update id="gamFcltyMaintMngDao.updateMaintMngDeleteAtchFileDirLeafYn_S" parameterClass="gamAtchFileDirMngVO">
		UPDATE ATCH_FILE_DIR_F SET
			 LEAF_YN = (
				SELECT (CASE WHEN COUNT(*) > 0 THEN 'N' ELSE 'Y' END)
					FROM ATCH_FILE_DIR_F
				WHERE DIR_UPPER_NO = TO_NUMBER(REPLACE(#dirUpperNo#,',',''))
				AND DIR_NO <![CDATA[ <> ]]> TO_NUMBER(REPLACE(#dirNo#,',',''))
			)
		WHERE DIR_NO = TO_NUMBER(REPLACE(#dirUpperNo#,',',''))
	</update>

	<delete id="gamFcltyMaintMngDao.deleteMaintMngAtchFileDir_S" parameterClass="gamAtchFileDirMngVO">
		DELETE FROM ATCH_FILE_DIR_F
		WHERE DIR_NO = TO_NUMBER(REPLACE(#dirNo#,',',''))
	</delete>

	<delete id="gamFcltyMaintMngDao.deleteMaintMngAtchFileDirLowerData_S" parameterClass="gamAtchFileDirMngVO">
		DELETE FROM ATCH_FILE_DIR_F
		WHERE DIR_NO IN (
			SELECT DIR_NO
				FROM ATCH_FILE_DIR_F
			WHERE DIR_NO <![CDATA[ > ]]> TO_NUMBER(REPLACE(#dirNo#,',',''))
			START WITH DIR_UPPER_NO = TO_NUMBER(REPLACE(#dirNo#,',',''))
			CONNECT BY DIR_UPPER_NO = PRIOR DIR_NO
		)
	</delete>

	<select id="gamFcltyMaintMngDao.selectMaintMngAtchFileDirNewNo_S" parameterClass="gamAtchFileDirMngVO" resultClass="java.lang.String">
		SELECT
				TO_CHAR(ATCH_FILE_DIR_SEQ.NEXTVAL) AS NEW_DIR_NO
			FROM DUAL
	</select>

	<select id="gamFcltyMaintMngDao.selectMaintMngAtchFileDirLowerDataCnt_S" parameterClass="gamAtchFileDirMngVO" resultClass="egovMap">
		SELECT
				 COUNT(*) AS LOWER_DATA_CNT
			FROM ATCH_FILE_DIR_F
		WHERE DIR_NO IN (
			SELECT DIR_NO
				FROM ATCH_FILE_DIR_F
			WHERE DIR_NO <![CDATA[ > ]]> TO_NUMBER(REPLACE(#dirNo#,',',''))
			START WITH DIR_UPPER_NO = TO_NUMBER(REPLACE(#dirNo#,',',''))
			CONNECT BY DIR_UPPER_NO = PRIOR DIR_NO
		)
	</select>


	<select id="gamFcltyMaintMngDao.selectMaintMngFcltsAtchFileList_D" parameterClass="gamFcltsAtchFileMngVO" resultClass="egovMap">
		SELECT T.*
			FROM (
				SELECT  ROWNUM RNUM, S.*
					FROM (
						SELECT
								 TO_CHAR(T1.ATCH_FILE_NO) AS ATCH_FILE_NO
								,T1.ATCH_FILE_NM_LOGIC AS ATCH_FILE_NM_LOGIC
								,T1.ATCH_FILE_NM_PHYSICL AS ATCH_FILE_NM_PHYSICL
								,T1.ATCH_FILE_SE AS ATCH_FILE_SE
								,T1.ATCH_FILE_SJ AS ATCH_FILE_SJ
								,TO_CHAR(T1.DIR_NO) AS ATCH_FILE_DIR_NO
								,T1.FCLTS_DATA_SE AS ATCH_FILE_FCLTS_DATA_SE
								,T1.FCLTS_MNG_NO AS ATCH_FILE_FCLTS_MNG_NO
								,T1.FCLTS_JOB_SE AS ATCH_FILE_FCLTS_JOB_SE
								,TO_CHAR(T1.FCLTS_MNG_SEQ) AS ATCH_FILE_FCLTS_MNG_SEQ
								,T1.REG_USR AS REG_USR
								,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
								,T1.UPD_USR AS UPD_USR
								,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
								,GAM_GET_FILE_SE_NM(T1.ATCH_FILE_SE) AS ATCH_FILE_SE_NM
								,'FALSE' AS ATCH_FILE_SEL_CHK
							FROM FCLTS_ATCH_FILE_F T1
						WHERE 1=1

						<isNotEmpty property="atchFileDirNo">
						AND T1.DIR_NO = NVL(TO_NUMBER(REPLACE(#atchFileDirNo#,',','')),0)
						</isNotEmpty>

						ORDER BY T1.ATCH_FILE_NO ASC
				) S
		) T
		<![CDATA[
		WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex#
		]]>
	</select>

	<insert id="gamFcltyMaintMngDao.insertMaintMngFcltsAtchFile_S" parameterClass="gamFcltsAtchFileMngVO">
		INSERT INTO FCLTS_ATCH_FILE_F
		(
			 ATCH_FILE_NO
			,ATCH_FILE_NM_LOGIC
			,ATCH_FILE_NM_PHYSICL
			,ATCH_FILE_SE
			,ATCH_FILE_SJ
			,DIR_NO
			,FCLTS_DATA_SE
			,FCLTS_MNG_NO
			,FCLTS_JOB_SE
			,FCLTS_MNG_SEQ
			,REG_USR
			,REGIST_DT
		)
		VALUES
		(
			 TO_NUMBER(REPLACE(#atchFileNo#,',',''))
			,#atchFileNmLogic#
			,#atchFileNmPhysicl#
			,#atchFileSe#
			,#atchFileSj#
			,TO_NUMBER(REPLACE(#atchFileDirNo#,',',''))
			,#atchFileFcltsDataSe#
			,#atchFileFcltsMngNo#
			,#atchFileFcltsJobSe#
			,TO_NUMBER(REPLACE(#atchFileFcltsMngSeq#,',',''))
			,#regUsr#
			,SYSDATE
		)
	</insert>

	<update id="gamFcltyMaintMngDao.updateMaintMngFcltsAtchFile_S" parameterClass="gamFcltsAtchFileMngVO">
		UPDATE FCLTS_ATCH_FILE_F SET
			 ATCH_FILE_NM_LOGIC = #atchFileNmLogic#
			,ATCH_FILE_NM_PHYSICL = #atchFileNmPhysicl#
			,ATCH_FILE_SE = #atchFileSe#
			,ATCH_FILE_SJ = #atchFileSj#
			,DIR_NO = TO_NUMBER(REPLACE(#atchFileDirNo#,',',''))
			,FCLTS_DATA_SE = #atchFileFcltsDataSe#
			,FCLTS_MNG_NO = #atchFileFcltsMngNo#
			,FCLTS_JOB_SE = #atchFileFcltsJobSe#
			,FCLTS_MNG_SEQ = TO_NUMBER(REPLACE(#atchFileFcltsMngSeq#,',',''))
			,UPD_USR = #updUsr#
			,UPDT_DT = SYSDATE
		WHERE ATCH_FILE_NO = NVL(TO_NUMBER(REPLACE(#atchFileNo#,',','')),0)
	</update>

	<delete id="gamFcltyMaintMngDao.deleteMaintMngFcltsAtchFile_S" parameterClass="gamFcltsAtchFileMngVO">
		DELETE FROM FCLTS_ATCH_FILE_F
		WHERE ATCH_FILE_NO = TO_NUMBER(REPLACE(#atchFileNo#,',',''))
	</delete>

	<delete id="gamFcltyMaintMngDao.deleteMaintMngAllFcltsAtchFile_S" parameterClass="gamFcltsAtchFileMngVO">
		DELETE FROM FCLTS_ATCH_FILE_F
		WHERE DIR_NO IN (
			SELECT DIR_NO
				FROM ATCH_FILE_DIR_F
			WHERE DIR_NO <![CDATA[ > ]]> TO_NUMBER(REPLACE(#atchFileDirNo#,',',''))
			START WITH DIR_UPPER_NO = TO_NUMBER(REPLACE(#atchFileDirNo#,',',''))
			CONNECT BY DIR_UPPER_NO = PRIOR DIR_NO
		)
	</delete>

	<delete id="gamFcltyMaintMngDao.deleteMaintMngFcltsAtchFileMulti_S" parameterClass="hashMap">
		DELETE FROM FCLTS_ATCH_FILE_F
		WHERE ATCH_FILE_NO IN (SELECT LTRIM(REGEXP_SUBSTR(','||#deleteAtchFileNoList#||',','[^'||','||']+', 1, LEVEL ), ',') AS ATCH_FILE_NO
								 FROM DUAL
							   CONNECT BY LEVEL <![CDATA[ <= ]]> (LENGTH(','||#deleteAtchFileNoList#) - LENGTH(REPLACE(','||#deleteAtchFileNoList#,','))) / LENGTH(',')
							  )
	</delete>

	<select id="gamFcltyMaintMngDao.selectMaintMngFcltsAtchFilePk_S" parameterClass="gamFcltsAtchFileMngVO" resultClass="egovMap">
		SELECT
				 TO_CHAR(T1.ATCH_FILE_NO) AS ATCH_FILE_NO
				,T1.ATCH_FILE_NM_LOGIC AS ATCH_FILE_NM_LOGIC
				,T1.ATCH_FILE_NM_PHYSICL AS ATCH_FILE_NM_PHYSICL
				,T1.ATCH_FILE_SE AS ATCH_FILE_SE
				,T1.ATCH_FILE_SJ AS ATCH_FILE_SJ
				,TO_CHAR(T1.DIR_NO) AS ATCH_FILE_DIR_NO
				,T1.FCLTS_DATA_SE AS ATCH_FILE_FCLTS_DATA_SE
				,T1.FCLTS_MNG_NO AS ATCH_FILE_FCLTS_MNG_NO
				,T1.FCLTS_JOB_SE AS ATCH_FILE_FCLTS_JOB_SE
				,TO_CHAR(T1.FCLTS_MNG_SEQ) AS ATCH_FILE_FCLTS_MNG_SEQ
				,T1.REG_USR AS REG_USR
				,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
				,T1.UPD_USR AS UPD_USR
				,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
				,GAM_GET_FILE_SE_NM(T1.ATCH_FILE_SE) AS ATCH_FILE_SE_NM
				,'FALSE' AS ATCH_FILE_SEL_CHK
			FROM FCLTS_ATCH_FILE_F T1
		WHERE T1.ATCH_FILE_NO = TO_NUMBER(REPLACE(#atchFileNo#,',',''))
	</select>

	<select id="gamFcltyMaintMngDao.selectMaintMngFcltsAtchFileNewNo_S" parameterClass="gamFcltsAtchFileMngVO" resultClass="java.lang.String">
		SELECT
				TO_CHAR(FCLTS_ATCH_FILE_SEQ.NEXTVAL) AS NEW_DIR_NO
			FROM DUAL
	</select>

	<select id="gamFcltyMaintMngDao.selectMaintMngMntnRprDtlsList_D" parameterClass="gamMntnRprDtlsVO" resultClass="egovMap">
		SELECT T.*
			FROM (
				SELECT  ROWNUM RNUM, S.*
					FROM (
						SELECT
								 T1.MNTN_RPR_SEQ AS MNTN_RPR_SEQ
								,T1.MNTN_RPR_CNST_NM AS MNTN_RPR_CNST_NM
								,TO_CHAR(T1.MNTN_RPR_CNST_START_DT,'YYYY-MM-DD') AS MNTN_RPR_CNST_START_DT
								,TO_CHAR(T1.MNTN_RPR_CNST_END_DT,'YYYY-MM-DD') AS MNTN_RPR_CNST_END_DT
								,LTRIM(TO_CHAR(NVL(T1.MNTN_RPR_CNST_AMT,0),'999,999,999,999,990')) AS MNTN_RPR_CNST_AMT
								,GAM_GET_MNTN_RPR_SE_NM(T1.MNTN_RPR_SE) AS MNTN_RPR_SE_NM
								,T1.ENFORCE_YEAR AS ENFORCE_YEAR
							FROM MNTN_RPR_DTLS_F T1
						WHERE T1.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
						AND T1.FCLTS_JOB_SE = #fcltsJobSe#
						AND EXISTS (SELECT 'Y'
										FROM MNTN_RPR_OBJ_FCLTS_F
									WHERE FCLTS_MNG_GROUP_NO = T1.FCLTS_MNG_GROUP_NO
									AND FCLTS_JOB_SE = T1.FCLTS_JOB_SE
									AND MNTN_RPR_SEQ = T1.MNTN_RPR_SEQ
									AND FCLTS_MNG_NO = #fcltsMngNo#)
						ORDER BY T1.MNTN_RPR_SEQ ASC
				) S
		) T
		<![CDATA[
		WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex#
		]]>
	</select>

</sqlMap>