<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="rte.ygpa.gam.cmmn.fclty">

  <typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
  <typeAlias alias="hashMap" type="java.util.HashMap"/>

  <select id="gamNticRequestMngtDAO.selectLevRequestByPk_S" parameterClass="hashMap" resultClass="egovMap">
    SELECT
      NTIC_CNT,
      PRT_AT_CODE,
      MNG_YEAR,
      MNG_NO,
      MNG_CNT,
      CHRGE_KND,
      FCLTY_SE,
      ENTRPSCD,
      ENTRPS_NM,
      NTIC_PD_FROM,
      NTIC_PD_TO,
      ACCNUT_YEAR,
      NTICNO,
      NTIC_DT,
      PAY_TMLMT,
      SANCTN_STTUS,
      SANCTNER_EMPL_NO,
      SANCTN_DT,
      OLNLP,
      FEE,
      VAT_YN,
      VAT,
      NTIC_AMT,
      RM,
      RCIV_SE,
      RCIV_DT,
      NHT_ISUE_YN,
      ARRRG_NO,
      NVL(ARRRG_AMT,0) ARRRG_AMT,
      REQEST_SEQ,
      DEPTCD,
      NTIC_MTH,
      NHT_PRINT_YN,
      REG_USR,
      REGIST_DT,
      UPD_USR,
      UPDT_DT
      FROM LEV_REQEST_F
      WHERE  PRT_AT_CODE=#prtAtCode#
        AND MNG_YEAR=#mngYear#
        AND MNG_NO=#mngNo#
        AND MNG_CNT=#mngCnt#
        AND NTIC_CNT=#nticCnt#
        AND CHRGE_KND=#chrgeKnd#
  </select>

  <select id="gamNticRequestMngtDAO.selectLevRequestList_D" parameterClass="hashMap" resultClass="egovMap">
    SELECT
      NTIC_CNT,
      PRT_AT_CODE,
      MNG_YEAR,
      MNG_NO,
      MNG_CNT,
      CHRGE_KND,
      FCLTY_SE,
      ENTRPSCD,
      ENTRPS_NM,
      NTIC_PD_FROM,
      NTIC_PD_TO,
      ACCNUT_YEAR,
      NTICNO,
      NTIC_DT,
      PAY_TMLMT,
      SANCTN_STTUS,
      SANCTNER_EMPL_NO,
      SANCTN_DT,
      OLNLP,
      FEE,
      VAT_YN,
      VAT,
      NTIC_AMT,
      RM,
      RCIV_SE,
      RCIV_DT,
      NHT_ISUE_YN,
      ARRRG_NO,
      ARRRG_AMT,
      REQEST_SEQ,
      DEPTCD,
      NTIC_MTH,
      NHT_PRINT_YN,
      REG_USR,
      REGIST_DT,
      UPD_USR,
      UPDT_DT
      FROM LEV_REQEST_PD_BY_STATS_F
      WHERE  PRT_AT_CODE=#prtAtCode#
        AND MNG_YEAR=#mngYear#
        AND MNG_NO=#mngNo#
        AND MNG_CNT=#mngCnt#
        AND NTIC_CNT=#nticCnt#
        <isNotEmpty prepend="AND" property="chrgeKnd">
          CHRGE_KND=#chrgeKnd#
        </isNotEmpty>
  </select>

    <insert id="gamNticRequestMngtDAO.insertNticRequestRevCollF" parameterClass="hashMap" >
        INSERT INTO REV_COLL_F (
      PRT_AT_CODE,
      FEE_TP,
      WORK_CODE,
      FISCAL_YR, BILL_NO,
      AGENT_CODE, BZ_RGST_ID, AGENT_NAME, SSN,
      BILL_DT, DUE_DATE, BILL_PRT_YN,
      BILL_AMNT, EXMP_AMNT, OVER_AMNT, DC_AMNT,
		RCVD_TP,
      UPDT_UID, UPDT_DATE, FIRST_BILL_DT, VAT_YN, VAT, STR_DATE, END_DATE,
      DEPT,USER_NAME
      , REIM_FEE, REIM_BILL_NO, REIM_WORK_CODE, REIM_FEE_TP
      )
        SELECT
      L.PRT_AT_CODE,
      GAM_GET_FEE_TP(#chrgeKnd#) FEE_TP,
      GAM_GET_WORK_CODE(#prtAtCode#, #mngYear#, #mngNo#, #mngCnt#, #nticCnt#, #chrgeKnd#)  WORK_CODE,
      #accnutYear# FISCAL_YR, #nticno# BILL_NO,
      L.ENTRPSCD,
      (SELECT BIZRNO FROM ENTRPS_INFO_F E WHERE L.ENTRPSCD=ENTRPSCD) BZ_RGST_ID,
      (SELECT ENTRPS_NM FROM ENTRPS_INFO_F E WHERE L.ENTRPSCD=ENTRPSCD) AGENT_NAME,
      <![CDATA[
      (SELECT SSN FROM ENTRPS_INFO_F E WHERE L.ENTRPSCD=ENTRPSCD AND LENGTH(SSN)<=50) SSN,
      ]]>
      SYSDATE,
      <isNotEmpty property="payTmlmt">
	      TO_DATE(#payTmlmt#, 'YYYY-MM-DD'),
      </isNotEmpty>
      <isEmpty property="payTmlmt">
	      TRUNC(SYSDATE+15),
      </isEmpty>
       L.NHT_PRINT_YN,
      L.FEE, L.RDCXPT_FEE, 0, 0,
		'0',
      #updUsr#, SYSDATE, SYSDATE, L.VAT_YN, L.VAT, L.NTIC_PD_FROM, L.NTIC_PD_TO,
      #deptCd#,
      #userName#
      , L.REIM_FEE
      , case when L.REIM_FEE>0 then #reimFeeNticno# else '' end
      , case when L.REIM_FEE>0 then L.REIM_CHRGE_KND else '' end
      , case when L.REIM_FEE>0 then 'V4' else '' end
      FROM LEV_REQEST_F L
      WHERE PRT_AT_CODE=#prtAtCode#
      	AND MNG_YEAR=#mngYear#
      	AND MNG_NO=#mngNo#
      	AND MNG_CNT=#mngCnt#
      	AND NTIC_CNT=#nticCnt#
      	AND CHRGE_KND=#chrgeKnd#
    </insert>

    <insert id="gamNticRequestMngtDAO.insertNticRequestInterestRevCollF" parameterClass="hashMap" >
        INSERT INTO REV_COLL_F (
      PRT_AT_CODE,
      FEE_TP,
      WORK_CODE,
      FISCAL_YR, BILL_NO,
      AGENT_CODE, BZ_RGST_ID, AGENT_NAME, SSN,
      BILL_DT, DUE_DATE, BILL_PRT_YN,
      BILL_AMNT, EXMP_AMNT, OVER_AMNT, DC_AMNT,
		RCVD_TP,
      UPDT_UID, UPDT_DATE, FIRST_BILL_DT, VAT_YN, VAT, STR_DATE, END_DATE,
      DEPT,USER_NAME
      , REIM_FEE, REIM_BILL_NO, REIM_WORK_CODE, REIM_FEE_TP
      )
        SELECT
      L.PRT_AT_CODE,
      GAM_GET_FEE_TP(#intrChrgeKnd#) FEE_TP,
      GAM_GET_WORK_CODE(#prtAtCode#, #mngYear#, #mngNo#, #mngCnt#, #nticCnt#, #intrChrgeKnd#)  WORK_CODE,
      #accnutYear# FISCAL_YR, #nticno# BILL_NO,
      L.ENTRPSCD,
      (SELECT BIZRNO FROM ENTRPS_INFO_F E WHERE L.ENTRPSCD=ENTRPSCD) BZ_RGST_ID,
      (SELECT ENTRPS_NM FROM ENTRPS_INFO_F E WHERE L.ENTRPSCD=ENTRPSCD) AGENT_NAME,
      (SELECT SSN FROM ENTRPS_INFO_F E WHERE L.ENTRPSCD=ENTRPSCD) SSN,
      SYSDATE,
      <isNotEmpty property="payTmlmt">
	      TO_DATE(#payTmlmt#, 'YYYY-MM-DD'),
      </isNotEmpty>
      <isEmpty property="payTmlmt">
	      TRUNC(SYSDATE+15),
      </isEmpty>
       L.NHT_PRINT_YN,
      L.INTR_AMNT, 0, 0, 0,
		'0',
      #updUsr#, SYSDATE, SYSDATE, L.VAT_YN, L.VAT, L.NTIC_PD_FROM, L.NTIC_PD_TO,
      #deptCd#,
      #userName#
      , L.REIM_FEE
      , case when L.REIM_FEE>0 then #reimFeeNticno# else '' end
      , case when L.REIM_FEE>0 then L.REIM_CHRGE_KND else '' end
      , case when L.REIM_FEE>0 then 'V4' else '' end
      FROM LEV_REQEST_F L
      WHERE PRT_AT_CODE=#prtAtCode#
      	AND MNG_YEAR=#mngYear#
      	AND MNG_NO=#mngNo#
      	AND MNG_CNT=#mngCnt#
      	AND NTIC_CNT=#nticCnt#
      	AND CHRGE_KND=#chrgeKnd#
    </insert>

    <insert id="gamNticRequestMngtDAO.insertNticRequestRevCollFC1" parameterClass="hashMap" >
        INSERT INTO UNPAID_F (
      PRT_AT_CODE, FEE_TP, WORK_CODE, FISCAL_YR, BILL_NO,
      DLY_SER_NO, DLY_BILL_AMNT, DLY_BILL_DT, DLY_DUE_DT, DLY_RCVD_DT, DLY_BILL_PRT_YN, DLY_RCVD_TP,
      FIRST_BILL_DT, DBILL_AMNT,
      BZ_RGST_ID, DLY_BILL_RSN,UPDT_UID,UPDT_DATE, AGENT_CODE,
      ACCNT_CODE,ICHE_STATUS,POST_BILL_YN,STR_DATE,END_DATE,
      DEPT, EMPL, PRV_DUE_DT, DJIRO_AMNT, USER_NAME, PRV_BILL_DT
      )
      SELECT
              L.PRT_AT_CODE, GAM_GET_FEE_TP(L.CHRGE_KND), L.CHRGE_KND, L.ACCNUT_YEAR,
     	L.NTICNO, #dlySerNo#,
      	#dlyBillAmnt#, TO_DATE(#dlyBillDt#, 'YYYY-MM-DD'), TO_DATE(#dlyDueDt#, 'YYYY-MM-DD') PAY_TMLMT, null, 'N', '1',
      	#firstBillDt#, #dBillAmnt#,
      	GAM_GETENTRPSNM(L.ENTRPSCD, '2'),
      	#dlyBillRsn#,
      	#updUsr#, SYSDATE, L.ENTRPSCD, '194', 'N', 'N','','',
      	#deptCd#, #emplNo#, L.PAY_TMLMT, TRUNC(L.NTIC_AMT+#dlyBillAmnt#, -1),       #userName#, L.NTIC_DT
      FROM LEV_REQEST_F L
      WHERE PRT_AT_CODE=#prtAtCode#
      	AND MNG_YEAR=#mngYear#
      	AND MNG_NO=#mngNo#
      	AND MNG_CNT=#mngCnt#
      	AND NTIC_CNT=#nticCnt#
      	AND CHRGE_KND=#chrgeKnd#
    </insert>

    <delete id="gamNticRequestMngtDAO.deleteNticRequestRevCollFC1" parameterClass="hashMap" >
            DELETE FROM UNPAID_F WHERE (PRT_AT_CODE, FEE_TP, WORK_CODE, FISCAL_YR, BILL_NO) IN
     (
     	SELECT
              PRT_AT_CODE, GAM_GET_FEE_TP(CHRGE_KND), CHRGE_KND, ACCNUT_YEAR, NTICNO
		FROM LEV_REQEST_F
      	WHERE PRT_AT_CODE=#prtAtCode#
	      	AND MNG_YEAR=#mngYear#
	      	AND MNG_NO=#mngNo#
	      	AND MNG_CNT=#mngCnt#
	      	AND NTIC_CNT=#nticCnt#
	      	AND CHRGE_KND=#chrgeKnd#
      	)
      	order by dly_ser_no desc
    </delete>

      <select id="gamNticRequestMngtDAO.selectNticNoAccnutYear_S" parameterClass="hashMap" resultClass="egovMap">
		SELECT LPAD(NVL(MAX(BILL_NO), 0) + 1, 6, '0') NTICNO,
		       TO_CHAR(SYSDATE, 'YYYY') ACCNUT_YEAR
		FROM REV_COLL_F
		WHERE PRT_AT_CODE = #prtAtCode# AND FEE_TP = GAM_GET_FEE_TP(#chrgeKnd#) AND FISCAL_YR = TO_CHAR(SYSDATE, 'YYYY')
		</select>

      <select id="gamNticRequestMngtDAO.selectReimNticNoAccnutYear_S" parameterClass="hashMap" resultClass="egovMap">
		SELECT LPAD(NVL(MAX(REIM_BILL_NO), 0) + 1, 6, '0') REIM_FEE_NTICNO,
		       TO_CHAR(SYSDATE, 'YYYY') ACCNUT_YEAR
		FROM REV_COLL_F
		WHERE PRT_AT_CODE = #prtAtCode# AND FEE_TP = GAM_GET_FEE_TP(#reimChrgeKnd#) AND FISCAL_YR = TO_CHAR(SYSDATE, 'YYYY')
		</select>

      <select id="gamNticRequestMngtDAO.selectNticRequestRcvdTp_S" parameterClass="hashMap" resultClass="egovMap">
		SELECT BILL_NO,
				RCVD_TP,
		       RCVD_DT,
		       BILL_PRT_YN
		FROM REV_COLL_F P,
				(
					SELECT PRT_AT_CODE, ACCNUT_YEAR, NTICNO, CHRGE_KND
					FROM LEV_REQEST_F
					WHERE PRT_AT_CODE=#prtAtCode# AND MNG_YEAR=#mngYear# AND MNG_NO=#mngNo# AND MNG_CNT=#mngCnt# AND NTIC_CNT=#nticCnt# AND CHRGE_KND=#chrgeKnd#
				) L
		WHERE P.PRT_AT_CODE = L.PRT_AT_CODE
			AND P.FISCAL_YR=L.ACCNUT_YEAR
			AND P.FEE_TP = GAM_GET_FEE_TP(L.CHRGE_KND)
			AND BILL_NO=L.NTICNO
		</select>

      <delete id="gamNticRequestMngtDAO.deleteNticRequestRevCollF">
        DELETE FROM REV_COLL_F P
			WHERE EXISTS (
				SELECT '1' FROM (SELECT PRT_AT_CODE, CHRGE_KND, ACCNUT_YEAR, NTICNO
					FROM LEV_REQEST_F
					WHERE PRT_AT_CODE=#prtAtCode# AND MNG_YEAR=#mngYear# AND MNG_NO=#mngNo# AND MNG_CNT=#mngCnt# AND NTIC_CNT=#nticCnt# AND CHRGE_KND=#chrgeKnd#
					) L
				WHERE P.PRT_AT_CODE = L.PRT_AT_CODE
					AND P.FEE_TP = GAM_GET_FEE_TP(L.CHRGE_KND)
					AND P.FISCAL_YR = L.ACCNUT_YEAR
					AND P.BILL_NO=L.NTICNO
					)
    </delete>

    <update id="gamNticRequestMngtDAO.updateLevReqestArrrgAmt" parameterClass="hashMap">
        UPDATE LEV_REQEST_F SET
        	NTIC_DT=TO_DATE(#dlyBillDt#, 'YYYY-MM-DD'),
        	PAY_TMLMT=TO_DATE(#dlyDueDt#, 'YYYY-MM-DD'),
      		ARRRG_NO=#dlySerNo#,
      		ARRRG_AMT=TRUNC(TO_NUMBER(#dlyBillAmnt#), -1),
      		ARRRG_TARIFF=TO_NUMBER(#arrrgTariff#),
      		ARRRG_PAY_DATES=#applyPayDates#,
      		<!-- NTIC_AMT=TRUNC(FEE+NVL(VAT,0)+NVL(REIM_FEE,0)+TO_NUMBER(#dlyBillAmnt#), -1), -->
      		<isNotNull property="rcivSe">
	      		RCIV_SE=#rcivSe#,
      		</isNotNull>
      		UPD_USR=#updUsr#,
      		UPDT_DT=SYSDATE
     	WHERE
			PRT_AT_CODE=#prtAtCode#
	      	AND MNG_YEAR=#mngYear#
	      	AND MNG_NO=#mngNo#
	      	AND MNG_CNT=#mngCnt#
	      	AND NTIC_CNT=#nticCnt#
	      	AND CHRGE_KND=#chrgeKnd#
  </update>

    <update id="gamNticRequestMngtDAO.updateLevReqestUnarrrgAmt" parameterClass="hashMap">
        UPDATE LEV_REQEST_F SET
      		RCIV_SE='0',
      		ARRRG_NO='',
      		ARRRG_AMT='',
      		ARRRG_TARIFF='',
      		ARRRG_PAY_DATES=0,
      		NTIC_DT=#prvBillDt#,
      		<!-- NTIC_AMT=FEE+NVL(VAT,0)+NVL(REIM_FEE,0), -->
      		PAY_TMLMT=TO_DATE(#dlyDueDt#, 'YYYY-MM-DD'),
      		UPD_USR=#updUsr#,
      		UPDT_DT=SYSDATE
     	WHERE
			PRT_AT_CODE=#prtAtCode#
	      	AND MNG_YEAR=#mngYear#
	      	AND MNG_NO=#mngNo#
	      	AND MNG_CNT=#mngCnt#
	      	AND NTIC_CNT=#nticCnt#
	      	AND CHRGE_KND=#chrgeKnd#
  </update>

     <select id="gamNticRequestMngtDAO.selectLevReqestInterest" parameterClass="hashMap" resultClass="java.lang.String">
			SELECT TRUNC( (NTIC_PD_TO-NTIC_PD_FROM)/365*FEE*TO_NUMBER('2.54')/100, -1) INTR_AMNT
			FROM LEV_REQEST_F
			WHERE PRT_AT_CODE=#prtAtCode# AND MNG_YEAR=#mngYear# AND MNG_NO=#mngNo# AND MNG_CNT=#mngCnt# AND NTIC_CNT=#nticCnt# AND CHRGE_KND=#chrgeKnd#
	</select>

    <update id="gamNticRequestMngtDAO.updateLevReqestIssueYn" parameterClass="hashMap">
        UPDATE LEV_REQEST_F SET
      		NHT_ISUE_YN=#nhtIsueYn#,
      		NTICNO=#nticno#,
      		ACCNUT_YEAR=#accnutYear#,
      		NHT_PRINT_YN = #nhtPrintYn#
       <isNotEmpty prepend="," property="intrChrgeKnd">
       		INTR_CHRGE_KND=#intrChrgeKnd#
     	</isNotEmpty>
       <isNotEmpty prepend="," property="intrRate">
       		INTR_RATE=#intrAmnt#
     	</isNotEmpty>
       <isNotEmpty prepend="," property="intrAmnt">
       		INTR_AMNT=#intrAmnt#
     	</isNotEmpty>
       <isNotEmpty prepend="," property="nticAmt">
       		NTIC_AMT=#nticAmt#
     	</isNotEmpty>
       <isNotEmpty prepend="," property="vat">
       		VAT=#vat#
     	</isNotEmpty>
       <isNotEmpty prepend="," property="payTmlmt">
       		PAY_TMLMT=#payTmlmt#
     	</isNotEmpty>
       <isNotEmpty prepend="," property="frstPayTmlmt">
       		FRST_PAY_TMLMT=#payTmlmt#
     	</isNotEmpty>
       <isEqual prepend="," property="nhtIsueYn" compareValue="Y">
       		NTIC_DT=SYSDATE
     	</isEqual>
       <isNotEqual prepend="," property="nhtIsueYn" compareValue="Y">
       		NTIC_DT=''
     	</isNotEqual>
     	WHERE
			PRT_AT_CODE=#prtAtCode#
	      	AND MNG_YEAR=#mngYear#
	      	AND MNG_NO=#mngNo#
	      	AND MNG_CNT=#mngCnt#
	      	AND NTIC_CNT=#nticCnt#
	      	AND CHRGE_KND=#chrgeKnd#
  </update>

  <update id="gamNticRequestMngtDAO.updateLevReqestNhtPrintYn" parameterClass="hashMap">
        UPDATE LEV_REQEST_F SET
      		NHT_PRINT_YN=#nhtPrintYn#
      		WHERE
			PRT_AT_CODE=#prtAtCode#
      	AND MNG_YEAR=#mngYear#
      	AND MNG_NO=#mngNo#
      	AND MNG_CNT=#mngCnt#
      	AND NTIC_CNT=#nticCnt#
	    AND CHRGE_KND=#chrgeKnd#
      	<!-- AND CHRGE_KND=#chrgeKnd# -->
  </update>

  <update id="gamNticRequestMngtDAO.updateRevCollFBillPrintYn" parameterClass="hashMap">
      <![CDATA[
        UPDATE REV_COLL_F SET
      		BILL_PRT_YN=#nhtPrintYn#
      		WHERE (PRT_AT_CODE, WORK_CODE, FISCAL_YR, BILL_NO)
            IN (
              SELECT PRT_AT_CODE, CHRGE_KND, ACCNUT_YEAR, NTICNO
              FROM LEV_REQEST_F
              WHERE 1=1
              		AND PRT_AT_CODE=#prtAtCode#
			      	AND MNG_YEAR=#mngYear#
			      	AND MNG_NO=#mngNo#
			      	AND MNG_CNT=#mngCnt#
			      	AND NTIC_CNT=#nticCnt#
			      	AND CHRGE_KND=#chrgeKnd#
            )
            AND rcvd_tp<>'3'
            ]]>
  </update>

  <update id="gamNticRequestMngtDAO.updateUnpaidFBillPrintYn" parameterClass="hashMap">
    <![CDATA[
        UPDATE UNPAID_F SET
      		DLY_BILL_PRT_YN=#nhtPrintYn#
      		WHERE (PRT_AT_CODE, WORK_CODE, FISCAL_YR, BILL_NO, DLY_SER_NO)
            IN (
              SELECT PRT_AT_CODE, CHRGE_KND, ACCNUT_YEAR, NTICNO, ARRRG_NO
              FROM LEV_REQEST_F
              WHERE 1=1
              		AND PRT_AT_CODE=#prtAtCode#
			      	AND MNG_YEAR=#mngYear#
			      	AND MNG_NO=#mngNo#
			      	AND MNG_CNT=#mngCnt#
			      	AND NTIC_CNT=#nticCnt#
			      	AND CHRGE_KND=#chrgeKnd#
                AND ARRRG_NO IS NOT NULL
            )
            AND dly_rcvd_tp<>'3'
            ]]>
  </update>

  <delete id="gamNticRequestMngtDAO.deleteAssetsUsagePdByStats_D" parameterClass="hashMap">
    <![CDATA[
      DELETE FROM USAGE_PD_BY_STATS_F
      WHERE PRT_AT_CODE=#prtAtCode#
        AND MNG_YEAR=#mngYear#
        AND MNG_NO=#mngNo#
        AND MNG_CNT=#mngCnt#
    ]]>
  </delete>

      <insert id="gamNticRequestMngtDAO.insertLevReqestPdByStats">
    <![CDATA[
        INSERT INTO LEV_REQEST_PD_BY_STATS_F (
      NTIC_YEAR,
      NTIC_QU,
      NTIC_MT,
      NTIC_CNT,
      PRT_AT_CODE,
      MNG_YEAR,
      MNG_NO,
      MNG_CNT,
      CHRGE_KND,
      ENTRPSCD,
      ACCNUT_YEAR,
      NTICNO,
      NTIC_DT,
      NTIC_PD_FROM,
      NTIC_PD_TO,
      FEE,
      RDCXPT_FEE,
      DEPTCD,
      REG_USR,
      REGIST_DT,
      UPD_USR,
      UPDT_DT
    )
    SELECT
    TO_CHAR(START_DATE, 'YYYY'),
    DECODE(TO_CHAR(START_DATE, 'MM'),'01','1','02','1','03','1','04','2','05','2','06','2','07','3','08','3', '09','3','4'),
     TO_CHAR(START_DATE, 'MM'),
     LPAD(NTIC_CNT, 2, '0'),
    #prtAtCode#, #mngYear#, #mngNo#, #mngCnt#, FEE_TP, #entrpscd# ENTRPSCD, ACCNUT_YEAR,
    NTICNO,NTIC_DT,NTIC_PD_FROM,NTIC_PD_TO,
    RNTFEE,
    0,
    #deptcd#,
    #regUsr#,
    #registDt#,
    #updUsr#, SYSDATE
    from (
      SELECT A.FEE_TP, NTIC_CNT, DECODE(A.FEE_TP, #chrgeKnd#, RNTFEE, 'A3', TRUNC(REFE*(RATE_DAY)/365*A.RATE, -1)) RNTFEE, REFE, START_DATE, PREV_DUE_DATE, DUE_DATE, END_DATE
      FROM (
      SELECT #chrgeKnd# FEE_TP, 1 RATE FROM dual
      UNION ALL SELECT 'A3', TO_NUMBER(#payinstIntrrate#, '0.0000') FROM dual
      ) A, (
      SELECT ROWNUM                                                                                                                                                     AS NTIC_CNT,
          TRUNC(#fee#                                                                    / (TRUNC(MONTHS_BETWEEN(TO_DATE(#nticPdTo#,'YYYY-MM-DD'), TO_DATE(#nticPdFrom#,'YYYY-MM-DD')) / 1)+1), -1)                          AS RNTFEE,
          TRUNC(#fee#                                                                    - ((#fee#/(TRUNC(MONTHS_BETWEEN(TO_DATE(#nticPdTo#,'YYYY-MM-DD'), TO_DATE(#nticPdFrom#,'YYYY-MM-DD')) / 1)+1)) * (ROWNUM-1)), -1) AS REFE,
          ADD_MONTHS(TO_DATE(#nticPdFrom#,'YYYY-MM-DD'), 1                      * (ROWNUM-1))                                                                                                                                     AS START_DATE,
          DECODE(ROWNUM, 1, 0, ADD_MONTHS(TO_DATE(#nticPdFrom#,'YYYY-MM-DD'), 1 * (ROWNUM-1))-ADD_MONTHS(TO_DATE(#nticPdFrom#,'YYYY-MM-DD'), 1 * (ROWNUM-1)-1))                                                        AS RATE_DAY,
          LAG(ADD_MONTHS(TO_DATE(#nticPdFrom#,'YYYY-MM-DD'), 1                  * (ROWNUM-1))+14) OVER (ORDER BY ROWNUM)                                                                                                          AS PREV_DUE_DATE,
          ADD_MONTHS(TO_DATE(#nticPdFrom#,'YYYY-MM-DD'), 1                      * (ROWNUM-1))+14                                                                                                                                  AS DUE_DATE,
          (
          CASE
            WHEN TO_DATE(#nticPdTo#,'YYYY-MM-DD') < ADD_MONTHS(TO_DATE(#nticPdFrom#,'YYYY-MM-DD'), 1 * ROWNUM) - 1
            THEN TO_DATE(#nticPdTo#,'YYYY-MM-DD')
            ELSE ADD_MONTHS(TO_DATE(#nticPdFrom#,'YYYY-MM-DD'), 1 * ROWNUM) - 1
          END ) AS END_DATE
        FROM COMTCCMMNDETAILCODE
        WHERE ROWNUM <= (TRUNC(MONTHS_BETWEEN(TO_DATE(#nticPdTo#,'YYYY-MM-DD'), TO_DATE(#nticPdFrom#,'YYYY-MM-DD')) / 1)+1)
         ) B
    )
    WHERE RNTFEE<>0
    ]]>

    </insert>

  <delete id="gamNticRequestMngtDAO.deleteLevReqestPdByStats" parameterClass="hashMap">
    <![CDATA[
      DELETE FROM LEV_REQEST_PD_BY_STATS_F
      WHERE PRT_AT_CODE=#prtAtCode#
        AND MNG_YEAR=#mngYear#
        AND MNG_NO=#mngNo#
        AND MNG_CNT=#mngCnt#
	    AND CHRGE_KND=#chrgeKnd#
    ]]>
  </delete>

    <select id="gamNticRequestMngtDAO.selectRevCollF" parameterClass="map" resultClass="egovMap">
        /*+ gamNticRequestMngtDAO.selectRevCollF */
        /* [전자고지] 고지 정보 조회 eunsungj */
        SELECT
			R.PRT_AT_CODE,
			R.FEE_TP,
			R.FISCAL_YR,
			R.BILL_NO,
			R.VSSL_KEY,
			R.YR,
			R.SER_NO,
			R.ACCNT_CODE,
			R.AGENT_CODE,
			R.BILL_AMNT,
			R.BILL_AMNT_R3,
			R.BILL_AMNT_R2,
			R.BILL_AMNT_R1,
			TO_CHAR(R.BILL_DT, 'YYYYMMDD') BILL_DT,
			R.BILL_PRT_YN,
			R.AMNT_RSN,
			R.SSN,
			TO_CHAR(R.DUE_DATE, 'YYYYMMDD') DUE_DATE,
			TO_CHAR(R.FIRST_BILL_DT, 'YYYYMMDD') FIRST_BILL_DT,
			R.ICHE_STATUS,
			R.BZ_RGST_ID,
			R.AGENT_NAME,
			R.IO_TP,
			TO_CHAR(R.RCVD_DT, 'YYYYMMDD') RCVD_DT,
			R.RCVD_TP,
			R.RSLT_CODE,
			R.VSSL_KOR_NM,
			TO_CHAR(R.UPDT_DATE, 'YYYYMMDD') UPDT_DATE,
			R.UPDT_UID,
			R.EXMP_AMNT,
			R.OVER_AMNT,
			R.SALIMI_NO,
			TO_CHAR(R.IO_DT, 'YYYYMMDD') IO_DT,
			R.DC_AMNT,
			R.DC_CODE,
			R.DC_RATE,
			R.RCVD_NM,
			TO_CHAR(R.RECPT_EPDT, 'YYYYMMDD') RECPT_EPDT,
			R.POST_BILL_YN,
			R.NOPAY_LOSS_REAS_CD,
			R.ELCT_BILL_RSLT,
			TO_CHAR(R.BULL_INFO_INQR_DTIME, 'YYYYMMDD') BULL_INFO_INQR_DTIME,
			R.LAST,
			R.VAT,
			R.VAT_YN,
			R.JINGSUJA,
			R.JIRO_RCVD_TP,
			R.JIRO_RCVD_BR,
			R.COMMISSION,
			R.MAGAM_FLAG,
			TO_CHAR(R.OCR_DT, 'YYYYMMDD') OCR_DT,
			R.DEPT,
			R.EMPL,
			R.WORK_CODE,
			R.ORIGIN_FEE_TP,
			R.ORIGIN_FISCAL_YR,
			R.ORIGIN_BILL_NO,
			R.CYBER_VAT,
			R.VACCT_NO,
			TO_CHAR(R.END_DATE, 'YYYYMMDD') END_DATE,
			R.FAC_CODE,
			R.FAC_SUB_CODE,
			TO_CHAR(R.STR_DATE, 'YYYYMMDD') STR_DATE,
			R.CALL_LETTER,
			R.CNV_YN,
			R.INPUT_YN,
			R.FINAL_FLAG,
			R.RESPONSE_DESC1,
			R.RESPONSE_DESC2,
			R.LOGIS_CONFIRM_NAME,
			R.LOGIS_SEND_YN,
			R.SENDING_COUNT,
			R.BILL_COUNT,
			R.RCVD_COUNT,
			R.TAX_CODE,
			R.TAX_MODIFY_CODE,
			R.VAT1,
			R.VAT2,
			R.VAT3,
			R.SMALL_BILL_NO_INFO,
			R.SMALL_BILL_NO,
			R.SMALL_FISCAL_YR,
			R.SMALL_BILL_YN,
			R.BILL_AMNT_BF,
			R.USER_NAME,
			<!--
			(R.BILL_AMNT+NVL(R.VAT, 0)+NVL(R.REIM_FEE, 0)) BILL_SUM_AMNT,
			 -->
			 L.NTIC_AMT BILL_SUM_AMNT,
      		L.ARRRG_NO DLY_SER_NO,
      		TO_CHAR(L.PAY_TMLMT, 'YYYYMMDD') DLY_DUE_DT
        FROM REV_COLL_F R, LEV_REQEST_F L
        WHERE 1=1
          AND L.PRT_AT_CODE=#prtAtCode#
          AND L.MNG_YEAR=#mngYear#
          AND L.MNG_NO=#mngNo#
          AND L.MNG_CNT=#mngCnt#
          AND L.NTIC_CNT=#nticCnt#
          AND L.CHRGE_KND=#chrgeKnd#
                    AND R.PRT_AT_CODE = L.PRT_AT_CODE
          AND R.FEE_TP = GAM_GET_FEE_TP(L.CHRGE_KND)
          AND R.FISCAL_YR = L.ACCNUT_YEAR
          AND R.BILL_NO = L.NTICNO
    </select>

	<select id="gamNticRequestMngtDAO.selectEgiroInfoByPk" parameterClass="map" resultClass="egovMap">
        /*+ gamNticRequestMngtDAO.selectEgiroInfoByPk */
        /* [전자고지] 고지 정보 조회 eunsungj */
        SELECT
		  R.PRT_AT_CODE,
		  R.FEE_TP,
		  R.FISCAL_YR,
		  R.BILL_NO,
		  decode(R.PRT_AT_CODE, '620', '6374604', '621', '6374604', '622', '6374594') GIRO_NUM,
		  decode(R.PRT_AT_CODE, '620', '1', '621', '2', '622', '3') PRT_AT_NUM,
		  '00' DLY_SER_NO,
		  TO_CHAR(L.PAY_TMLMT, 'YYYYMMDD') DUE_DATE,
		  '0' BILL_TYPE,
		  '0' CUSTOMER_NO,
		  L.FEE+L.VAT AMOUNT,
		  L.FEE+L.VAT AMOUNT_AF,
		  L.ARRRG_NO,
		  L.ARRRG_AMT,
		  R.AGENT_CODE,
		  R.BZ_RGST_ID,
		  R.AGENT_NAME,
		  TO_CHAR(R.BILL_DT, 'YYYYMM') BILL_YYYYMM,
  			TO_CHAR(SYSDATE, 'YYYYMMDD') CURRENT_DATE
		FROM REV_COLL_F R,
		  LEV_REQEST_F L
		WHERE 1           =1
          AND L.PRT_AT_CODE=#prtAtCode#
          AND L.MNG_YEAR=#mngYear#
          AND L.MNG_NO=#mngNo#
          AND L.MNG_CNT=#mngCnt#
          AND L.NTIC_CNT=#nticCnt#
          AND L.CHRGE_KND=#chrgeKnd#
			AND R.PRT_AT_CODE = L.PRT_AT_CODE
			AND R.FEE_TP      = GAM_GET_FEE_TP(L.CHRGE_KND)
			AND R.FISCAL_YR   = L.ACCNUT_YEAR
			AND R.BILL_NO     = L.NTICNO
			AND l.arrrg_no is not null
	</select>

      <insert id="gamNticRequestMngtDAO.insertEgiroPrint" parameterClass="map">
        /* gamNticRequestMngtDAO.insertEgiroPrint */
        /* 전자고지 체계 구축 고지출력 kang (EGIRO) */
        INSERT INTO PAYEOSU.EGIRO@YGPA_PORTMIS (
           PRT_AT_CODE
         , TRANID
         , WORK_DT
         , PRINT_DT
         , CANCEL_DT
         , EGIRO_TYPE
         , DATA_TYPE
         , SEQ_NUM
         , CUSTOMER_NUM
         , AMOUNT
         , AMOUNT_AF
         , DATA_FORMAT
         , DUE_DATE
         , CLOSE_DATE
         , GIRO_NUM
         , EGIRO_NUM
         , AGENT_CODE
         , BILL_TYPE
         , ETC_TYPE
         , KOR_NM
         , BZ_RGST_ID
         , BILL_YYYYMM
         , ADDR
         , RET_CODE
         , RCVD_SEQ
         , CHENAP_TIME
         , CHENAP_MM
         , ETC_COUNT
         , ETC_TITLE
         , ETC_TXT
         , SEND_YN
         , FEE_TP
         , FISCAL_YR
         , BILL_NO
         , DLY_SER_NO)
        VALUES (
           #prtAtCode#
         , TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISSSSSFF')||RPAD(NVL(#prtAtCode#,' '),3)
         , TO_CHAR(SYSDATE, 'YYYYMMDD')
         , #printDt#
         , #cancelDt#
         , 'GR6533'
         , '22'
         , ''
         , #makedigit#
         , #amount#
         , #amouuntAf#
         , 'A'
         , #dueDate#
         , TO_CHAR(ADD_MONTHS(to_date(#dueDate#,'yyyymmdd'),1),'YYYYMMDD')
         , #giroNum#
         , #egiroNum#
         , #agentCode#
         , #billType#
         , '00'
         , #korNm#
         , NVL(#bzRgstId#, '1111111111')
         , #billYyyymm#
         , #addr#
         , ' '
         , '0'
         , ''
         , ''
         , '00'
         , ''
         , ''
         , ''
         , #feeTp#
         , #fiscalYr#
         , #billNo#
         , #dlySerNo#
        )
    </insert>

      <insert id="gamNticRequestMngtDAO.insertEgiroPrint2" parameterClass="map">
        /* gamNticRequestMngtDAO.insertEgiroPrint2 */
        /* 전자고지 체계 구축 고지출력 eunsungj (EGIRO) */
        INSERT INTO PAYEOSU.EGIRO@YGPA_PORTMIS (
           PRT_AT_CODE
         , TRANID
         , WORK_DT
         , PRINT_DT
         , CANCEL_DT
         , EGIRO_TYPE
         , DATA_TYPE
         , SEQ_NUM
         , CUSTOMER_NUM
         , AMOUNT
         , AMOUNT_AF
         , DATA_FORMAT
         , DUE_DATE
         , CLOSE_DATE
         , GIRO_NUM
         , EGIRO_NUM
         , AGENT_CODE
         , BILL_TYPE
         , ETC_TYPE
         , KOR_NM
         , BZ_RGST_ID
         , BILL_YYYYMM
         , ADDR
         , RET_CODE
         , RCVD_SEQ
         , CHENAP_TIME
         , CHENAP_MM
         , ETC_COUNT
         , ETC_TITLE
         , ETC_TXT
         , SEND_YN
         , FEE_TP
         , FISCAL_YR
         , BILL_NO
         , DLY_SER_NO)
        VALUES (
           #prtAtCode#
         , TO_CHAR(SYSTIMESTAMP,'YYYYMMDDHH24MISSSSSFF')||RPAD(NVL(#prtAtCode#,' '),3)
         , TO_CHAR(SYSDATE, 'YYYYMMDD')
         , TO_CHAR(SYSDATE, 'YYYYMMDD')
         , ''
         , 'GR6533'
         , '22'
         , ''
         , #makedigit#
         , #amount#
         , #amountAf#
         , 'A'
         , #dueDate#
         , TO_CHAR(ADD_MONTHS(to_date(#dueDate#,'yyyymmdd'),1),'YYYYMMDD')
         , #giroNum#
         , #egiroNum#
         , #agentCode#
         , #billType#
         , '00'
         , #korNm#
         , NVL(#bzRgstId#, '1111111111')
         , #billYyyymm#
         , #addr#
         , ' '
         , '0'
         , ''
         , ''
         , '00'
         , ''
         , ''
         , ''
         , #feeTp#
         , #fiscalYr#
         , #billNo#
         , #dlySerNo#
        )
    </insert>

    <update id="gamNticRequestMngtDAO.updateEgiroPrintCancel" parameterClass="map">
        /*+ ygpam.fdr.rev.mgt.updateEgiroPrintCancel */
        /* 전자고지 체계 구축 고지출력취소 kang */
        UPDATE PAYEOSU.EGIRO@YGPA_PORTMIS
        SET CANCEL_DT = TO_CHAR(SYSDATE, 'YYYYMMDD')
          , DUE_DATE = TO_CHAR(SYSDATE+1, 'YYYYMMDD')
        WHERE PRT_AT_CODE = #prtAtCode#
          AND FEE_TP      = #feeTp#
          AND FISCAL_YR   = #fiscalYr#
          AND BILL_NO     = #billNo#
          AND DLY_SER_NO  = #dlySerNo#
          AND TRANID	  = #tranId#
    </update>

    <select id="gamNticRequestMngtDAO.getWorkDtSysdateInfo" parameterClass="map" resultClass="egovMap">
        /*+ gamNticRequestMngtDAO.getWorkDtSysdateInfo */
        /* [전자고지] 당일고지발행했다가 취소하는 건인지 구분 kang */
        SELECT TRANID, WORK_DT, CANCEL_DT, PRINT_DT, TO_CHAR(SYSDATE, 'YYYYMMDD') CURR_DT
        FROM PAYEOSU.EGIRO@YGPA_PORTMIS
        WHERE PRT_AT_CODE = #prtAtCode#
          AND FEE_TP = #feeTp#
          AND FISCAL_YR = #fiscalYr#
          AND BILL_NO = #billNo#
          AND DLY_SER_NO = #dlySerNo#
          AND WORK_DT = TO_CHAR(SYSDATE, 'YYYYMMDD')
          AND CANCEL_DT IS NULL
    </select>


    <select id="gamNticRequestMngtDAO.getWorkDtInfo" parameterClass="map" resultClass="egovMap">
        /*+ gamNticRequestMngtDAO.getWorkDtInfo */
        /* [전자고지] 고지발행했다가 취소하는 건인지 구분 kang */
        SELECT TRANID, WORK_DT, CANCEL_DT, PRINT_DT, TO_CHAR(SYSDATE, 'YYYYMMDD') CURR_DT
        FROM PAYEOSU.EGIRO@YGPA_PORTMIS
        WHERE TRANID = (SELECT MAX(TRANID)
        FROM PAYEOSU.EGIRO@YGPA_PORTMIS
        WHERE PRT_AT_CODE = #prtAtCode#
          AND FEE_TP = #feeTp#
          AND FISCAL_YR = #fiscalYr#
          AND BILL_NO = #billNo#
          AND DLY_SER_NO = #dlySerNo#
          AND CANCEL_DT IS NULL)
    </select>

    <select id="gamNticRequestMngtDAO.getEgiroAgentInfo" parameterClass="map" resultClass="egovMap">
        /*+ gamNticRequestMngtDAO.getEgiroAgentInfo */
        /* [전자고지] 업체의 대표자명, 주소를 찾아오는 쿼리 kang */
        SELECT e.rprsntv_nm KOR_NM, e.adres ADDR
		FROM REV_COLL_F R, ENTRPS_INFO_F E
		WHERE R.AGENT_CODE=e.entrpscd
          AND R.PRT_AT_CODE = #prtAtCode#
          AND R.FEE_TP      = #feeTp#
          AND R.FISCAL_YR   = #fiscalYr#
          AND R.BILL_NO     = #billNo#
          <!--
        SELECT DECODE(REV_COLL_F.AGENT_CODE,'XXX9999',SF_BILL_PRT_NM_KOR_PRT(REV_COLL_F.PRT_AT_CODE, NULL, 'XXX9999', NULL, CALL_LETTER), SHP_OWOP_F.KOR_NM) AS KOR_NM
             , DECODE(REV_COLL_F.AGENT_CODE,'XXX9999',SF_BILL_PRT_ADDR_KOR_PRT(REV_COLL_F.PRT_AT_CODE, NULL, 'XXX9999', NULL, CALL_LETTER), SHP_OWOP_F.ADDR) AS ADDR
        FROM PAYEOSU.REV_COLL_F, SHP_OWOP_F
        WHERE REV_COLL_F.AGENT_CODE = SHP_OWOP_F.AGENT_CODE
          AND REV_COLL_F.PRT_AT_CODE = #prtAtCode#
          AND REV_COLL_F.FEE_TP      = #feeTp#
          AND REV_COLL_F.FISCAL_YR   = #fiscalYr#
          AND REV_COLL_F.BILL_NO     = #billNo#
           -->
    </select>

    <select id="gamNticRequestMngtDAO.getEgiroFeeTpMap" parameterClass="map" resultClass="egovMap">
        /*+ gamNticRequestMngtDAO.getEgiroFeeTpMap */
        /* [전자고지] 요금종류코드(3자리) kang */
        SELECT FEE_TP_MAP
        FROM P2MGR.FEE_TP_F@YGPA_PORTMIS
        WHERE PRT_AT_CODE = #prtAtCode#
          AND FEE_TP = #feeTp#
    </select>

	<select id="gamNticRequestMngtDAO.getSfMakeDigit" parameterClass="map" resultClass="egovMap">
	        /*+ gamNticRequestMngtDAO.getSfMakeDigit */
	        select
	        SF_MAKEDIGIT( #prtAtCode# || TO_CHAR(ASCII(SUBSTR(#feeTp#,1,1))) || SUBSTR(#feeTp#,2,1) || #fiscalYr# || #billNo# || #customerNum#, 'BILLNO')
	        AS MAKEDIGIT
	        from dual
	    </select>

	<select id="gamNticRequestMngtDAO.selectPortmisMagamInfo" parameterClass="map" resultClass="egovMap">
	            SELECT NVL(a.magam_check,'N') magam_check
	              FROM p2mgr.rev_coll_magam_f@ygpa_portmis a
	             WHERE a.prt_at_code = #prtAtCode#
	               AND a.magam_yr    = SUBSTR(#magamCheckDt#,1,4)
	               AND a.magam_mm    = SUBSTR(#magamCheckDt#,5,2)
	</select>

    <select id="gamNticRequestMngtDAO.selectPortRevAnlrveLevMgtFeeIcheFCnt" parameterClass="map" resultClass="int">
            /* 이체신청내역 테이블에서 신청구분이 '1'이고 신청결과가 '0000'인 레코드수를 취득한다. */
            SELECT COUNT(*) rec_cnt FROM fee_iche_f a
             WHERE a.prt_at_code = #prtAtCode#
               AND a.agent_code = #agentCode#
               AND a.rpt_gubun   = '1'
               AND a.rpt_rslt   = '0000'
    </select>

    <select id="gamNticRequestMngtDAO.selectUnpaidMaxNo" parameterClass="map" resultClass="java.lang.String">
    	/* 추가할 연체번호를 조회한다. */
			SELECT LPAD(NVL(MAX(U.DLY_SER_NO), 0)+1, 2, '0')
			FROM LEV_REQEST_F L,
			  UNPAID_F U
             WHERE L.prt_at_code = #prtAtCode#
               AND L.MNG_YEAR = #mngYear#
               AND L.MNG_NO = #mngNo#
               AND L.MNG_CNT = #mngCnt#
               AND L.NTIC_CNT = #nticCnt#
				AND L.ACCNUT_YEAR=U.FISCAL_YR
               AND L.PRT_AT_CODE=U.PRT_AT_CODE
				AND U.FEE_TP      = GAM_GET_FEE_TP(L.CHRGE_KND)
				AND U.WORK_CODE   = L.CHRGE_KND
				AND L.NTICNO=U.BILL_NO
    </select>

    <select id="gamNticRequestMngtDAO.selectUnpaidMaxSerNo" parameterClass="map" resultClass="java.lang.String">
    	/* 추가할 연체일련번호를 조회한다. */
			SELECT LPAD(NVL(MAX(U.DLY_SER_NO), 0)+1, 2, '0')
			FROM LEV_REQEST_F L,
			  UNPAID_F U
             WHERE L.prt_at_code = #prtAtCode#
               AND L.MNG_YEAR = #mngYear#
               AND L.MNG_NO = #mngNo#
               AND L.MNG_CNT = #mngCnt#
               AND L.NTIC_CNT = #nticCnt#
				AND L.ACCNUT_YEAR=U.FISCAL_YR
               AND L.PRT_AT_CODE=U.PRT_AT_CODE
				AND U.FEE_TP      = GAM_GET_FEE_TP(L.CHRGE_KND)
				AND U.WORK_CODE   = L.CHRGE_KND
				AND U.BILL_NO = L.NTICNO
    </select>

    <select id="gamNticRequestMngtDAO.selectLevReqestArrrgAmt" parameterClass="map" resultClass="egovMap">
    	/* 기존 연체금액을 조회한다. (연체시 금액 조회) */
			SELECT L.NTIC_AMT,
				L.FEE,
				<![CDATA[
					CASE WHEN PAY_TMLMT<TO_DATE('20141106', 'YYYYMMDD') THEN 'O' ELSE 'P' END PAY_PASS_CHECK,
				]]>
			  NVL(L.ARRRG_AMT, 0) ARRRG_AMT,
			  U.DLY_BILL_PRT_YN,
			  U.PRT_AT_CODE,
			  U.FEE_TP,
			  U.WORK_CODE,
			  U.FISCAL_YR,
			  U.BILL_NO,
			  U.DLY_SER_NO,
			  U.FIRST_BILL_DT,
			  TO_CHAR(U.PRV_DUE_DT, 'YYYY-MM-DD') PRV_DUE_DT,
			  TO_CHAR(U.PRV_BILL_DT, 'YYYY-MM-DD') PRV_BILL_DT,
			  TO_CHAR(U.FIRST_BILL_DT, 'YYYY-MM-DD') FIRST_BILL_DT
			FROM LEV_REQEST_F L, UNPAID_F U
             WHERE L.prt_at_code = #prtAtCode#
               AND L.MNG_YEAR = #mngYear#
               AND L.MNG_NO = #mngNo#
               AND L.MNG_CNT = #mngCnt#
               AND L.NTIC_CNT = #nticCnt#
	           AND L.PRT_AT_CODE=U.PRT_AT_CODE
	           AND L.ACCNUT_YEAR=U.FISCAL_YR
	           AND U.WORK_CODE=L.CHRGE_KND
	           AND L.NTICNO=U.BILL_NO
               ORDER BY U.DLY_SER_NO DESC
    </select>

    <update id="gamNticRequestMngtDAO.updateUnpaidPrintYn" parameterClass="map">
    	/* 연체 출력을 취소한다. */
            UPDATE UNPAID_F
            SET DLY_BILL_PRT_YN='N'
            WHERE
            	PRT_AT_CODE=#prtAtCode#
            	AND FEE_TP=#feeTp#
            	AND WORK_CODE=#workCode#
            	AND FISCAL_YR=#fiscalYr#
            	AND BILL_NO=#billNo#
    </update>

    <delete id="gamNticRequestMngtDAO.deleteUnpaidByPk" parameterClass="hashMap" >
            DELETE FROM UNPAID_F WHERE (PRT_AT_CODE, FEE_TP, WORK_CODE, FISCAL_YR, BILL_NO) IN
     (
     	SELECT
              PRT_AT_CODE, GAM_GET_FEE_TP(CHRGE_KND), CHRGE_KND, ACCNUT_YEAR, NTICNO
		FROM LEV_REQEST_F
      	WHERE PRT_AT_CODE=#prtAtCode#
	      	AND MNG_YEAR=#mngYear#
	      	AND MNG_NO=#mngNo#
	      	AND MNG_CNT=#mngCnt#
	      	AND NTIC_CNT=#nticCnt#
	      	AND CHRGE_KND=#chrgeKnd#
      	)
      	AND DLY_SER_NO=#dlySerNo#

    </delete>

    <update id="gamNticRequestMngtDAO.updateAssetRentFeePayDtlsMngtList">
       	<![CDATA[
			UPDATE LEV_REQEST_F L
			SET RCIV_DT=(SELECT RCVD_DT FROM REV_COLL_F R WHERE L.PRT_AT_CODE=R.PRT_AT_CODE
			  AND L.CHRGE_KND    =R.WORK_CODE
			  AND L.ACCNUT_YEAR  =R.FISCAL_YR
			  AND L.NTICNO       =R.BILL_NO),
			  RCIV_SE  =(SELECT RCVD_TP FROM REV_COLL_F R WHERE L.PRT_AT_CODE=R.PRT_AT_CODE
			  AND L.CHRGE_KND    =R.WORK_CODE
			  AND L.ACCNUT_YEAR  =R.FISCAL_YR
			  AND L.NTICNO       =R.BILL_NO)
			WHERE EXISTS
			  (SELECT 1
			  FROM REV_COLL_F R
			  WHERE L.PRT_AT_CODE=R.PRT_AT_CODE
			  AND L.CHRGE_KND    =R.WORK_CODE
			  AND L.ACCNUT_YEAR  =R.FISCAL_YR
			  AND L.NTICNO       =R.BILL_NO
			  AND L.NHT_ISUE_YN  ='Y'
			  AND L.RCIV_SE='0'
			  )
       	]]>
	</update>

	<update id="gamNticRequestMngtDAO.updateAssetRentFeePayDtlsMngtArrrgList">
       	<![CDATA[
			UPDATE LEV_REQEST_F L SET
			  RCIV_DT=(SELECT DLY_RCVD_DT
			  FROM UNPAID_F R
			  WHERE L.PRT_AT_CODE=R.PRT_AT_CODE
			  AND L.CHRGE_KND    =R.WORK_CODE
			  AND L.ACCNUT_YEAR  =R.FISCAL_YR
			  AND L.NTICNO       =R.BILL_NO
			  AND R.DLY_SER_NO = (SELECT MAX(DLY_SER_NO) FROM UNPAID_F D WHERE L.PRT_AT_CODE=D.PRT_AT_CODE
			  AND L.CHRGE_KND    =D.WORK_CODE
			  AND L.ACCNUT_YEAR  =D.FISCAL_YR
			  AND L.NTICNO       =D.BILL_NO)
			  ),
			  RCIV_SE=(SELECT DLY_RCVD_TP
			  FROM UNPAID_F R
			  WHERE L.PRT_AT_CODE=R.PRT_AT_CODE
			  AND L.CHRGE_KND    =R.WORK_CODE
			  AND L.ACCNUT_YEAR  =R.FISCAL_YR
			  AND L.NTICNO       =R.BILL_NO
			  AND R.DLY_SER_NO = (SELECT MAX(DLY_SER_NO) FROM UNPAID_F D WHERE L.PRT_AT_CODE=D.PRT_AT_CODE
			  AND L.CHRGE_KND    =D.WORK_CODE
			  AND L.ACCNUT_YEAR  =D.FISCAL_YR
			  AND L.NTICNO       =D.BILL_NO)
			  )
			WHERE EXISTS
			  (SELECT 1
			  FROM UNPAID_F R
			  WHERE L.PRT_AT_CODE=R.PRT_AT_CODE
			  AND L.CHRGE_KND    =R.WORK_CODE
			  AND L.ACCNUT_YEAR  =R.FISCAL_YR
			  AND L.NTICNO       =R.BILL_NO
			  AND L.NHT_ISUE_YN  ='Y'
			  AND L.RCIV_SE      ='1'
			  )
       	]]>
	</update>


</sqlMap>

