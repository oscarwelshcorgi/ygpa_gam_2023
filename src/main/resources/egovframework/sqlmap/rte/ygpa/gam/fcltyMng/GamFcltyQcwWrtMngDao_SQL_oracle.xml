<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ygpa.gam.fcltyMng">

    <typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
    <typeAlias alias="hashMap" type="java.util.HashMap"/>
    <typeAlias alias="gamFcltyQcwWrtMngVO" type="egovframework.rte.ygpa.gam.fcltyMng.service.GamFcltyQcwWrtMngVO"/>
	<typeAlias alias="gamQcMngAtchFileMngVO" type="egovframework.rte.ygpa.gam.fcltyMng.service.GamQcMngAtchFileMngVO"/>

    <!-- 점검관리목록 -->
	<select id="gamFcltyQcwWrtMngDao.selectQcMngDtlsList_D" parameterClass="gamFcltyQcwWrtMngVO" resultClass="egovMap">
        SELECT A.*
           FROM (
                SELECT ROWNUM RNUM, S.*
                	FROM (
						SELECT
							Q.FCLTS_MNG_GROUP_NO
							, F.FCLTS_MNG_GROUP_NM
							, Q.FCLTS_JOB_SE
    						, GAM_GET_FCLTS_JOB_SE_NM(Q.FCLTS_JOB_SE) AS FCLTS_JOB_SE_NM
							, TO_CHAR(Q.QC_MNG_SEQ) QC_MNG_SEQ
							, Q.QC_MNG_NM
							, Q.ENFORCE_YEAR
							, TO_CHAR(Q.QC_INSP_DT, 'YYYY-MM-DD') QC_INSP_DT
							, Q.QC_SE
							, GAM_GET_QC_SE_NM(Q.QC_SE) QC_SE_NM
                            , Q.QC_INSP_TP
                            , GAM_GET_QC_INSP_TP_NM(Q.QC_INSP_TP) QC_INSP_TP_NM
							, Q.QC_INSP_SE
							, GAM_GET_QC_INSP_SE_NM(Q.QC_INSP_SE) QC_INSP_SE_NM
							, Q.QC_INSP_INSTT_NM
							, Q.RESPON_ENGINEER_NM
							, TO_CHAR(Q.QC_BEGIN_DT, 'YYYY-MM-DD') QC_BEGIN_DT
							, TO_CHAR(Q.QC_END_DT, 'YYYY-MM-DD') QC_END_DT
							, Q.QC_INSP_AMT
							, Q.STTUS_EVL_LVL
							, GAM_GET_STTUS_EVL_LVL_NM(Q.STTUS_EVL_LVL) STTUS_EVL_LVL_NM
							, Q.RM
							, Q.QC_INSP_BDGT
							, TO_CHAR(Q.WRT_DT, 'YYYY-MM-DD') WRT_DT
							, Q.WRT_USR
							, Q.PLAN_HIST_SE
							, GAM_GET_PLAN_HIST_SE_NM(Q.PLAN_HIST_SE) PLAN_HIST_SE_NM
						FROM
							QC_MNG_DTLS_F Q
			            INNER JOIN
			            	FCLTS_MNG_GROUP_F F
			            ON
			              	Q.FCLTS_MNG_GROUP_NO = F.FCLTS_MNG_GROUP_NO
						WHERE
							1 = 1
						<isNotEmpty property="sFcltsMngGroupNo">
						  	AND Q.FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
						</isNotEmpty>
						<isNotEmpty property="sFcltsJobSe">
						  	AND Q.FCLTS_JOB_SE = #sFcltsJobSe#
						</isNotEmpty>
						<isNotEmpty property="sQcInspSe">
						  	AND Q.QC_INSP_SE = #sQcInspSe#
						</isNotEmpty>
						<isNotEmpty property="sQcMngNm">
						  	AND Q.QC_MNG_NM LIKE '%' || #sQcMngNm# || '%'
						</isNotEmpty>
						<isNotEmpty property="sQcSe">
						  	AND Q.QC_SE = #sQcSe#
						</isNotEmpty>
						<isNotEmpty property="sEnforceYear">
						  	AND Q.ENFORCE_YEAR = #sEnforceYear#
						</isNotEmpty>
						ORDER BY
							Q.ENFORCE_YEAR DESC
							, F.PRT_AT_CODE
							, Q.FCLTS_MNG_GROUP_NO
							, Q.FCLTS_JOB_SE
							, Q.QC_MNG_SEQ
                ) S
             ) A
        <![CDATA[ WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex# ]]>
	</select>

	<!-- 점검관리목록 개수 -->
	<select id="gamFcltyQcwWrtMngDao.selectQcMngDtlsListTotCnt_S" parameterClass="gamFcltyQcwWrtMngVO" resultClass="int">
		SELECT
			COUNT(*) TOTCNT
		FROM
			QC_MNG_DTLS_F Q
		WHERE
			1 = 1
		<isNotEmpty property="sFcltsMngGroupNo">
		  	AND Q.FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
		</isNotEmpty>
		<isNotEmpty property="sFcltsJobSe">
		  	AND Q.FCLTS_JOB_SE = #sFcltsJobSe#
		</isNotEmpty>
		<isNotEmpty property="sQcInspSe">
		  	AND Q.QC_INSP_SE = #sQcInspSe#
		</isNotEmpty>
		<isNotEmpty property="sQcMngNm">
		  	AND Q.QC_MNG_NM LIKE '%' || #sQcMngNm# || '%'
		</isNotEmpty>
		<isNotEmpty property="sQcSe">
		  	AND Q.QC_SE = #sQcSe#
		</isNotEmpty>
		<isNotEmpty property="sEnforceYear">
		  	AND Q.ENFORCE_YEAR = #sEnforceYear#
		</isNotEmpty>
	</select>

	<!-- 점검관리 상세내역 -->
	<select id="gamFcltyQcwWrtMngDao.selectQcMngDtlsDetail_S" parameterClass="gamFcltyQcwWrtMngVO" resultClass="egovMap">
		SELECT
			Q.FCLTS_MNG_GROUP_NO
			, (SELECT FCLTS_MNG_GROUP_NM FROM FCLTS_MNG_GROUP_F WHERE FCLTS_MNG_GROUP_NO = Q.FCLTS_MNG_GROUP_NO) FCLTS_MNG_GROUP_NM
			, Q.FCLTS_JOB_SE
			, TO_CHAR(Q.QC_MNG_SEQ) QC_MNG_SEQ
			, Q.QC_MNG_NM
			, Q.ENFORCE_YEAR
			, TO_CHAR(Q.QC_INSP_DT, 'YYYY-MM-DD') QC_INSP_DT
			, Q.QC_SE
			, Q.QC_INSP_TP
			, Q.QC_INSP_SE
			, Q.QC_INSP_INSTT_NM
			, Q.RESPON_ENGINEER_NM
			, TO_CHAR(Q.QC_BEGIN_DT, 'YYYY-MM-DD') QC_BEGIN_DT
			, TO_CHAR(Q.QC_END_DT, 'YYYY-MM-DD') QC_END_DT
			, Q.QC_INSP_AMT
			, Q.STTUS_EVL_LVL
			, GAM_GET_STTUS_EVL_LVL_NM(Q.STTUS_EVL_LVL) STTUS_EVL_LVL_NM
			, Q.QC_INSP_RESULT
			, Q.ACTION_CN
			, Q.RM
			, Q.QC_INSP_BDGT
			, TO_CHAR(Q.WRT_DT, 'YYYY-MM-DD') WRT_DT
			, Q.WRT_USR
			, Q.MECH_FCLTS_SE
			, Q.PLAN_HIST_SE
			, TO_CHAR(Q.QC_INSP_DT, 'YYYY. MM. DD') QC_INSP_DT_HWP
		FROM
			QC_MNG_DTLS_F Q
		WHERE
			Q.FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
			AND Q.FCLTS_JOB_SE = #sFcltsJobSe#
			AND Q.QC_MNG_SEQ = TO_NUMBER(#sQcMngSeq#)
	</select>


	<!-- 점검관리 순번 얻기 -->
	<select id="gamFcltyQcwWrtMngDao.selectMaxQcMngSeq_S" parameterClass="hashMap" resultClass="String">
		SELECT
			TO_CHAR(NVL(MAX(QC_MNG_SEQ),0) + 1)
		FROM
			QC_MNG_DTLS_F
		WHERE
			FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FCLTS_JOB_SE = #fcltsJobSe#
	</select>

	<!-- 점검관리내역 등록 -->
	<insert id="gamFcltyQcwWrtMngDao.insertQcMngDtls_S" parameterClass="hashMap">
		INSERT INTO
			QC_MNG_DTLS_F (
				FCLTS_MNG_GROUP_NO
				, FCLTS_JOB_SE
				, QC_MNG_SEQ
				, ENFORCE_YEAR
				, QC_MNG_NM
				, QC_INSP_DT
				, QC_SE
				, QC_INSP_TP
				, QC_INSP_SE
				, QC_INSP_INSTT_NM
				, RESPON_ENGINEER_NM
				, QC_BEGIN_DT
				, QC_END_DT
				, QC_INSP_AMT
				, STTUS_EVL_LVL
				, QC_INSP_RESULT
				, ACTION_CN
				, RM
				, QC_INSP_BDGT
				, WRT_DT
				, WRT_USR
				, MECH_FCLTS_SE
				, PLAN_HIST_SE
				, REG_USR
				, REGIST_DT
			) VALUES (
				#fcltsMngGroupNo#
				, #fcltsJobSe#
				, TO_NUMBER(#qcMngSeq#)
				, #enforceYear#
				, #qcMngNm#
				, TO_DATE(#qcInspDt#, 'YYYY-MM-DD')
				, #qcSe#
				, #qcInspTp#
				, #qcInspSe#
				, #qcInspInsttNm#
				, #responEngineerNm#
				, TO_DATE(#qcBeginDt#, 'YYYY-MM-DD')
				, TO_DATE(#qcEndDt#, 'YYYY-MM-DD')
				, TO_NUMBER(REPLACE(#qcInspAmt#, ',', ''))
				, #sttusEvlLvl#
				, #qcInspResult#
				, #actionCn#
				, #rm#
				, TO_NUMBER(REPLACE(#qcInspBdgt#, ',', ''))
				, TO_DATE(#wrtDt#, 'YYYY-MM-DD')
				, #wrtUsr#
				, #mechFcltsSe#
				, #planHistSe#
				, #regUsr#
				, SYSDATE
			)
	</insert>

	<!-- 점검관리내역 수정 -->
	<update id="gamFcltyQcwWrtMngDao.updateQcMngDtls_S" parameterClass="hashMap">
		UPDATE
			QC_MNG_DTLS_F
		SET
			ENFORCE_YEAR = #enforceYear#
			, QC_MNG_NM = #qcMngNm#
			, QC_INSP_DT = TO_DATE(#qcInspDt#, 'YYYY-MM-DD')
			, QC_SE = #qcSe#
			, QC_INSP_TP = #qcInspTp#
			, QC_INSP_SE = #qcInspSe#
			, QC_INSP_INSTT_NM = #qcInspInsttNm#
			, RESPON_ENGINEER_NM = #responEngineerNm#
			, QC_BEGIN_DT = TO_DATE(#qcBeginDt#, 'YYYY-MM-DD')
			, QC_END_DT = TO_DATE(#qcEndDt#, 'YYYY-MM-DD')
			, QC_INSP_AMT = TO_NUMBER(REPLACE(#qcInspAmt#, ',', ''))
			, STTUS_EVL_LVL = #sttusEvlLvl#
			, QC_INSP_RESULT = #qcInspResult#
			, ACTION_CN = #actionCn#
			, RM = #rm#
			, QC_INSP_BDGT = TO_NUMBER(REPLACE(#qcInspBdgt#, ',', ''))
			, WRT_DT = TO_DATE(#wrtDt#, 'YYYY-MM-DD')
			, WRT_USR = #wrtUsr#
			, MECH_FCLTS_SE = #mechFcltsSe#
			, PLAN_HIST_SE = #planHistSe#
			, UPD_USR = #updUsr#
			, UPDT_DT = SYSDATE
		WHERE
			FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FCLTS_JOB_SE = #fcltsJobSe#
			AND QC_MNG_SEQ = TO_NUMBER(#qcMngSeq#)
	</update>

	<!-- 점검관리내역 삭제 -->
	<delete id="gamFcltyQcwWrtMngDao.deleteQcMngDtls_S" parameterClass="hashMap">
		DELETE FROM
			QC_MNG_DTLS_F
		WHERE
			FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FCLTS_JOB_SE = #fcltsJobSe#
			AND QC_MNG_SEQ = TO_NUMBER(#qcMngSeq#)
	</delete>

	<!-- 점검관리첨부파일 목록  -->
	<select id="gamFcltyQcwWrtMngDao.selectQcMngAtchFileList_D" parameterClass="gamFcltyQcwWrtMngVO" resultClass="egovMap">
		SELECT
			  F.FCLTS_JOB_SE
			, F.FCLTS_MNG_GROUP_NO
			, F.QC_MNG_SEQ
			, F.ATCH_FILE_SEQ
			, F.ATCH_FILE_SE
			, GAM_GET_FILE_SE_NM(F.ATCH_FILE_SE) AS ATCH_FILE_SE_NM
			, F.ATCH_FILE_SJ
			, F.ATCH_FILE_NM_LOGIC
			, F.ATCH_FILE_NM_PHYSICL
			, TO_CHAR(F.ATCH_FILE_WRITNG_DT,'YYYY-MM-DD') ATCH_FILE_WRITNG_DT
			, F.ATCH_FILE_RM
			, F.REG_USR
			, F.REGIST_DT
			, F.UPD_USR
			, F.UPDT_DT
		FROM
			QC_MNG_ATCH_FILE_F F
		WHERE
			F.FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
			AND F.FCLTS_JOB_SE = #sFcltsJobSe#
			AND F.QC_MNG_SEQ = TO_NUMBER(#sQcMngSeq#)
		ORDER BY
			F.ATCH_FILE_SEQ
	</select>

	<!-- 점검관리첨부파일 등록 -->
	<insert id="gamFcltyQcwWrtMngDao.insertQcMngAtchFile_S" parameterClass="hashMap">
    	<selectKey keyProperty="maxAtchFileSeq" resultClass="String">
    		SELECT
    		  	TO_CHAR(NVL(MAX(ATCH_FILE_SEQ),0) + 1)
    		FROM
    		  	QC_MNG_ATCH_FILE_F
    		WHERE
				FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
				AND FCLTS_JOB_SE = #fcltsJobSe#
				AND QC_MNG_SEQ = TO_NUMBER(#qcMngSeq#)
    	</selectKey>
		INSERT INTO
			QC_MNG_ATCH_FILE_F (
				FCLTS_MNG_GROUP_NO
				, FCLTS_JOB_SE
				, QC_MNG_SEQ
				, ATCH_FILE_SEQ
				, ATCH_FILE_SE
				, ATCH_FILE_SJ
				, ATCH_FILE_NM_LOGIC
				, ATCH_FILE_NM_PHYSICL
				, ATCH_FILE_WRITNG_DT
				, REG_USR
				, REGIST_DT
			)
			VALUES (
				#fcltsMngGroupNo#
				, #fcltsJobSe#
				, TO_NUMBER(#qcMngSeq#)
				, TO_NUMBER(#maxAtchFileSeq#)
				, #atchFileSe#
				, #atchFileSj#
				, #atchFileNmLogic#
				, #atchFileNmPhysicl#
				, TO_DATE(#atchFileWritngDt#, 'YYYY-MM-DD')
				, #regUsr#
				, SYSDATE
			)
	</insert>

	<!-- 점검관리첨부파일목록 삭제 -->
	<delete id="gamFcltyQcwWrtMngDao.deleteQcMngAtchFileList_S" parameterClass="hashMap">
		DELETE FROM
			QC_MNG_ATCH_FILE_F
		WHERE
			FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FCLTS_JOB_SE = #fcltsJobSe#
			AND QC_MNG_SEQ = TO_NUMBER(#qcMngSeq#)
	</delete>


	<!-- 점검관리대상 시설물 목록  -->
	<select id="gamFcltyQcwWrtMngDao.selectQcMngObjFcltsList_D" parameterClass="gamFcltyQcwWrtMngVO" resultClass="egovMap">
 		SELECT
			G.FCLTS_MNG_NO
			, G.PRT_FCLTY_NM
			, DECODE(O.FCLTS_MNG_NO,NULL,'','TRUE') CHK_ROLE
			, G.PRT_FCLTY_SE
			, GAM_GETCODENAME(#sGamCode#, G.GIS_PRT_FCLTY_CD) AS GIS_PRT_FCLTY_NM
		FROM
			GIS_PRT_FCLTY_CD_F G
        LEFT OUTER JOIN
			QC_MNG_OBJ_FCLTS_F O
        ON
			O.FCLTS_MNG_GROUP_NO = G.FCLTS_MNG_GROUP_NO
			AND O.FCLTS_MNG_NO = G.FCLTS_MNG_NO
			AND O.QC_MNG_SEQ = TO_NUMBER(#sQcMngSeq#)
		WHERE
			<![CDATA[ 1<>1 ]]>
			OR (
				<isNotEmpty property="sFcltsJobSe">
					G.PRT_FCLTY_SE = #sFcltsJobSe#
					<isNotEmpty property="sFcltsMngGroupNo">
						AND
					</isNotEmpty>
				</isNotEmpty>
				<isNotEmpty property="sFcltsMngGroupNo">
					G.FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
				</isNotEmpty>
				)
        ORDER BY
          	G.PRT_FCLTY_SE, O.FCLTS_MNG_NO
    </select>

	<!-- 점검관리대상 시설물 등록 -->
	<insert id="gamFcltyQcwWrtMngDao.insertQcMngObjFclts_S" parameterClass="hashMap">
		INSERT INTO
			QC_MNG_OBJ_FCLTS_F (
				FCLTS_MNG_GROUP_NO
				, FCLTS_JOB_SE
				, QC_MNG_SEQ
				, FCLTS_MNG_NO
				, STTUS_EVL_LVL
				, QC_INSP_DT
				, INSPECTOR
				, QC_INSP_RESULT
				, RM
				, REG_USR
				, REGIST_DT
			)
			VALUES (
				#fcltsMngGroupNo#
				, #fcltsJobSe#
				, TO_NUMBER(#qcMngSeq#)
				, #fcltsMngNo#
				, #sttusEvlLvl#
				, TO_DATE(#qcInspDt#, 'YYYY-MM-DD')
				, #inspector#
				, #qcInspResult#
				, #rm#
				, #regUsr#
				, SYSDATE
			)
	</insert>

	<!-- 점검관리대상 시설물 목록 삭제 -->
	<delete id="gamFcltyQcwWrtMngDao.deleteQcMngObjFcltsList_S" parameterClass="hashMap">
		DELETE FROM
			QC_MNG_OBJ_FCLTS_F
		WHERE
			FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FCLTS_JOB_SE = #fcltsJobSe#
			AND QC_MNG_SEQ = TO_NUMBER(#qcMngSeq#)
	</delete>

	<!-- 점검관리결과항목목록 -->
	<select id="gamFcltyQcwWrtMngDao.selectQcMngResultItemList_D" parameterClass="gamFcltyQcwWrtMngVO" resultClass="egovMap">
		SELECT
			A.QC_ITEM_UPPER_CD
			, (SELECT QC_ITEM_NM FROM QC_ITEM_CD_F WHERE QC_ITEM_CD = A.QC_ITEM_UPPER_CD) QC_ITEM_UPPER_NM
			, (SELECT COUNT(*) FROM QC_ITEM_CD_F WHERE QC_ITEM_CD LIKE SUBSTRB(A.QC_ITEM_UPPER_CD,1,3) || '%' AND QC_ITEM_CD > A.QC_ITEM_UPPER_CD) QC_ITEM_UPPER_CD_COUNT
			, A.QC_ITEM_CD
			, A.QC_ITEM_NM
			, A.INSP_RESULT_CHK
			, A.QC_CONTENTS
			, A.DEPTH_SORT
			, GAM_GET_QC_GROUP_INSP_RESULT(A.FCLTS_MNG_GROUP_NO, A.FCLTS_JOB_SE, A.QC_MNG_SEQ, QC_ITEM_GROUP) QC_GROUP_INSP_RESULT
		FROM
			(
				SELECT
					GAM_GET_LEVEL_2_QC_ITEM_CD(I.QC_ITEM_CD) AS QC_ITEM_UPPER_CD
					, I.QC_ITEM_CD
					, (CASE WHEN I.DEPTH_SORT > 2 THEN LPAD(' ',(I.DEPTH_SORT - 3)*4,' ') || I.QC_ITEM_NM END) AS QC_ITEM_NM
					, I.DEPTH_SORT
					, ROW_NUMBER() OVER (PARTITION BY SUBSTRB(I.QC_ITEM_CD,1,3) ORDER BY I.QC_ITEM_CD) AS QC_ITEM_NO
					, M.FCLTS_MNG_GROUP_NO
					, SUBSTRB(M.FCLTS_MNG_GROUP_NO,1,3) AS QC_ITEM_GROUP
					, M.FCLTS_JOB_SE
					, M.QC_MNG_SEQ
					, DECODE(R.INSP_RESULT_CHK, NULL, 'N', R.INSP_RESULT_CHK) INSP_RESULT_CHK
					, R.QC_CONTENTS
				FROM
					QC_ITEM_CD_F I
				LEFT OUTER JOIN
					QC_MNG_RESULT_ITEM_F R
				ON
					I.QC_ITEM_CD = R.QC_ITEM_CD
					AND I.FCLTS_JOB_SE = R.FCLTS_JOB_SE
			      	AND R.QC_MNG_SEQ = #sQcMngSeq#
				LEFT OUTER JOIN
					QC_MNG_DTLS_F M
				ON
					R.FCLTS_MNG_GROUP_NO = M.FCLTS_MNG_GROUP_NO
					AND R.FCLTS_JOB_SE = M.FCLTS_JOB_SE
					AND R.QC_MNG_SEQ = M.QC_MNG_SEQ
				WHERE
					I.FCLTS_JOB_SE = #sFcltsJobSe#
					AND I.DEPTH_SORT >= 3
				ORDER BY
					I.QC_ITEM_CD
			) A
		WHERE
			1 = 1
		    <isNotEmpty property="sFcltsMngGroupNo">
		    	AND A.FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
		   	</isNotEmpty>
  	</select>

	<!-- 점검관리결과항목목록 갯수-->
	<select id="gamFcltyQcwWrtMngDao.selectQcMngResultItemListTotCnt_S" parameterClass="gamFcltyQcwWrtMngVO" resultClass="int">
		SELECT
			COUNT(*) TOT_CNT
		FROM
			(
				SELECT
					(CASE WHEN I.DEPTH_SORT > 3 THEN RPAD(SUBSTRB(I.QC_ITEM_UPPER_CD,1,3),9,'0') ELSE I.QC_ITEM_UPPER_CD END) AS QC_ITEM_UPPER_CD
					, I.QC_ITEM_CD
					, (CASE WHEN I.DEPTH_SORT > 2 THEN LPAD(' ',(I.DEPTH_SORT - 3)*4,' ') || I.QC_ITEM_NM END) AS QC_ITEM_NM
					, I.DEPTH_SORT
					, ROW_NUMBER() OVER (PARTITION BY SUBSTRB(I.QC_ITEM_CD,1,3) ORDER BY I.QC_ITEM_CD) AS QC_ITEM_NO
					, M.FCLTS_MNG_GROUP_NO
					, M.FCLTS_JOB_SE
					, M.QC_MNG_SEQ
					, DECODE(R.INSP_RESULT_CHK, NULL, 'N', R.INSP_RESULT_CHK) INSP_RESULT_CHK
					, R.QC_CONTENTS
				FROM
					QC_ITEM_CD_F I
				LEFT OUTER JOIN
					QC_MNG_RESULT_ITEM_F R
				ON
					I.QC_ITEM_CD = R.QC_ITEM_CD
					AND I.FCLTS_JOB_SE = R.FCLTS_JOB_SE
			      	AND R.QC_MNG_SEQ = #sQcMngSeq#
				LEFT OUTER JOIN
					QC_MNG_DTLS_F M
				ON
					R.FCLTS_MNG_GROUP_NO = M.FCLTS_MNG_GROUP_NO
					AND R.FCLTS_JOB_SE = M.FCLTS_JOB_SE
					AND R.QC_MNG_SEQ = M.QC_MNG_SEQ
				WHERE
					I.FCLTS_JOB_SE = #sFcltsJobSe#
					AND I.DEPTH_SORT >= 3
				ORDER BY
					I.QC_ITEM_CD
			) A
		WHERE
			1 = 1
		    <isNotEmpty property="sFcltsMngGroupNo">
		    	AND A.FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
		   	</isNotEmpty>
  	</select>

	<!-- 기계 점검관리결과항목목록 -->
	<select id="gamFcltyQcwWrtMngDao.selectMechQcMngResultItemList_D" parameterClass="gamFcltyQcwWrtMngVO" resultClass="egovMap">
		SELECT
			DECODE(R.INSP_RESULT_CHK, NULL, 'N', R.INSP_RESULT_CHK) INSP_RESULT_CHK
			, I.QC_ITEM_UPPER_CD
			, (SELECT S.QC_ITEM_NM FROM QC_ITEM_CD_F S WHERE S.QC_ITEM_CD = I.QC_ITEM_UPPER_CD ) QC_ITEM_UPPER_NM
		    , (SELECT S.QC_ITEM_UPPER_CD FROM QC_ITEM_CD_F S WHERE S.QC_ITEM_CD = I.QC_ITEM_UPPER_CD ) QC_ITEM_UPPER_UPPER_CD
		    , (SELECT S.QC_ITEM_NM FROM QC_ITEM_CD_F S WHERE S.QC_ITEM_CD = (SELECT S.QC_ITEM_UPPER_CD FROM QC_ITEM_CD_F S WHERE S.QC_ITEM_CD = I.QC_ITEM_UPPER_CD ) ) QC_ITEM_UPPER_UPPER_NM
			, (SELECT COUNT(*) FROM QC_ITEM_CD_F WHERE QC_ITEM_CD LIKE SUBSTRB(I.QC_ITEM_UPPER_CD,1,5) || '%' AND QC_ITEM_CD > I.QC_ITEM_UPPER_CD) QC_ITEM_UPPER_COUNT
			, (SELECT COUNT(QC_ITEM_UPPER_CD) FROM QC_ITEM_CD_F WHERE QC_ITEM_UPPER_CD = (SELECT QC_ITEM_UPPER_CD FROM QC_ITEM_CD_F WHERE QC_ITEM_CD = I.QC_ITEM_CD)) QC_ITEM_UPPER_CD_COUNT
			, I.QC_ITEM_CD
			, I.QC_ITEM_NM
			, GAM_GET_INSP_RESULT_CHK_NM(INSP_RESULT_CHK) INSP_RESULT_CHK_NM
			, (CASE WHEN INSP_RESULT_CHK = 'N' THEN 'O'
					WHEN INSP_RESULT_CHK = 'W' THEN '△'
					WHEN INSP_RESULT_CHK = 'X' THEN 'X'
					ELSE ''
			  END) INSP_RESULT_CHK_MARK
		FROM
			QC_ITEM_CD_F I
		LEFT OUTER JOIN
			QC_MNG_RESULT_ITEM_F R
		ON
			I.QC_ITEM_CD = R.QC_ITEM_CD
			AND I.FCLTS_JOB_SE = R.FCLTS_JOB_SE
     		AND R.QC_MNG_SEQ = #sQcMngSeq#
		WHERE
			I.LEAF_YN = 'Y'
			AND I.FCLTS_JOB_SE = 'M'
		    <isNotEmpty property="sFcltsMngGroupNo">
		    	AND R.FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
		   	</isNotEmpty>
		    <isNotEmpty property="sMechCdStartChar">
		    	AND I.QC_ITEM_CD LIKE #sMechCdStartChar# || '%'
		   	</isNotEmpty>
		ORDER BY
			I.QC_ITEM_UPPER_CD
			,I.QC_ITEM_CD
  	</select>

	<!-- 점검결과항목등록 -->
	<insert id="gamFcltyQcwWrtMngDao.insertQcMngResultItem_S" parameterClass="hashMap">
    	<selectKey keyProperty="maxSeq" resultClass="String">
    		SELECT
    		  	TO_CHAR(NVL(MAX(SEQ),0) + 1)
    		FROM
    		  	QC_MNG_RESULT_ITEM_F
    		WHERE
				FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
				AND FCLTS_JOB_SE = #fcltsJobSe#
				AND QC_MNG_SEQ = TO_NUMBER(#qcMngSeq#)
    	</selectKey>
		INSERT INTO
			QC_MNG_RESULT_ITEM_F (
				FCLTS_MNG_GROUP_NO
				, FCLTS_JOB_SE
				, QC_MNG_SEQ
				, QC_ITEM_CD
				, SEQ
				, INSP_RESULT_CHK
				, INSP_RESULT_CN
				, QC_CONTENTS
				, REG_USR
				, REGIST_DT
			)
			VALUES (
				#fcltsMngGroupNo#
				, #fcltsJobSe#
				, TO_NUMBER(#qcMngSeq#)
				, #qcItemCd#
				, TO_NUMBER(#maxSeq#)
				, #inspResultChk#
				, #inspResultCn#
				, #qcContents#
				, #regUsr#
				, SYSDATE
			)
	</insert>

	<!-- 점검결과항목 목록 삭제 -->
	<delete id="gamFcltyQcwWrtMngDao.deleteQcMngResultItemList_S" parameterClass="hashMap">
		DELETE FROM
			QC_MNG_RESULT_ITEM_F
		WHERE
			FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FCLTS_JOB_SE = #fcltsJobSe#
			AND QC_MNG_SEQ = TO_NUMBER(#qcMngSeq#)
	</delete>


	<!-- 토목시설물점검표 출력 -->
	<select id="gamFcltyQcwWrtMngDao.selectFcltsMngGroupInfo_S" parameterClass="gamFcltyQcwWrtMngVO" resultClass="egovMap">
		SELECT
			G.FCLTS_MNG_GROUP_NO
			, G.FCLTS_MNG_GROUP_NM
			, G.PRT_AT_CODE
			, GAM_GETCODENAME('GAM019',G.PRT_AT_CODE) AS PRT_AT_CODE_NM
			, G.LOC
			, G.OWNER
			, TO_CHAR(G.BLD_DT,'YYYY') BLD_YEAR
			, GAM_GET_FCLTS_GBN_NM(G.FCLTS_GBN) FCLTS_GBN_NM
			, G.FCLTS_SE
			, G.FCLTS_KND
			, G.CNST_BEGIN_DT
			, G.CNST_END_DT
			, G.CNSTRTR
			, G.CNSTRCT_AMT
			, G.ARCH_FCLTY_USE_YN
			, G.CVL_ENG_FCLTY_USE_YN
			, G.MECH_FCLTY_USE_YN
			, G.ELCTY_FCLTY_USE_YN
			, G.INFO_COMM_FCLTY_USE_YN
			, G.FLAW_END_DT
			, TO_CHAR(G.FLAW_END_DT, 'YYYY') FLAW_END_DT_YEAR
			, TO_CHAR(G.FLAW_END_DT, 'MM') FLAW_END_DT_MONTH
			, TO_CHAR(G.FLAW_END_DT, 'DD') FLAW_END_DT_DAY
		FROM
			FCLTS_MNG_GROUP_F G
		WHERE
			G.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#

	</select>



	<select id="gamFcltyQcwWrtMngDao.selectFcltyQcwWrtMngQcMngAtchFileList_D" parameterClass="gamQcMngAtchFileMngVO" resultClass="egovMap">
		SELECT T.*
			FROM (
				SELECT  ROWNUM RNUM, S.*
					FROM (
						SELECT
								 T1.FCLTS_MNG_GROUP_NO AS FCLTS_MNG_GROUP_NO
								,TO_CHAR(T1.QC_MNG_SEQ) AS QC_MNG_SEQ
								,T1.FCLTS_JOB_SE AS FCLTS_JOB_SE
								,TO_CHAR(T1.ATCH_FILE_SEQ) AS ATCH_FILE_SEQ
								,T1.ATCH_FILE_SE AS ATCH_FILE_SE
								,T1.ATCH_FILE_SJ AS ATCH_FILE_SJ
								,T1.ATCH_FILE_NM_LOGIC AS ATCH_FILE_NM_LOGIC
								,T1.ATCH_FILE_NM_PHYSICL AS ATCH_FILE_NM_PHYSICL
								,TO_CHAR(T1.ATCH_FILE_WRITNG_DT,'YYYY-MM-DD') AS ATCH_FILE_WRITNG_DT
								,T1.REG_USR AS REG_USR
								,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
								,T1.UPD_USR AS UPD_USR
								,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
								,T1.ATCH_FILE_RM AS ATCH_FILE_RM
								,GAM_GET_FILE_SE_NM(T1.ATCH_FILE_SE) AS ATCH_FILE_SE_NM
								,'FALSE' AS ATCH_FILE_SEL_CHK
							FROM QC_MNG_ATCH_FILE_F T1
						WHERE T1.FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
						AND T1.FCLTS_JOB_SE = #sFcltsJobSe#
						AND T1.QC_MNG_SEQ = NVL(TO_NUMBER(REPLACE(#sQcMngSeq#,',','')),0)
						ORDER BY T1.ATCH_FILE_SEQ ASC
				) S
		) T
		<![CDATA[
		WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex#
		]]>
	</select>

	<insert id="gamFcltyQcwWrtMngDao.insertFcltyQcwWrtMngQcMngAtchFile_S" parameterClass="gamQcMngAtchFileMngVO">
		INSERT INTO QC_MNG_ATCH_FILE_F
		(
			 FCLTS_MNG_GROUP_NO
			,FCLTS_JOB_SE
			,QC_MNG_SEQ
			,ATCH_FILE_SEQ
			,ATCH_FILE_SE
			,ATCH_FILE_SJ
			,ATCH_FILE_NM_LOGIC
			,ATCH_FILE_NM_PHYSICL
			,ATCH_FILE_WRITNG_DT
			,ATCH_FILE_RM
			,REG_USR
			,REGIST_DT
		)
		VALUES
		(
			 #fcltsMngGroupNo#
			,#fcltsJobSe#
			,TO_NUMBER(REPLACE(#qcMngSeq#,',',''))
			,TO_NUMBER(REPLACE(#atchFileSeq#,',',''))
			,#atchFileSe#
			,#atchFileSj#
			,#atchFileNmLogic#
			,#atchFileNmPhysicl#
			,NVL(TO_DATE(#atchFileWritngDt#,'YYYY-MM-DD'),TRUNC(SYSDATE))
			,#atchFileRm#
			,#regUsr#
			,SYSDATE
		)
	</insert>

	<update id="gamFcltyQcwWrtMngDao.updateFcltyQcwWrtMngQcMngAtchFile_S" parameterClass="gamQcMngAtchFileMngVO">
		UPDATE QC_MNG_ATCH_FILE_F SET
			,ATCH_FILE_SE = #atchFileSe#
			,ATCH_FILE_SJ = #atchFileSj#
			 ATCH_FILE_NM_LOGIC = #atchFileNmLogic#
			,ATCH_FILE_NM_PHYSICL = #atchFileNmPhysicl#
			,ATCH_FILE_WRITNG_DT = NVL(TO_DATE(#atchFileWritngDt#,'YYYY-MM-DD'),TRUNC(SYSDATE))
			,ATCH_FILE_RM = #atchFileRm#
			,UPD_USR = #updUsr#
			,UPDT_DT = SYSDATE
		WHERE FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
		AND FCLTS_JOB_SE = #fcltsJobSe#
		AND QC_MNG_SEQ = NVL(TO_NUMBER(REPLACE(#qcMngSeq#,',','')),0)
		AND ATCH_FILE_SEQ = NVL(TO_NUMBER(REPLACE(#atchFileSeq#,',','')),0)
	</update>

	<delete id="gamFcltyQcwWrtMngDao.deleteFcltyQcwWrtMngQcMngAtchFile_S" parameterClass="gamQcMngAtchFileMngVO">
		DELETE FROM QC_MNG_ATCH_FILE_F
		WHERE FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
		AND FCLTS_JOB_SE = #fcltsJobSe#
		AND QC_MNG_SEQ = NVL(TO_NUMBER(REPLACE(#qcMngSeq#,',','')),0)
		AND ATCH_FILE_SEQ = NVL(TO_NUMBER(REPLACE(#atchFileSeq#,',','')),0)
	</delete>

	<delete id="gamFcltyQcwWrtMngDao.deleteFcltyQcwWrtMngQcMngAtchFileMulti_S" parameterClass="hashMap">
		DELETE FROM QC_MNG_ATCH_FILE_F
		WHERE FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
		AND FCLTS_JOB_SE = #fcltsJobSe#
		AND QC_MNG_SEQ = NVL(TO_NUMBER(REPLACE(#qcMngSeq#,',','')),0)
		AND ATCH_FILE_SEQ IN (SELECT LTRIM(REGEXP_SUBSTR(','||#deleteAtchFileSeqList#||',','[^'||','||']+', 1, LEVEL ), ',') AS ATCH_FILE_NO
								 FROM DUAL
							   CONNECT BY LEVEL <![CDATA[ <= ]]> (LENGTH(','||#deleteAtchFileSeqList#) - LENGTH(REPLACE(','||#deleteAtchFileSeqList#,','))) / LENGTH(',')
							  )
	</delete>

	<delete id="gamFcltyQcwWrtMngDao.deleteFcltyQcwWrtMngAllQcMngAtchFile_S" parameterClass="gamQcMngAtchFileMngVO">
		DELETE FROM QC_MNG_ATCH_FILE_F
		WHERE FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
		AND FCLTS_JOB_SE = #fcltsJobSe#
		AND QC_MNG_SEQ = NVL(TO_NUMBER(REPLACE(#qcMngSeq#,',','')),0)
	</delete>

	<select id="gamFcltyQcwWrtMngDao.selectFcltyQcwWrtMngQcMngAtchFilePk_S" parameterClass="gamQcMngAtchFileMngVO" resultClass="egovMap">
		SELECT
				 T1.FCLTS_MNG_GROUP_NO AS FCLTS_MNG_GROUP_NO
				,TO_CHAR(T1.QC_MNG_SEQ) AS QC_MNG_SEQ
				,T1.FCLTS_JOB_SE AS FCLTS_JOB_SE
				,TO_CHAR(T1.ATCH_FILE_SEQ) AS ATCH_FILE_SEQ
				,T1.ATCH_FILE_SE AS ATCH_FILE_SE
				,T1.ATCH_FILE_SJ AS ATCH_FILE_SJ
				,T1.ATCH_FILE_NM_LOGIC AS ATCH_FILE_NM_LOGIC
				,T1.ATCH_FILE_NM_PHYSICL AS ATCH_FILE_NM_PHYSICL
				,TO_CHAR(T1.ATCH_FILE_WRITNG_DT,'YYYY-MM-DD') AS ATCH_FILE_WRITNG_DT
				,T1.REG_USR AS REG_USR
				,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
				,T1.UPD_USR AS UPD_USR
				,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
				,T1.ATCH_FILE_RM AS ATCH_FILE_RM
				,GAM_GET_FILE_SE_NM(T1.ATCH_FILE_SE) AS ATCH_FILE_SE_NM
				,'FALSE' AS ATCH_FILE_SEL_CHK
			FROM QC_MNG_ATCH_FILE_F T1
		WHERE T1.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
		AND T1.FCLTS_JOB_SE = #fcltsJobSe#
		AND T1.QC_MNG_SEQ = NVL(TO_NUMBER(REPLACE(#qcMngSeq#,',','')),0)
		AND T1.ATCH_FILE_SEQ = NVL(TO_NUMBER(REPLACE(#atchFileSeq#,',','')),0)
	</select>

	<select id="gamFcltyQcwWrtMngDao.selectFcltyQcwWrtMngQcMngAtchFileNewSeq_S" parameterClass="gamQcMngAtchFileMngVO" resultClass="java.lang.String">
		SELECT
				TO_CHAR(NVL(MAX(T1.ATCH_FILE_SEQ),0) + 1) AS NEW_SEQ
			FROM QC_MNG_ATCH_FILE_F T1
		WHERE T1.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
		AND T1.FCLTS_JOB_SE = #fcltsJobSe#
		AND T1.QC_MNG_SEQ = NVL(TO_NUMBER(REPLACE(#qcMngSeq#,',','')),0)
	</select>


	<select id="gamFcltyQcwWrtMngDao.selectCharger_S" parameterClass="hashMap" resultClass="egovMap">
			SELECT
					  CHARGER_DEPT ,
					  CHARGER_DISPLAY_NM ,
					  CHARGER_NM ,
					  CHARGER_NO ,
					  CHARGER_OFC_POS ,
					  FCLTS_JOB_SE ,
					  REG_USR ,
					  REGIST_DT ,
					  SIGN_FILE_NM_LOGIC ,
					  SIGN_FILE_NM_PHYSICL ,
					  UPD_USR ,
					  UPDT_DT
		     FROM FCLTS_CHARGER_F
		 	 WHERE
				  CHARGER_NM = #chargerNm#
	</select>

</sqlMap>