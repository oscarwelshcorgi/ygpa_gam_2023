<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="rte.ygpa.gam.cmmn.fclty">

	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="hashMap" type="java.util.HashMap"/>

	<update id="gamAssetsUsePermMngtDao.confirmAssetsUsePerm" parameterClass="hashMap">
		<![CDATA[
			UPDATE ASSETS_RENT_F
			SET PRMISN_DT=SYSDATE
				, PRMISN_YN='Y'
				, PRMISN_USR=#updUsr#
				, UPD_USR=#updUsr#
				, UPDT_DT=SYSDATE
			WHERE PRT_AT_CODE=#prtAtCode#
				AND MNG_YEAR=#mngYear#
				AND MNG_NO=#mngNo#
				AND MNG_CNT=#mngCnt#
		]]>
	</update>

	<update id="gamAssetsUsePermMngtDao.cancelAssetsUsePerm" parameterClass="hashMap">
		<![CDATA[
			UPDATE ASSETS_RENT_F
			SET PRMISN_DT=''
				, PRMISN_USR=''
				, PRMISN_YN='N'
				, UPD_USR=#updUsr#
				, UPDT_DT=SYSDATE
			WHERE PRT_AT_CODE=#prtAtCode#
				AND MNG_YEAR=#mngYear#
				AND MNG_NO=#mngNo#
				AND MNG_CNT=#mngCnt#
		]]>
	</update>

	<delete id="gamAssetsUsePermMngtDao.deleteAssetsUsagePdByStats_D" parameterClass="hashMap">
		<![CDATA[
			DELETE FROM USAGE_PD_BY_STATS_F
			WHERE PRT_AT_CODE=#prtAtCode#
				AND MNG_YEAR=#mngYear#
				AND MNG_NO=#mngNo#
				AND MNG_CNT=#mngCnt#
		]]>
	</delete>

	<delete id="gamAssetsUsePermMngtDao.deleteLevRequest_D" parameterClass="hashMap">
		<![CDATA[
			DELETE FROM LEV_REQEST_F
			WHERE PRT_AT_CODE=#prtAtCode#
				AND MNG_YEAR=#mngYear#
				AND MNG_NO=#mngNo#
				AND MNG_CNT=#mngCnt#
		]]>
	</delete>

	<select id="gamAssetsUsePermMngtDao.selectAssetRentByPk_S" parameterClass="hashMap" resultClass="egovMap">
		SELECT
				AR.PRT_AT_CODE
				, AR.MNG_YEAR
				, AR.MNG_NO
				, AR.MNG_CNT
				, AR.ENTRPSCD
				, (SELECT ENTRPS_NM FROM ENTRPS_INFO_F WHERE AR.ENTRPSCD=ENTRPSCD) AS ENTRPS_NM
				, AR.REQST_SE_CD
				, AR.GR_AR
				, AR.GR_FEE
				, AR.NTIC_MTH
				, AR.PAY_MTH
				, AR.PAYINST_INTRRATE
				, TO_CHAR(AR.FRST_PRMISN_DT, 'yyyy-mm-dd') FRST_PRMISN_DT
				, TO_CHAR(AR.PRMISN_DT, 'yyyy-mm-dd') PRMISN_DT
				, AR.PRMISN_YN
				, AR.RM
				, AR.DOC_NO
				, TO_CHAR(AR.GR_USAGE_PD_FROM, 'yyyy-mm-dd') GR_USAGE_PD_FROM
				, TO_CHAR(AR.GR_USAGE_PD_TO, 'yyyy-mm-dd') GR_USAGE_PD_TO
				, AR.REG_USR
				, AR.UPD_USR
			FROM ASSETS_RENT_F AR
			WHERE  PRT_AT_CODE=#prtAtCode#
				AND MNG_YEAR=#mngYear#
				AND MNG_NO=#mngNo#
				AND MNG_CNT=#mngCnt#
	</select>

    <!-- 승낙 처리 (징수의뢰 일괄생성 insert) -->
     <insert id="gamAssetsUsePermMngtDao.insertBillCreateOnce" parameterClass="hashMap">
		INSERT INTO LEV_REQEST_F (
				PRT_AT_CODE, MNG_YEAR, MNG_NO, MNG_CNT, NTIC_CNT, FCLTY_SE, CHRGE_KND, ENTRPSCD, ENTRPS_NM,
				NTIC_PD_FROM, NTIC_PD_TO, PAY_TMLMT, NTICNO, NTIC_DT, RCIV_SE, NHT_ISUE_YN,
				 OLNLP, FEE, VAT, VAT_YN, NTIC_AMT, RM, NTIC_MTH, REG_USR, REGIST_DT
		)
		SELECT
			AR.PRT_AT_CODE, AR.MNG_YEAR, AR.MNG_NO, AR.MNG_CNT, '01',  '1',
		  #chrgeKnd#,
		  MAX(AR.ENTRPSCD),
		  MAX(EI.ENTRPS_NM),
			  MIN(AR.GR_USAGE_PD_FROM),
			  MAX(AR.GR_USAGE_PD_TO),
		  <isEqual property="payMth" compareValue="Aft">
		  	MAX(AR.GR_USAGE_PD_TO),
		  </isEqual>
		  <isEqual property="payMth" compareValue="Pre">
		  	MIN(AR.GR_USAGE_PD_FROM),
		  </isEqual>
		  (SELECT MAX(NTICNO)+1 FROM LEV_REQEST_F) NTICNO,
		  '',
		  '0',
		  'N',
		  MAX(PFUD.OLNLP),
		  MAX(AR.GR_FEE),
		  case
		  when MAX(AR.TAXT_SE)='2' THEN trunc(MAX(AR.GR_FEE)/10, -1)
		  else 0
		  END,
		  case
		  when MAX(AR.TAXT_SE)='2' THEN 'Y'
		  else 'N'
		  END,
		  case
		  when MAX(AR.TAXT_SE)='2' THEN MAX(AR.GR_FEE)+trunc(MAX(AR.GR_FEE)/10, -1)
		  else MAX(AR.GR_FEE)
		  END,
		  MAX(AR.RM),
		  MAX(AR.NTIC_MTH), #regUsr#, SYSDATE
		FROM   ASSETS_RENT_F AR, ASSETS_RENT_DETAIL_F PFUD, ENTRPS_INFO_F EI
		WHERE AR.PRT_AT_CODE=PFUD.PRT_AT_CODE
			AND AR.MNG_YEAR=PFUD.MNG_YEAR
			AND AR.MNG_NO=PFUD.MNG_NO
			AND AR.MNG_CNT=PFUD.MNG_CNT
			AND AR.ENTRPSCD=EI.ENTRPSCD
			AND AR.PRT_AT_CODE=#prtAtCode#
			AND AR.MNG_YEAR=#mngYear#
			AND AR.MNG_NO=#mngNo#
			AND AR.MNG_CNT=#mngCnt#
		GROUP BY AR.PRT_AT_CODE, AR.MNG_YEAR, AR.MNG_NO, AR.MNG_CNT
    </insert>

    <!-- 승낙 처리 (징수의뢰 분납생성 insert) -->
    <insert id="gamAssetsUsePermMngtDao.insertBillCreateMore" parameterClass="hashMap">
		<![CDATA[
		INSERT INTO LEV_REQEST_F (
				PRT_AT_CODE, MNG_YEAR, MNG_NO, MNG_CNT, NTIC_CNT, FCLTY_SE, CHRGE_KND, ENTRPSCD,ENTRPS_NM,
				NTIC_PD_FROM, NTIC_PD_TO,
				NTICNO, RCIV_SE, NHT_ISUE_YN, PAY_TMLMT,
				 OLNLP, FEE, VAT, VAT_YN, NTIC_AMT, RM,
				  NTIC_MTH, REG_USR, REGIST_DT
		)
		SELECT
		#prtAtCode#, #mngYear#, #mngNo#, #mngCnt#, LPAD(NTIC_CNT, 2, '0'), '1', FEE_TP, #entrpscd# ENTRPSCD, (SELECT ENTRPS_NM FROM ENTRPS_INFO_F WHERE ENTRPSCD=#entrpscd#),
		START_DATE NTIC_PD_FROM, END_DATE NTIC_PD_TO,
		(SELECT MAX(NTICNO)+1 FROM LEV_REQEST_F) NTICNO, '0', 'N',
		]]>
		  <isEqual property="payMth" compareValue="Pre">
			START_DATE,
			</isEqual>
		  <isEqual property="payMth" compareValue="Aft">
			END_DATE,
			</isEqual>
		<![CDATA[
		(SELECT MAX(OLNLP) FROM ASSETS_RENT_DETAIL_F WHERE PRT_AT_CODE=#prtAtCode# AND MNG_YEAR=#mngYear# AND MNG_NO=#mngNo# AND MNG_CNT=#mngCnt#) OLNLP, RNTFEE, RNTFEE/10, 'Y',TRUNC(RNTFEE + (RNTFEE / 10), -1), #rm#,
		#nticMth#, #regUsr#, SYSDATE
		from (
			SELECT A.FEE_TP, NTIC_CNT, DECODE(A.FEE_TP, #chrgeKnd#, RNTFEE, 'A3', TRUNC(REFE*(RATE_DAY)/365*A.RATE, -1)) RNTFEE, REFE, START_DATE, PREV_DUE_DATE, DUE_DATE, END_DATE
			FROM (
			SELECT #chrgeKnd# FEE_TP, 1 RATE FROM dual
			UNION ALL SELECT 'A3', TO_NUMBER(NVL(#payinstIntrrate#, 0), '0.0000') FROM dual
			) A, (
			SELECT ROWNUM  as NTIC_CNT,
				  TRUNC(#grFee# / (TRUNC(MONTHS_BETWEEN(TO_DATE(#grUsagePdTo#,'YYYY-MM-DD'), TO_DATE(#grUsagePdFrom#,'YYYY-MM-DD')) / #blTpNum#)+1), -1) as RNTFEE,
				  TRUNC(#grFee# - ((#grFee#/(TRUNC(MONTHS_BETWEEN(TO_DATE(#grUsagePdTo#,'YYYY-MM-DD'), TO_DATE(#grUsagePdFrom#,'YYYY-MM-DD')) / #blTpNum#)+1)) * (ROWNUM-1)), -1) as REFE,
				  ADD_MONTHS(TO_DATE(#grUsagePdFrom#,'YYYY-MM-DD'), #blTpNum#     * (ROWNUM-1))                            AS START_DATE,
	        DECODE(ROWNUM, 1, 0, ADD_MONTHS(TO_DATE(#grUsagePdFrom#,'YYYY-MM-DD'), #blTpNum#     * (ROWNUM-1))-ADD_MONTHS(TO_DATE(#grUsagePdFrom#,'YYYY-MM-DD'), #blTpNum#     * (ROWNUM-1)-1)) AS RATE_DAY,
	          LAG(ADD_MONTHS(TO_DATE(#grUsagePdFrom#,'YYYY-MM-DD'), #blTpNum# * (ROWNUM-1))+14) OVER (ORDER BY ROWNUM) AS PREV_DUE_DATE,
				  ADD_MONTHS(TO_DATE(#grUsagePdFrom#,'YYYY-MM-DD'), #blTpNum#     * (ROWNUM-1))+14 AS DUE_DATE,
				  (
				    CASE
				      WHEN TO_DATE(#grUsagePdTo#,'YYYY-MM-DD') < ADD_MONTHS(TO_DATE(#grUsagePdFrom#,'YYYY-MM-DD'), #blTpNum# * ROWNUM) - 1 THEN
				          TO_DATE(#grUsagePdTo#,'YYYY-MM-DD')
				    ELSE
				          ADD_MONTHS(TO_DATE(#grUsagePdFrom#,'YYYY-MM-DD'), #blTpNum# * ROWNUM) - 1
				     END
				   ) as END_DATE
				FROM COMTCCMMNDETAILCODE
				WHERE ROWNUM <= (TRUNC(MONTHS_BETWEEN(TO_DATE(#grUsagePdTo#,'YYYY-MM-DD'), TO_DATE(#grUsagePdFrom#,'YYYY-MM-DD')) / #blTpNum#)+1)
	      ) B
		)
		WHERE RNTFEE<>0
		]]>
    </insert>

</sqlMap>

