<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ygpa.gam.fcltyMng">

    <typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
    <typeAlias alias="hashMap" type="java.util.HashMap"/>
    <typeAlias alias="gamFcltyRepairMngVO" type="egovframework.rte.ygpa.gam.fcltyMng.service.GamFcltyRepairMngVO"/>
    
    <!-- 하자보수내역 -->
	<select id="gamFcltyRepairMngDao.selectFcltyRepairMngList_D" parameterClass="gamFcltyRepairMngVO" resultClass="egovMap">
        SELECT A.*
           FROM (
                SELECT ROWNUM RNUM, S.*
                	FROM (
						SELECT
							(TO_CHAR(R.FLAW_RPR_START_DT,'YYYY-MM-DD') || '~' || TO_CHAR(R.FLAW_RPR_END_DT,'YYYY-MM-DD')) FLAW_RPR_TERM 
							, R.FLAW_RPR_AMT
							, R.FLAW_RPR_CONTENTS
							, R.REG_USR
							, TO_CHAR(R.REGIST_DT,'YYYY-MM-DD') REGIST_DT
							, R.UPD_USR
							, TO_CHAR(R.UPDT_DT,'YYYY-MM-DD') UPDT_DT
							, R.FLAW_RPR_ENTRPS_NM
							, R.FLAW_RPR_TY
							, GAM_GET_FLAW_RPR_TY_NM(R.FLAW_RPR_TY) FLAW_RPR_TY_NM
							, TO_CHAR(R.FLAW_OCCRRNC_DT,'YYYY-MM-DD') FLAW_OCCRRNC_DT
							, R.FLAW_RPR_COMPT_YN
							, R.FLAW_EXAM_SE
							, GAM_GET_FLAW_EXAM_SE_NM(R.FLAW_EXAM_SE) FLAW_EXAM_SE_NM
							, R.ENFORCE_YEAR
							, R.FLAW_RPR_NM
							, R.FCLTS_MNG_GROUP_NO
							, (SELECT G.FCLTS_MNG_GROUP_NM FROM FCLTS_MNG_GROUP_F G WHERE G.FCLTS_MNG_GROUP_NO = R.FCLTS_MNG_GROUP_NO) FCLTS_MNG_GOUP_NM
							, R.FCLTS_JOB_SE
							, GAM_GET_FCLTS_JOB_SE_NM(R.FCLTS_JOB_SE) FCLTS_JOB_SE_NM
							, R.FLAW_RPR_SEQ
							, TO_CHAR(R.FLAW_EXAM_DT,'YYYY-MM-DD') FLAW_EXAM_DT
							, R.FLAW_ENNC
							, R.FLAW_EXAM_RESULT
							, R.RM
							, R.CTRT_NO
						FROM
							FLAW_RPR_DTLS_F R 
						WHERE
							1 = 1 
						<isNotEmpty property="sFcltsJobSe">
	           				AND R.FCLTS_JOB_SE = #sFcltsJobSe#
	           			</isNotEmpty>
	           			
	           			<isNotEmpty property="sFlawRprNm">
	           				AND R.FLAW_RPR_NM LIKE '%' || #sFlawRprNm# || '%'
	           			</isNotEmpty>
	           			
	           			<isNotEmpty property="sFlawExamSe">
	           				AND R.FLAW_EXAM_SE = #sFlawExamSe#
	           			</isNotEmpty>
	           			
	           			<isNotEmpty property="sFlawRprStartDtFr">
	           				AND 
	           				(
	           					<![CDATA[ R.FLAW_EXAM_DT >= #sFlawRprStartDtFr# ]]>
	           				<isNotEmpty property="sFlawRprStartDtTo">
		           				<![CDATA[ AND R.FLAW_EXAM_DT <= #sFlawRprStartDtTo# ]]>
		           			</isNotEmpty>
		           			)
	           			</isNotEmpty>
	           			
						ORDER BY
							R.FLAW_RPR_START_DT DESC
                ) S
             ) A
        <![CDATA[ WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex# ]]>		
	</select>

	<select id="gamFcltyRepairMngDao.selectFcltyRepairMngListTotCnt_S" parameterClass="gamFcltyRepairMngVO" resultClass="int">
		SELECT
			COUNT(*) TOT_CNT
		FROM
			FLAW_RPR_DTLS_F 
		WHERE
		1 = 1 
		<isNotEmpty property="sFcltsJobSe">
			AND FCLTS_JOB_SE = #sFcltsJobSe#
		</isNotEmpty>
		
		<isNotEmpty property="sFlawRprNm">
			AND FLAW_RPR_NM LIKE '%' || #sFlawRprNm# || '%'
		</isNotEmpty>
		
		<isNotEmpty property="sFlawExamSe">
			AND FLAW_EXAM_SE = #sFlawExamSe#
		</isNotEmpty>
		
		<isNotEmpty property="sFlawRprStartDtFr">
			AND 
			(
				<![CDATA[ FLAW_EXAM_DT >= #sFlawRprStartDtFr# ]]>
			<isNotEmpty property="sFlawRprStartDtTo">
				<![CDATA[ AND FLAW_EXAM_DT <= #sFlawRprStartDtTo# ]]>
			</isNotEmpty>
			)
		</isNotEmpty>
		
	</select>
	
	
	<select id="gamFcltyRepairMngDao.selectFcltyRepairMngDetail_S" parameterClass="gamFcltyRepairMngVO" resultClass="egovMap">
	
		SELECT
			TO_CHAR(R.FLAW_RPR_START_DT,'YYYY-MM-DD') FLAW_RPR_START_DT
			, TO_CHAR(R.FLAW_RPR_END_DT,'YYYY-MM-DD') FLAW_RPR_END_DT
			, R.FLAW_RPR_AMT
			, R.FLAW_RPR_CONTENTS
			, R.REG_USR
			, TO_CHAR(R.REGIST_DT,'YYYY-MM-DD') REGIST_DT
			, R.UPD_USR
			, TO_CHAR(R.UPDT_DT,'YYYY-MM-DD') UPDT_DT
			, R.FLAW_RPR_ENTRPS_NM
			, R.FLAW_RPR_TY
			, TO_CHAR(R.FLAW_OCCRRNC_DT,'YYYY-MM-DD') FLAW_OCCRRNC_DT
			, R.FLAW_RPR_COMPT_YN
			, R.FLAW_EXAM_SE
			, GAM_GET_FLAW_EXAM_SE_NM(R.FLAW_EXAM_SE) FLAW_EXAM_SE_NM
			, R.ENFORCE_YEAR
			, R.FLAW_RPR_NM
			, R.FCLTS_MNG_GROUP_NO
			, (SELECT G.FCLTS_MNG_GROUP_NM FROM FCLTS_MNG_GROUP_F G WHERE G.FCLTS_MNG_GROUP_NO = R.FCLTS_MNG_GROUP_NO) FCLTS_MNG_GOUP_NO_NM
			, R.FCLTS_JOB_SE
			, GAM_GET_FCLTS_JOB_SE_NM(R.FCLTS_JOB_SE) FCLTS_JOB_SE_NM
			, R.FLAW_RPR_SEQ
			, TO_CHAR(R.FLAW_EXAM_DT,'YYYY-MM-DD') FLAW_EXAM_DT
			, R.FLAW_ENNC
			, R.FLAW_EXAM_RESULT
			, R.RM
			, R.CTRT_NO
		FROM
			FLAW_RPR_DTLS_F R 
		WHERE 
			R.FCLTS_JOB_SE = #fcltsJobSe#
			AND R.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND R.FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
		
		
	</select>
	
	
	<!-- 하자보수대상시설물내역 -->
	<select id="gamFcltyRepairMngDao.selectFlawRprObjFcltsFList_D" parameterClass="gamFcltyRepairMngVO" resultClass="egovMap">
        SELECT A.*
           FROM (
                SELECT ROWNUM RNUM, S.*
                	FROM (
						SELECT
							O.FCLTS_MNG_GROUP_NO
							, O.FCLTS_JOB_SE
							, O.FLAW_RPR_SEQ
							, O.FCLTS_MNG_NO
							, (SELECT PRT_FCLTY_NM FROM GIS_PRT_FCLTY_CD_F G WHERE G.FCLTS_MNG_NO = O.FCLTS_MNG_NO) PRT_FCLTY_NM
							, TO_CHAR(O.FLAW_EXAM_DT,'YYYY-MM-DD') FLAW_EXAM_DT
							, O.FLAW_ENNC
							, O.FLAW_EXAM_RESULT 
							, O.RM
							, O.REG_USR
							, O.REGIST_DT
							, O.UPD_USR
							, O.UPDT_DT
						FROM
							FLAW_RPR_OBJ_FCLTS_F O 
						WHERE
							O.FCLTS_JOB_SE = #fcltsJobSe#
							AND O.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
							AND O.FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
	           			
						ORDER BY
							O.FLAW_RPR_SEQ ASC
                ) S
             ) A
        <![CDATA[ WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex# ]]>		
	</select>

	<select id="gamFcltyRepairMngDao.selectFlawRprObjFcltsFListTotCnt_S" parameterClass="gamFcltyRepairMngVO" resultClass="int">
		SELECT
			COUNT(*) TOT_CNT
		FROM
			FLAW_RPR_OBJ_FCLTS_F 
		WHERE
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
	</select>
	
	
	<!-- 하자보수검사자내역 -->
	<select id="gamFcltyRepairMngDao.selectFlawExamUsrFList_D" parameterClass="gamFcltyRepairMngVO" resultClass="egovMap">
        SELECT A.*
           FROM (
                SELECT ROWNUM RNUM, S.*
                	FROM (
						SELECT
							FLAW_EXAM_USR
							, TO_CHAR(FLAW_EXAM_DT,'YYYY-MM-DD') FLAW_EXAM_DT
							, REG_USR
							, TO_CHAR(REGIST_DT,'YYYY-MM-DD') REGIST_DT
							, UPD_USR
							, TO_CHAR(UPDT_DT,'YYYY-MM-DD') UPDT_DT
							, SEQ
							, FLAW_EXAM_COMPT_YN
							, FCLTS_MNG_GROUP_NO
							, FCLTS_JOB_SE
							, FLAW_RPR_SEQ
						FROM
							FLAW_EXAM_USR_F 
						WHERE
							FCLTS_JOB_SE = #fcltsJobSe#
							AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
							AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
	           			
						ORDER BY
							FLAW_RPR_SEQ ASC
                ) S
             ) A
        <![CDATA[ WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex# ]]>		
	</select>

	<select id="gamFcltyRepairMngDao.selectFlawExamUsrFListTotCnt_S" parameterClass="gamFcltyRepairMngVO" resultClass="int">
		SELECT
			COUNT(*) TOT_CNT
		FROM
			FLAW_EXAM_USR_F 
		WHERE
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
	</select>
	
	
	
	<!-- 하자보수첨부파일내역 -->
	<select id="gamFcltyRepairMngDao.selectFcltyRepairFileList_D" parameterClass="gamFcltyRepairMngVO" resultClass="egovMap">
        SELECT A.*
           FROM (
                SELECT ROWNUM RNUM, S.*
                	FROM (
						SELECT
							FCLTS_JOB_SE
							, FCLTS_MNG_GROUP_NO
							, FLAW_RPR_SEQ
							, ATCH_FILE_SEQ
							, ATCH_FILE_SE
							, GAM_GET_FILE_SE_NM(ATCH_FILE_SE) AS ATCH_FILE_SE_NM
							, ATCH_FILE_SJ
							, ATCH_FILE_NM_LOGIC
							, ATCH_FILE_NM_PHYSICL
							, TO_CHAR(ATCH_FILE_WRITNG_DT,'YYYY-MM-DD') ATCH_FILE_WRITNG_DT
							, REG_USR
							, REGIST_DT
							, UPD_USR
							, UPDT_DT
						FROM
							FLAW_RPR_ATCH_FILE_F 
						WHERE
							FCLTS_JOB_SE = #fcltsJobSe#
							AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
							AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
	           			
						ORDER BY
							FLAW_RPR_SEQ ASC
                ) S
             ) A
        <![CDATA[ WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex# ]]>		
	</select>

	<select id="gamFcltyRepairMngDao.selectFcltyRepairFileListTotCnt_S" parameterClass="gamFcltyRepairMngVO" resultClass="int">
		SELECT
			COUNT(*) TOT_CNT
		FROM
			FLAW_RPR_ATCH_FILE_F 
		WHERE
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
	</select>
	
	
	<!-- 하자보수순번 -->
	<select id="gamFcltyRepairMngDao.selectNextMntnRprSeq_S" parameterClass="hashMap" resultClass="int">
		SELECT
			(NVL(MAX(FLAW_RPR_SEQ),0) + 1) NEXT_FLAW_RPR_SEQ
		FROM
			FLAW_RPR_DTLS_F 
		WHERE 
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
	</select>
	
	
	<!-- 하자보수내역입력 -->
	<insert id="gamFcltyRepairMngDao.insertFcltyRepairMng">
		INSERT INTO 
			FLAW_RPR_DTLS_F  
			(
				FLAW_RPR_START_DT
				, FLAW_RPR_END_DT
				, FLAW_RPR_AMT
				, FLAW_RPR_CONTENTS
				, REG_USR
				, REGIST_DT
				, FLAW_RPR_ENTRPS_NM
				, FLAW_RPR_TY
				, FLAW_OCCRRNC_DT
				, FLAW_RPR_COMPT_YN
				, FLAW_EXAM_SE
				, ENFORCE_YEAR
				, FLAW_RPR_NM
				, FCLTS_MNG_GROUP_NO
				, FCLTS_JOB_SE
				, FLAW_RPR_SEQ
				, FLAW_EXAM_DT
				, FLAW_ENNC
				, FLAW_EXAM_RESULT
				, RM
				, CTRT_NO
			) 
			VALUES 
			(
				#flawRprStartDt#
				, #flawRprEndDt#
				, REPLACE(#flawRprAmt#,',','')
				, #flawRprContents#
				, #regUsr#
				, SYSDATE
				, #flawRprEntrpsNm#
				, #flawRprTy#
				, #flawOccrrncDt#
				, #flawRprComptYn#
				, #flawExamSe#
				, #enforceYear#
				, #flawRprNm#
				, #fcltsMngGroupNo#
				, #fcltsJobSe#
				, #flawRprSeq#
				, #flawExamDt#
				, #flawEnnc#
				, #flawExamResult#
				, #rm#
				, #ctrtNo#
			)
	</insert>
	
	<!-- 하자보수내역수정 -->
	<update id="gamFcltyRepairMngDao.updateFcltyRepairMng">
		UPDATE FLAW_RPR_DTLS_F 
			SET
				FLAW_RPR_START_DT = #flawRprStartDt#
				, FLAW_RPR_END_DT = #flawRprEndDt#
				, FLAW_RPR_AMT = REPLACE(#flawRprAmt#, ',', '')
				, FLAW_RPR_CONTENTS = #flawRprContents#
				, UPD_USR = #regUsr#
				, UPDT_DT = SYSDATE
				, FLAW_RPR_ENTRPS_NM = #flawRprEntrpsNm#
				, FLAW_RPR_TY = #flawRprTy#
				, FLAW_OCCRRNC_DT = #flawOccrrncDt#
				, FLAW_RPR_COMPT_YN = #flawRprComptYn#
				, FLAW_EXAM_SE = #flawExamSe#
				, ENFORCE_YEAR = #enforceYear#
				, FLAW_RPR_NM = #flawRprNm#
				, FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
				, FCLTS_JOB_SE = #fcltsJobSe#
				, FLAW_RPR_SEQ = #flawRprSeq#
				, FLAW_EXAM_DT = #flawExamDt#
				, FLAW_ENNC = #flawEnnc#
				, FLAW_EXAM_RESULT = #flawExamResult#
				, RM = #rm#
				, CTRT_NO = #ctrtNo#
			WHERE 
				FCLTS_JOB_SE = #fcltsJobSe#
				AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
				AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
	</update>
	
	<!-- 하자보수내역삭제 -->
	<delete id="gamFcltyRepairMngDao.deleteFcltyRepairMng">
		DELETE FROM 
			FLAW_RPR_DTLS_F 
		WHERE 
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
	</delete>
	
	
	<!-- 하자보수대상시설물입력 -->
	<insert id="gamFcltyRepairMngDao.insertFlawRprObjFcltsF">
		INSERT INTO 
			FLAW_RPR_OBJ_FCLTS_F 
			(
				FCLTS_MNG_GROUP_NO
				, FCLTS_JOB_SE
				, FLAW_RPR_SEQ
				, FCLTS_MNG_NO
				, FLAW_EXAM_DT
				, FLAW_ENNC
				, FLAW_EXAM_RESULT 
				, RM
				, REG_USR
				, REGIST_DT
			) 
			VALUES 
			(
				#fcltsMngGroupNo#
				, #fcltsJobSe#
				, $flawRprSeq$
				, #fcltsMngNo#
				, #flawExamDt#
				, #flawEnnc#
				, #flawExamResult#
				, #rm#
				, #regUsr#
				, SYSDATE
			)
	</insert>
	
	
	<!-- 하자보수대상시설물수정 -->
	<update id="gamFcltyRepairMngDao.updateFlawRprObjFcltsF">
		UPDATE FLAW_RPR_OBJ_FCLTS_F  
			SET 
				FCLTS_MNG_NO = #fcltsMngNo#
				, FLAW_EXAM_RESULT = #flawExamResult#
				, FLAW_EXAM_DT = #flawExamDt#
				, FLAW_ENNC = #flawEnnc#
				, RM = #rm#
				, UPD_USR = #updUsr#
				, UPDT_DT = SYSDATE
			WHERE 
				FCLTS_JOB_SE = #fcltsJobSe#
				AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
				AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
				AND FCLTS_MNG_NO = #fcltsMngNo#
	</update>
	
	
	
	<!-- 하자보수대상시설물삭제 -->
	<delete id="gamFcltyRepairMngDao.deleteFlawRprObjFcltsF">
		DELETE FROM  
			FLAW_RPR_OBJ_FCLTS_F 
		WHERE 
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
		<isNotEmpty property="fcltsMngNo">
			AND FCLTS_MNG_NO = #fcltsMngNo#
		</isNotEmpty>
			
	</delete>
	
	
	<!-- 하자보수검사자입력 -->
	<insert id="gamFcltyRepairMngDao.insertFlawExamUsrF">
		<selectKey keyProperty="maxExamUsrSeq" resultClass="String">
	       	SELECT 
	       		(NVL(MAX(SEQ),0) + 1)
			FROM 
				FLAW_EXAM_USR_F
			WHERE 
				FCLTS_JOB_SE = #fcltsJobSe#
				AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
				AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
	    </selectKey>
		INSERT INTO 
			FLAW_EXAM_USR_F 
			(
				FLAW_EXAM_USR
				, FLAW_EXAM_DT
				, REG_USR
				, REGIST_DT
				, SEQ
				, FLAW_EXAM_COMPT_YN
				, FCLTS_MNG_GROUP_NO
				, FCLTS_JOB_SE
				, FLAW_RPR_SEQ
			) 
			VALUES 
			(
				#flawExamUsr#
				, #flawExamDt#
				, #regUsr#
				, SYSDATE
				, $maxExamUsrSeq$
				, #flawExamComptYn#
				, #fcltsMngGroupNo#
				, #fcltsJobSe#
				, $flawRprSeq$
			)
	</insert>
	
	
	<!-- 하자보수검사자수정 -->
	<update id="gamFcltyRepairMngDao.updateFlawExamUsrF">
		UPDATE FLAW_EXAM_USR_F  
			SET 
				FLAW_EXAM_USR = #flawExamUsr#
				, FLAW_EXAM_DT = #flawExamDt#
				, UPD_USR = #updUsr#
				, UPDT_DT = SYSDATE
				, FLAW_EXAM_COMPT_YN = #flawExamComptYn#
			WHERE 
				FCLTS_JOB_SE = #fcltsJobSe#
				AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
				AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
				AND SEQ = TO_NUMBER(#seq#)
	</update>
	

	<!-- 하자보수검사자삭제 -->
	<delete id="gamFcltyRepairMngDao.deleteFlawExamUsrF">
		DELETE FROM  
			FLAW_EXAM_USR_F 
		WHERE 
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
		<isNotEmpty property="seq">
			AND SEQ = TO_NUMBER(#seq#)
		</isNotEmpty>
			
	</delete>

	
	
	<!-- 하자보수첨부파일입력 -->
	<insert id="gamFcltyRepairMngDao.insertFcltyRepairFile">
		<selectKey keyProperty="maxAtchFileSeq" resultClass="String">
	       	SELECT 
	       		(NVL(MAX(ATCH_FILE_SEQ),0) + 1)
			FROM 
				FLAW_RPR_ATCH_FILE_F
			WHERE 
				FCLTS_JOB_SE = #fcltsJobSe#
				AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
				AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
	    </selectKey>
	    
		INSERT INTO 
			FLAW_RPR_ATCH_FILE_F 
			(
				FCLTS_JOB_SE
				, FCLTS_MNG_GROUP_NO
				, FLAW_RPR_SEQ
				, ATCH_FILE_SEQ
				, ATCH_FILE_SE
				, ATCH_FILE_SJ
				, ATCH_FILE_NM_LOGIC
				, ATCH_FILE_NM_PHYSICL
				, ATCH_FILE_WRITNG_DT
				, REG_USR
				, REGIST_DT
			) 
			VALUES 
			(
				#fcltsJobSe#
				, #fcltsMngGroupNo#
				, #flawRprSeq#
				, #maxAtchFileSeq#
				, #atchFileSe#
				, #atchFileSj#
				, #atchFileNmLogic#
				, #atchFileNmPhysicl#
				, #atchFileWritngDt#
				, #regUsr#
				, SYSDATE
			)
	</insert>
	
	
	<!-- 하자보수첨부파일수정 -->
	<update id="gamFcltyRepairMngDao.updateFcltyRepairFile">
		UPDATE FLAW_RPR_ATCH_FILE_F 
			SET 
				ATCH_FILE_SE = #atchFileSe#
				, ATCH_FILE_SJ = #atchFileSj#
				, ATCH_FILE_NM_LOGIC = #atchFileNmLogic#
				, ATCH_FILE_NM_PHYSICL = #atchFileNmPhysicl#
				, ATCH_FILE_WRITNG_DT = #atchFileWritngDt#
				, UPD_USR = #updUsr#
				, UPDT_DT = SYSDATE
			WHERE 
				FCLTS_JOB_SE = #fcltsJobSe#
				AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
				AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
				AND ATCH_FILE_SEQ = TO_NUMBER(#atchFileSeq#)
	</update>
	
	
	<!-- 하자보수첨부파일삭제 -->
	<delete id="gamFcltyRepairMngDao.deleteFcltyRepairFile">
		DELETE FROM
			FLAW_RPR_ATCH_FILE_F 
		WHERE 
			FCLTS_JOB_SE = #fcltsJobSe#
			AND FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
		<isNotEmpty property="atchFileSeq">
			AND ATCH_FILE_SEQ = TO_NUMBER(#atchFileSeq#)
		</isNotEmpty>
			
	</delete>
	
	
	<select id="gamFcltyRepairMngDao.selectFcltyRepairCheckReport_S" parameterClass="gamFcltyRepairMngVO" resultClass="egovMap">
	
		SELECT
			R.FLAW_RPR_NM
			, TO_CHAR(R.FLAW_EXAM_DT,'YYYY"년 "MM"월 "DD"일"') FLAW_EXAM_DT
			, R.FLAW_EXAM_RESULT
			, R.FLAW_RPR_ENTRPS_NM
			, (SELECT 
					U.FLAW_EXAM_USR 
				FROM 
					FLAW_EXAM_USR_F U 
				WHERE 
					U.FCLTS_JOB_SE = R.FCLTS_JOB_SE
					AND U.FCLTS_MNG_GROUP_NO = R.FCLTS_MNG_GROUP_NO
					AND U.FLAW_RPR_SEQ = R.FLAW_RPR_SEQ
					AND U.SEQ = 1) FLAW_EXAM_USR
			, (SELECT TO_CHAR(C.CTRT_DT,'YYYY"년 "MM"월 "DD"일"') FROM CTRT_INFO_F C WHERE C.CTRT_NO = R.CTRT_NO) CTRT_DT
			, (SELECT J.RPRSNTV FROM CTRT_JOIN_CONTR_F J WHERE J.CTRT_NO = R.CTRT_NO AND SEQ = 1) RPRSNTV
			, (SELECT C.CTRT_AMT FROM CTRT_INFO_F C WHERE C.CTRT_NO = R.CTRT_NO) CTRT_AMT
			, (SELECT 
					TRANSLATE
				     ( SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 1,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 1,1),0,'','천')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 2,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 2,1),0,'','백')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 3,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 3,1),0,'','십')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 4,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 1,4),0,'','조')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 5,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 5,1),0,'','천')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 6,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 6,1),0,'','백')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 7,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 7,1),0,'','십')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 8,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 5,4),0,'','억')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 9,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 9,1),0,'','천')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'),10,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'),10,1),0,'','백')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'),11,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'),11,1),0,'','십')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'),12,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'), 9,4),0,'','만')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'),13,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'),13,1),0,'','천')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'),14,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'),14,1),0,'','백')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'),15,1)||DECODE(SUBSTR(LPAD(C.CTRT_AMT,16,'0'),15,1),0,'','십')
				    || SUBSTR(LPAD(C.CTRT_AMT,16,'0'),16,1)
				     , '1234567890', '일이삼사오육칠팔구') FROM CTRT_INFO_F C WHERE C.CTRT_NO = R.CTRT_NO) CTRT_AMT_KO
		FROM
			FLAW_RPR_DTLS_F R 
		WHERE 
			R.FCLTS_JOB_SE = #fcltsJobSe#
			AND R.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			AND R.FLAW_RPR_SEQ = TO_NUMBER(#flawRprSeq#)
		
	</select>

</sqlMap>