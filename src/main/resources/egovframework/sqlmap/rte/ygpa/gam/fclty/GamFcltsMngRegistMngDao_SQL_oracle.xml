<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<!-- SQL MAP 정의 -->
<sqlMap namespace="ygpa.gam.fclty">
	<!-- TYPE ALIAS 정의 -->
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="hashMap" type="java.util.HashMap"/>
	<typeAlias alias="gamFcltsMngRegistMngVO" type="egovframework.rte.ygpa.gam.fclty.service.GamFcltsMngRegistMngVO"/>
	<typeAlias alias="gamFcltsMngRegistMngQcMngDtlsVO" type="egovframework.rte.ygpa.gam.fclty.service.GamFcltsMngRegistMngQcMngDtlsVO"/>
	<typeAlias alias="gamFcltsMngRegistMngMntnRprDtlsVO" type="egovframework.rte.ygpa.gam.fclty.service.GamFcltsMngRegistMngMntnRprDtlsVO"/>
	<!-- RESULT MAP 정의 -->
	<resultMap id="gamFcltsMngRegistMngSumMap" class="gamFcltsMngRegistMngVO">
		<result property="totalCount" column="TOTAL_COUNT" columnIndex="1"/>
		<result property="sumCnstrctAmt" column="SUM_CNSTRCT_AMT" columnIndex="2"/>
	</resultMap>

	<select id="gamFcltsMngRegistMngDao.selectFcltsMngRegistMngList_D" parameterClass="gamFcltsMngRegistMngVO" resultClass="egovMap">
		SELECT T.*
			FROM (
				SELECT  ROWNUM RNUM, S.*
					FROM (
						SELECT
								 T1.FCLTS_NO AS FCLTS_NO
								,T1.FCLTS_NM AS FCLTS_NM
								,T1.ROUTE AS ROUTE
								,T1.FCLTS_GBN AS FCLTS_GBN
								,T1.FCLTS_SE AS FCLTS_SE
								,T1.FCLTS_KND AS FCLTS_KND
								,T1.LOC_DO AS LOC_DO
								,T1.LOC_SI AS LOC_SI
								,T1.LOC_DONG AS LOC_DONG
								,T1.LOC_JIBUN AS LOC_JIBUN
								,T1.MNG_MAINBD_SE AS MNG_MAINBD_SE
								,T1.MNG_MAINBD AS MNG_MAINBD
								,T1.OWNER AS OWNER
								,TO_CHAR(T1.BLD_DT,'YYYY-MM-DD') AS BLD_DT
								,TO_CHAR(T1.FLAW_END_DT,'YYYY-MM-DD') AS FLAW_END_DT
								,T1.DTLS_SPEC_YN AS DTLS_SPEC_YN
								,T1.QC_HIST_YN AS QC_HIST_YN
								,T1.MNTN_HIST_YN AS MNTN_HIST_YN
								,TO_CHAR(T1.PLAN_BEGIN_DT,'YYYY-MM-DD') AS PLAN_BEGIN_DT
								,TO_CHAR(T1.PLAN_END_DT,'YYYY-MM-DD') AS PLAN_END_DT
								,T1.PLANNER AS PLANNER
								,TO_CHAR(T1.CNST_BEGIN_DT,'YYYY-MM-DD') AS CNST_BEGIN_DT
								,TO_CHAR(T1.CNST_END_DT,'YYYY-MM-DD') AS CNST_END_DT
								,T1.CNSTRTR AS CNSTRTR
								,LTRIM(TO_CHAR(NVL(T1.CNSTRCT_AMT,0),'9,999,999,999,999,990')) AS CNSTRCT_AMT
								,T1.ERQ_PROOF_PLAN_APPLC_ENNC AS ERQ_PROOF_PLAN_APPLC_ENNC
								,TO_CHAR(T1.INSPECT_BEGIN_DT,'YYYY-MM-DD') AS INSPECT_BEGIN_DT
								,TO_CHAR(T1.INSPECT_END_DT,'YYYY-MM-DD') AS INSPECT_END_DT
								,T1.INSPECTOR AS INSPECTOR
								,T1.CNST_ORDER_BODY AS CNST_ORDER_BODY
								,T1.CNST_NM AS CNST_NM
								,T1.CNST_SUPERVISOR AS CNST_SUPERVISOR
								,T1.PLAN_BOOK_MNTEN AS PLAN_BOOK_MNTEN
								,TO_CHAR(T1.WRT_DT,'YYYY-MM-DD') AS WRT_DT
								,T1.WRT_USR AS WRT_USR
								,TO_CHAR(T1.LAST_UPDT_DT,'YYYY-MM-DD') AS LAST_UPDT_DT
								,T1.LAST_UPDT_USR AS LAST_UPDT_USR
								,T1.BASIC_RM AS BASIC_RM
								,T1.MAX_SHIP_SCL AS MAX_SHIP_SCL
								,T1.EXTD AS EXTD
								,T1.UPSIDE_ALT AS UPSIDE_ALT
								,T1.DPWT AS DPWT
								,T1.FMT_1_DESC_1 AS FMT_1_DESC_1
								,T1.FMT_1_DESC_2 AS FMT_1_DESC_2
								,T1.FMT_1_DESC_3 AS FMT_1_DESC_3
								,T1.FMT_1_DESC_4 AS FMT_1_DESC_4
								,T1.FMT_2_DESC_1_1 AS FMT_2_DESC_1_1
								,T1.FMT_2_DESC_1_2 AS FMT_2_DESC_1_2
								,T1.FMT_2_DESC_1_3 AS FMT_2_DESC_1_3
								,T1.FMT_2_DESC_2 AS FMT_2_DESC_2
								,T1.FMT_2_DESC_3 AS FMT_2_DESC_3
								,T1.FMT_3_DESC_1 AS FMT_3_DESC_1
								,T1.FMT_3_DESC_2 AS FMT_3_DESC_2
								,T1.ETC_DTLS_SPEC AS ETC_DTLS_SPEC
								,T1.FCLTS_MNG_GROUP_NO AS FCLTS_MNG_GROUP_NO
								,T1.REG_USR AS REG_USR
								,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
								,T1.UPD_USR AS UPD_USR
								,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
								,REPLACE(NVL(T1.LOC_DO,' ') || ' ' || NVL(T1.LOC_SI,' ') || ' ' || NVL(T1.LOC_DONG,' ') || NVL(T1.LOC_JIBUN,' '),'  ',' ') AS LOC
								,GAM_GET_FCLTS_GBN_NM(T1.FCLTS_GBN) AS FCLTS_GBN_NM
								,GAM_GET_FCLTS_SE_NM(T1.FCLTS_SE) AS FCLTS_SE_NM
								,GAM_GET_FCLTS_KND_NM(T1.FCLTS_KND) AS FCLTS_KND_NM
								,T2.FCLTS_MNG_GROUP_NM AS FCLTS_MNG_GROUP_NM
								,T1.BASE_FMT AS BASE_FMT
								,T1.STRCT_FMT AS STRCT_FMT
								,T1.AR AS AR
								,T1.ARCH_AR AS ARCH_AR
								,T1.PLOT_AR AS PLOT_AR
								,T1.MAIN_USAGE_PRPOS AS MAIN_USAGE_PRPOS
								,T1.PRK_AR AS PRK_AR
								,T1.ISD_PRK_AR AS ISD_PRK_AR
								,T1.OSD_PRK_AR AS OSD_PRK_AR
								,T1.PRK_CNT AS PRK_CNT
								,T1.ISD_PRK_CNT AS ISD_PRK_CNT
								,T1.OSD_PRK_CNT AS OSD_PRK_CNT
								,T1.EXHAUST_DUCT_ENNC AS EXHAUST_DUCT_ENNC
								,T1.VNTLTN_ARCNDT_MTHD AS VNTLTN_ARCNDT_MTHD
								,T1.WRT_TANK_LOC AS WRT_TANK_LOC
								,T1.SBT_LOC AS SBT_LOC
								,T1.OIL_SAVEFCLTY_LOC AS OIL_SAVEFCLTY_LOC
								,T1.SWG_CLUPFCLTY_LOC AS SWG_CLUPFCLTY_LOC
								,T1.LIFT_CNT_PSNGR AS LIFT_CNT_PSNGR
								,T1.LIFT_CNT_CARGO AS LIFT_CNT_CARGO
								,T1.LIFT_CNT_EMGCY AS LIFT_CNT_EMGCY
								,T1.LIFT_OPER_MTHD AS LIFT_OPER_MTHD
								,T1.CLNG_ENNC AS CLNG_ENNC
								,T1.CLNG_SRC AS CLNG_SRC
								,T1.HTNG_ENNC AS HTNG_ENNC
								,T1.HTNG_SRC AS HTNG_SRC
								,T1.SPICTANK_FMT AS SPICTANK_FMT
								,T1.ELCTY_LEAD_IN_CAPA AS ELCTY_LEAD_IN_CAPA
								,T1.GROUND_FLOOR_CN AS GROUND_FLOOR_CN
								,T1.TOP_FLOOR_CN AS TOP_FLOOR_CN
								,T1.UNDER_FLOOR_CN AS UNDER_FLOOR_CN
								,T1.HIGH_HT AS HIGH_HT
								,T1.HIGH_FLLOR_HT AS HIGH_FLLOR_HT
								,T1.HIGH_FLLOR_HT_POS AS HIGH_FLLOR_HT_POS
								,T1.BASE_SIDE_DP AS BASE_SIDE_DP
								,T1.FLOOR_AR_RATE AS FLOOR_AR_RATE
								,T1.CAPA_RATE AS CAPA_RATE
								,T1.DT_MAX_USAGE_CN AS DT_MAX_USAGE_CN
								,T1.DT_USAGE_CN AS DT_USAGE_CN
								,T1.BLD_MNTN_MNG_SYS_YN AS BLD_MNTN_MNG_SYS_YN
								,T1.MNTN_MNG_ADD_FCLTY_YN AS MNTN_MNG_ADD_FCLTY_YN
								,T1.APPT_TP AS APPT_TP
								,T1.BRIDGE_START_LOC AS BRIDGE_START_LOC
								,T1.BRIDGE_END_LOC AS BRIDGE_END_LOC
								,T1.PLAN_LIVE_WGHT AS PLAN_LIVE_WGHT
								,T1.ALLOW_PASS_WGHT AS ALLOW_PASS_WGHT
								,T1.EXT_LT AS EXT_LT
								,T1.EXT_SPAN_CN AS EXT_SPAN_CN
								,T1.EXT_MAX_SPAN_LT AS EXT_MAX_SPAN_LT
								,T1.PAVE_WD AS PAVE_WD
								,T1.ROAD_WD AS ROAD_WD
								,T1.SUM_PAVE_ROAD_WD AS SUM_PAVE_ROAD_WD
								,T1.UP_ROAD_CN AS UP_ROAD_CN
								,T1.DOWN_ROAD_CN AS DOWN_ROAD_CN
								,T1.SUM_UP_DOWN_ROAD_CN AS SUM_UP_DOWN_ROAD_CN
								,T1.SPAN_COMP AS SPAN_COMP
								,T1.MAIN_SPAN_FMT AS MAIN_SPAN_FMT
								,T1.SUN_SPAN_FMT AS SUN_SPAN_FMT
								,T1.PROP_SE AS PROP_SE
								,T1.BULD_CONN_SE AS BULD_CONN_SE
								,T1.SUB_PASS_LMT_HT AS SUB_PASS_LMT_HT
								,T1.BRIDGE_PIER_FMT_1 AS BRIDGE_PIER_FMT_1
								,T1.BRIDGE_PIER_CN_1 AS BRIDGE_PIER_CN_1
								,T1.BRIDGE_PIER_BASE_FMT_1 AS BRIDGE_PIER_BASE_FMT_1
								,T1.BRIDGE_PIER_FMT_2 AS BRIDGE_PIER_FMT_2
								,T1.BRIDGE_PIER_CN_2 AS BRIDGE_PIER_CN_2
								,T1.BRIDGE_PIER_BASE_FMT_2 AS BRIDGE_PIER_BASE_FMT_2
								,T1.BRIDGE_PROP_FMT_1 AS BRIDGE_PROP_FMT_1
								,T1.BRIDGE_PROP_BASE_FMT_1 AS BRIDGE_PROP_BASE_FMT_1
								,T1.BRIDGE_PROP_FMT_2 AS BRIDGE_PROP_FMT_2
								,T1.BRIDGE_PROP_BASE_FMT_2 AS BRIDGE_PROP_BASE_FMT_2
								,T1.CROSS_ROUTE AS CROSS_ROUTE
								,T1.CROSS_RIVER_HIGH_DPWT AS CROSS_RIVER_HIGH_DPWT
							FROM FCLTS_MNG_REGIST_F T1
							LEFT OUTER JOIN FCLTS_MNG_GROUP_F T2 ON (T1.FCLTS_MNG_GROUP_NO = T2.FCLTS_MNG_GROUP_NO)
						WHERE 1=1

						<isNotEmpty property="sFcltsNo">
						AND T1.FCLTS_NO = #sFcltsNo#
						</isNotEmpty>

						<isNotEmpty property="sFcltsNm">
						AND T1.FCLTS_NM LIKE  '%' || #sFcltsNm# || '%'
						</isNotEmpty>

						<isNotEmpty property="sFcltsGbn">
						AND T1.FCLTS_GBN = #sFcltsGbn#
						</isNotEmpty>

						<isNotEmpty property="sStartBldDt">
						AND T1.BLD_DT <![CDATA[ >= ]]> TO_DATE(#sStartBldDt#,'YYYY-MM-DD')
						</isNotEmpty>

						<isNotEmpty property="sEndBldDt">
						AND T1.BLD_DT <![CDATA[ < ]]> TO_DATE(#sEndBldDt#,'YYYY-MM-DD') + 1
						</isNotEmpty>

						ORDER BY T1.FCLTS_NM ASC
				) S
		) T
		<![CDATA[
		WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex#
		]]>
	</select>

	<insert id="gamFcltsMngRegistMngDao.insertFcltsMngRegistMng_S" parameterClass="gamFcltsMngRegistMngVO">
		INSERT INTO FCLTS_MNG_REGIST_F
		(
			 FCLTS_NO
			,FCLTS_NM
			,ROUTE
			,FCLTS_GBN
			,FCLTS_SE
			,FCLTS_KND
			,LOC_DO
			,LOC_SI
			,LOC_DONG
			,LOC_JIBUN
			,MNG_MAINBD_SE
			,MNG_MAINBD
			,OWNER
			,BLD_DT
			,FLAW_END_DT
			,DTLS_SPEC_YN
			,QC_HIST_YN
			,MNTN_HIST_YN
			,PLAN_BEGIN_DT
			,PLAN_END_DT
			,PLANNER
			,CNST_BEGIN_DT
			,CNST_END_DT
			,CNSTRTR
			,CNSTRCT_AMT
			,ERQ_PROOF_PLAN_APPLC_ENNC
			,INSPECT_BEGIN_DT
			,INSPECT_END_DT
			,INSPECTOR
			,CNST_ORDER_BODY
			,CNST_NM
			,CNST_SUPERVISOR
			,PLAN_BOOK_MNTEN
			,WRT_DT
			,WRT_USR
			,LAST_UPDT_DT
			,LAST_UPDT_USR
			,BASIC_RM
			,MAX_SHIP_SCL
			,EXTD
			,UPSIDE_ALT
			,DPWT
			,FMT_1_DESC_1
			,FMT_1_DESC_2
			,FMT_1_DESC_3
			,FMT_1_DESC_4
			,FMT_2_DESC_1_1
			,FMT_2_DESC_1_2
			,FMT_2_DESC_1_3
			,FMT_2_DESC_2
			,FMT_2_DESC_3
			,FMT_3_DESC_1
			,FMT_3_DESC_2
			,ETC_DTLS_SPEC
			,FCLTS_MNG_GROUP_NO
			,REG_USR
			,REGIST_DT
			,BASE_FMT
			,STRCT_FMT
			,AR
			,ARCH_AR
			,PLOT_AR
			,MAIN_USAGE_PRPOS
			,PRK_AR
			,ISD_PRK_AR
			,OSD_PRK_AR
			,PRK_CNT
			,ISD_PRK_CNT
			,OSD_PRK_CNT
			,EXHAUST_DUCT_ENNC
			,VNTLTN_ARCNDT_MTHD
			,WRT_TANK_LOC
			,SBT_LOC
			,OIL_SAVEFCLTY_LOC
			,SWG_CLUPFCLTY_LOC
			,LIFT_CNT_PSNGR
			,LIFT_CNT_CARGO
			,LIFT_CNT_EMGCY
			,LIFT_OPER_MTHD
			,CLNG_ENNC
			,CLNG_SRC
			,HTNG_ENNC
			,HTNG_SRC
			,SPICTANK_FMT
			,ELCTY_LEAD_IN_CAPA
			,GROUND_FLOOR_CN
			,TOP_FLOOR_CN
			,UNDER_FLOOR_CN
			,HIGH_HT
			,HIGH_FLLOR_HT
			,HIGH_FLLOR_HT_POS
			,BASE_SIDE_DP
			,FLOOR_AR_RATE
			,CAPA_RATE
			,DT_MAX_USAGE_CN
			,DT_USAGE_CN
			,BLD_MNTN_MNG_SYS_YN
			,MNTN_MNG_ADD_FCLTY_YN
			,APPT_TP
			,BRIDGE_START_LOC
			,BRIDGE_END_LOC
			,PLAN_LIVE_WGHT
			,ALLOW_PASS_WGHT
			,EXT_LT
			,EXT_SPAN_CN
			,EXT_MAX_SPAN_LT
			,PAVE_WD
			,ROAD_WD
			,SUM_PAVE_ROAD_WD
			,UP_ROAD_CN
			,DOWN_ROAD_CN
			,SUM_UP_DOWN_ROAD_CN
			,SPAN_COMP
			,MAIN_SPAN_FMT
			,SUN_SPAN_FMT
			,PROP_SE
			,BULD_CONN_SE
			,SUB_PASS_LMT_HT
			,BRIDGE_PIER_FMT_1
			,BRIDGE_PIER_CN_1
			,BRIDGE_PIER_BASE_FMT_1
			,BRIDGE_PIER_FMT_2
			,BRIDGE_PIER_CN_2
			,BRIDGE_PIER_BASE_FMT_2
			,BRIDGE_PROP_FMT_1
			,BRIDGE_PROP_BASE_FMT_1
			,BRIDGE_PROP_FMT_2
			,BRIDGE_PROP_BASE_FMT_2
			,CROSS_ROUTE
			,CROSS_RIVER_HIGH_DPWT
		)
		VALUES
		(
			 #fcltsNo#
			,#fcltsNm#
			,#route#
			,#fcltsGbn#
			,#fcltsSe#
			,#fcltsKnd#
			,#locDo#
			,#locSi#
			,#locDong#
			,#locJibun#
			,#mngMainbdSe#
			,#mngMainbd#
			,#owner#
			,TO_DATE(#bldDt#,'YYYY-MM-DD')
			,TO_DATE(#flawEndDt#,'YYYY-MM-DD')
			,#dtlsSpecYn#
			,#qcHistYn#
			,#mntnHistYn#
			,TO_DATE(#planBeginDt#,'YYYY-MM-DD')
			,TO_DATE(#planEndDt#,'YYYY-MM-DD')
			,#planner#
			,TO_DATE(#cnstBeginDt#,'YYYY-MM-DD')
			,TO_DATE(#cnstEndDt#,'YYYY-MM-DD')
			,#cnstrtr#
			,NVL(TO_NUMBER(REPLACE(#cnstrctAmt#,',','')),0)
			,#erqProofPlanApplcEnnc#
			,TO_DATE(#inspectBeginDt#,'YYYY-MM-DD')
			,TO_DATE(#inspectEndDt#,'YYYY-MM-DD')
			,#inspector#
			,#cnstOrderBody#
			,#cnstNm#
			,#cnstSupervisor#
			,#planBookMnten#
			,TO_DATE(#wrtDt#,'YYYY-MM-DD')
			,#wrtUsr#
			,TO_DATE(#lastUpdtDt#,'YYYY-MM-DD')
			,#lastUpdtUsr#
			,#basicRm#
			,#maxShipScl#
			,#extd#
			,#upsideAlt#
			,#dpwt#
			,#fmt1Desc1#
			,#fmt1Desc2#
			,#fmt1Desc3#
			,#fmt1Desc4#
			,#fmt2Desc11#
			,#fmt2Desc12#
			,#fmt2Desc13#
			,#fmt2Desc2#
			,#fmt2Desc3#
			,#fmt3Desc1#
			,#fmt3Desc2#
			,#etcDtlsSpec#
			,#fcltsMngGroupNo#
			,#regUsr#
			,SYSDATE
			,#baseFmt#
			,#strctFmt#
			,#ar#
			,#archAr#
			,#plotAr#
			,#mainUsagePrpos#
			,#prkAr#
			,#isdPrkAr#
			,#osdPrkAr#
			,#prkCnt#
			,#isdPrkCnt#
			,#osdPrkCnt#
			,#exhaustDuctEnnc#
			,#vntltnArcndtMthd#
			,#wrtTankLoc#
			,#sbtLoc#
			,#oilSavefcltyLoc#
			,#swgClupfcltyLoc#
			,#liftCntPsngr#
			,#liftCntCargo#
			,#liftCntEmgcy#
			,#liftOperMthd#
			,#clngEnnc#
			,#clngSrc#
			,#htngEnnc#
			,#htngSrc#
			,#spictankFmt#
			,#elctyLeadInCapa#
			,#groundFloorCn#
			,#topFloorCn#
			,#underFloorCn#
			,#highHt#
			,#highFllorHt#
			,#highFllorHtPos#
			,#baseSideDp#
			,#floorArRate#
			,#capaRate#
			,#dtMaxUsageCn#
			,#dtUsageCn#
			,#bldMntnMngSysYn#
			,#mntnMngAddFcltyYn#
			,#apptTp#
			,#bridgeStartLoc#
			,#bridgeEndLoc#
			,#planLiveWght#
			,#allowPassWght#
			,#extLt#
			,#extSpanCn#
			,#extMaxSpanLt#
			,#paveWd#
			,#roadWd#
			,#sumPaveRoadWd#
			,#upRoadCn#
			,#downRoadCn#
			,#sumUpDownRoadCn#
			,#spanComp#
			,#mainSpanFmt#
			,#sunSpanFmt#
			,#propSe#
			,#buldConnSe#
			,#subPassLmtHt#
			,#bridgePierFmt1#
			,#bridgePierCn1#
			,#bridgePierBaseFmt1#
			,#bridgePierFmt2#
			,#bridgePierCn2#
			,#bridgePierBaseFmt2#
			,#bridgePropFmt1#
			,#bridgePropBaseFmt1#
			,#bridgePropFmt2#
			,#bridgePropBaseFmt2#
			,#crossRoute#
			,#crossRiverHighDpwt#
		)
	</insert>

	<update id="gamFcltsMngRegistMngDao.updateFcltsMngRegistMng_S" parameterClass="gamFcltsMngRegistMngVO">
		UPDATE FCLTS_MNG_REGIST_F SET
			 FCLTS_NM = #fcltsNm#
			,ROUTE = #route#
			,FCLTS_GBN = #fcltsGbn#
			,FCLTS_SE = #fcltsSe#
			,FCLTS_KND = #fcltsKnd#
			,LOC_DO = #locDo#
			,LOC_SI = #locSi#
			,LOC_DONG = #locDong#
			,LOC_JIBUN = #locJibun#
			,MNG_MAINBD_SE = #mngMainbdSe#
			,MNG_MAINBD = #mngMainbd#
			,OWNER = #owner#
			,BLD_DT = TO_DATE(#bldDt#,'YYYY-MM-DD')
			,FLAW_END_DT = TO_DATE(#flawEndDt#,'YYYY-MM-DD')
			,DTLS_SPEC_YN = #dtlsSpecYn#
			,QC_HIST_YN = #qcHistYn#
			,MNTN_HIST_YN = #mntnHistYn#
			,PLAN_BEGIN_DT = TO_DATE(#planBeginDt#,'YYYY-MM-DD')
			,PLAN_END_DT = TO_DATE(#planEndDt#,'YYYY-MM-DD')
			,PLANNER = #planner#
			,CNST_BEGIN_DT = TO_DATE(#cnstBeginDt#,'YYYY-MM-DD')
			,CNST_END_DT = TO_DATE(#cnstEndDt#,'YYYY-MM-DD')
			,CNSTRTR = #cnstrtr#
			,CNSTRCT_AMT = NVL(TO_NUMBER(REPLACE(#cnstrctAmt#,',','')),0)
			,ERQ_PROOF_PLAN_APPLC_ENNC = #erqProofPlanApplcEnnc#
			,INSPECT_BEGIN_DT = TO_DATE(#inspectBeginDt#,'YYYY-MM-DD')
			,INSPECT_END_DT = TO_DATE(#inspectEndDt#,'YYYY-MM-DD')
			,INSPECTOR = #inspector#
			,CNST_ORDER_BODY = #cnstOrderBody#
			,CNST_NM = #cnstNm#
			,CNST_SUPERVISOR = #cnstSupervisor#
			,PLAN_BOOK_MNTEN = #planBookMnten#
			,WRT_DT = TO_DATE(#wrtDt#,'YYYY-MM-DD')
			,WRT_USR = #wrtUsr#
			,LAST_UPDT_DT = TO_DATE(#lastUpdtDt#,'YYYY-MM-DD')
			,LAST_UPDT_USR = #lastUpdtUsr#
			,BASIC_RM = #basicRm#
			,MAX_SHIP_SCL = #maxShipScl#
			,EXTD = #extd#
			,UPSIDE_ALT = #upsideAlt#
			,DPWT = #dpwt#
			,FMT_1_DESC_1 = #fmt1Desc1#
			,FMT_1_DESC_2 = #fmt1Desc2#
			,FMT_1_DESC_3 = #fmt1Desc3#
			,FMT_1_DESC_4 = #fmt1Desc4#
			,FMT_2_DESC_1_1 = #fmt2Desc11#
			,FMT_2_DESC_1_2 = #fmt2Desc12#
			,FMT_2_DESC_1_3 = #fmt2Desc13#
			,FMT_2_DESC_2 = #fmt2Desc2#
			,FMT_2_DESC_3 = #fmt2Desc3#
			,FMT_3_DESC_1 = #fmt3Desc1#
			,FMT_3_DESC_2 = #fmt3Desc2#
			,ETC_DTLS_SPEC = #etcDtlsSpec#
			,FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#
			,UPD_USR = #updUsr#
			,UPDT_DT = SYSDATE
			,BASE_FMT = #baseFmt#
			,STRCT_FMT = #strctFmt#
			,AR = #ar#
			,ARCH_AR = #archAr#
			,PLOT_AR = #plotAr#
			,MAIN_USAGE_PRPOS = #mainUsagePrpos#
			,PRK_AR = #prkAr#
			,ISD_PRK_AR = #isdPrkAr#
			,OSD_PRK_AR = #osdPrkAr#
			,PRK_CNT = #prkCnt#
			,ISD_PRK_CNT = #isdPrkCnt#
			,OSD_PRK_CNT = #osdPrkCnt#
			,EXHAUST_DUCT_ENNC = #exhaustDuctEnnc#
			,VNTLTN_ARCNDT_MTHD = #vntltnArcndtMthd#
			,WRT_TANK_LOC = #wrtTankLoc#
			,SBT_LOC = #sbtLoc#
			,OIL_SAVEFCLTY_LOC = #oilSavefcltyLoc#
			,SWG_CLUPFCLTY_LOC = #swgClupfcltyLoc#
			,LIFT_CNT_PSNGR = #liftCntPsngr#
			,LIFT_CNT_CARGO = #liftCntCargo#
			,LIFT_CNT_EMGCY = #liftCntEmgcy#
			,LIFT_OPER_MTHD = #liftOperMthd#
			,CLNG_ENNC = #clngEnnc#
			,CLNG_SRC = #clngSrc#
			,HTNG_ENNC = #htngEnnc#
			,HTNG_SRC = #htngSrc#
			,SPICTANK_FMT = #spictankFmt#
			,ELCTY_LEAD_IN_CAPA = #elctyLeadInCapa#
			,GROUND_FLOOR_CN = #groundFloorCn#
			,TOP_FLOOR_CN = #topFloorCn#
			,UNDER_FLOOR_CN = #underFloorCn#
			,HIGH_HT = #highHt#
			,HIGH_FLLOR_HT = #highFllorHt#
			,HIGH_FLLOR_HT_POS = #highFllorHtPos#
			,BASE_SIDE_DP = #baseSideDp#
			,FLOOR_AR_RATE = #floorArRate#
			,CAPA_RATE = #capaRate#
			,DT_MAX_USAGE_CN = #dtMaxUsageCn#
			,DT_USAGE_CN = #dtUsageCn#
			,BLD_MNTN_MNG_SYS_YN = #bldMntnMngSysYn#
			,MNTN_MNG_ADD_FCLTY_YN = #mntnMngAddFcltyYn#
			,APPT_TP = #apptTp#
			,BRIDGE_START_LOC = #bridgeStartLoc#
			,BRIDGE_END_LOC = #bridgeEndLoc#
			,PLAN_LIVE_WGHT = #planLiveWght#
			,ALLOW_PASS_WGHT = #allowPassWght#
			,EXT_LT = #extLt#
			,EXT_SPAN_CN = #extSpanCn#
			,EXT_MAX_SPAN_LT = #extMaxSpanLt#
			,PAVE_WD = #paveWd#
			,ROAD_WD = #roadWd#
			,SUM_PAVE_ROAD_WD = #sumPaveRoadWd#
			,UP_ROAD_CN = #upRoadCn#
			,DOWN_ROAD_CN = #downRoadCn#
			,SUM_UP_DOWN_ROAD_CN = #sumUpDownRoadCn#
			,SPAN_COMP = #spanComp#
			,MAIN_SPAN_FMT = #mainSpanFmt#
			,SUN_SPAN_FMT = #sunSpanFmt#
			,PROP_SE = #propSe#
			,BULD_CONN_SE = #buldConnSe#
			,SUB_PASS_LMT_HT = #subPassLmtHt#
			,BRIDGE_PIER_FMT_1 = #bridgePierFmt1#
			,BRIDGE_PIER_CN_1 = #bridgePierCn1#
			,BRIDGE_PIER_BASE_FMT_1 = #bridgePierBaseFmt1#
			,BRIDGE_PIER_FMT_2 = #bridgePierFmt2#
			,BRIDGE_PIER_CN_2 = #bridgePierCn2#
			,BRIDGE_PIER_BASE_FMT_2 = #bridgePierBaseFmt2#
			,BRIDGE_PROP_FMT_1 = #bridgePropFmt1#
			,BRIDGE_PROP_BASE_FMT_1 = #bridgePropBaseFmt1#
			,BRIDGE_PROP_FMT_2 = #bridgePropFmt2#
			,BRIDGE_PROP_BASE_FMT_2 = #bridgePropBaseFmt2#
			,CROSS_ROUTE = #crossRoute#
			,CROSS_RIVER_HIGH_DPWT = #crossRiverHighDpwt#
		WHERE FCLTS_NO = #fcltsNo#
	</update>

	<delete id="gamFcltsMngRegistMngDao.deleteFcltsMngRegistMng_S" parameterClass="gamFcltsMngRegistMngVO">
		DELETE FROM FCLTS_MNG_REGIST_F
		WHERE FCLTS_NO = #fcltsNo#
	</delete>

	<select id="gamFcltsMngRegistMngDao.selectFcltsMngRegistMngPk_S" parameterClass="gamFcltsMngRegistMngVO" resultClass="egovMap">
		SELECT
				 T1.FCLTS_NO AS FCLTS_NO
				,T1.FCLTS_NM AS FCLTS_NM
				,T1.ROUTE AS ROUTE
				,T1.FCLTS_GBN AS FCLTS_GBN
				,T1.FCLTS_SE AS FCLTS_SE
				,T1.FCLTS_KND AS FCLTS_KND
				,T1.LOC_DO AS LOC_DO
				,T1.LOC_SI AS LOC_SI
				,T1.LOC_DONG AS LOC_DONG
				,T1.LOC_JIBUN AS LOC_JIBUN
				,T1.MNG_MAINBD_SE AS MNG_MAINBD_SE
				,T1.MNG_MAINBD AS MNG_MAINBD
				,T1.OWNER AS OWNER
				,TO_CHAR(T1.BLD_DT,'YYYY-MM-DD') AS BLD_DT
				,TO_CHAR(T1.FLAW_END_DT,'YYYY-MM-DD') AS FLAW_END_DT
				,T1.DTLS_SPEC_YN AS DTLS_SPEC_YN
				,T1.QC_HIST_YN AS QC_HIST_YN
				,T1.MNTN_HIST_YN AS MNTN_HIST_YN
				,TO_CHAR(T1.PLAN_BEGIN_DT,'YYYY-MM-DD') AS PLAN_BEGIN_DT
				,TO_CHAR(T1.PLAN_END_DT,'YYYY-MM-DD') AS PLAN_END_DT
				,T1.PLANNER AS PLANNER
				,TO_CHAR(T1.CNST_BEGIN_DT,'YYYY-MM-DD') AS CNST_BEGIN_DT
				,TO_CHAR(T1.CNST_END_DT,'YYYY-MM-DD') AS CNST_END_DT
				,T1.CNSTRTR AS CNSTRTR
				,LTRIM(TO_CHAR(NVL(T1.CNSTRCT_AMT,0),'9,999,999,999,999,990')) AS CNSTRCT_AMT
				,T1.ERQ_PROOF_PLAN_APPLC_ENNC AS ERQ_PROOF_PLAN_APPLC_ENNC
				,TO_CHAR(T1.INSPECT_BEGIN_DT,'YYYY-MM-DD') AS INSPECT_BEGIN_DT
				,TO_CHAR(T1.INSPECT_END_DT,'YYYY-MM-DD') AS INSPECT_END_DT
				,T1.INSPECTOR AS INSPECTOR
				,T1.CNST_ORDER_BODY AS CNST_ORDER_BODY
				,T1.CNST_NM AS CNST_NM
				,T1.CNST_SUPERVISOR AS CNST_SUPERVISOR
				,T1.PLAN_BOOK_MNTEN AS PLAN_BOOK_MNTEN
				,TO_CHAR(T1.WRT_DT,'YYYY-MM-DD') AS WRT_DT
				,T1.WRT_USR AS WRT_USR
				,TO_CHAR(T1.LAST_UPDT_DT,'YYYY-MM-DD') AS LAST_UPDT_DT
				,T1.LAST_UPDT_USR AS LAST_UPDT_USR
				,T1.BASIC_RM AS BASIC_RM
				,T1.MAX_SHIP_SCL AS MAX_SHIP_SCL
				,T1.EXTD AS EXTD
				,T1.UPSIDE_ALT AS UPSIDE_ALT
				,T1.DPWT AS DPWT
				,T1.FMT_1_DESC_1 AS FMT_1_DESC_1
				,T1.FMT_1_DESC_2 AS FMT_1_DESC_2
				,T1.FMT_1_DESC_3 AS FMT_1_DESC_3
				,T1.FMT_1_DESC_4 AS FMT_1_DESC_4
				,T1.FMT_2_DESC_1_1 AS FMT_2_DESC_1_1
				,T1.FMT_2_DESC_1_2 AS FMT_2_DESC_1_2
				,T1.FMT_2_DESC_1_3 AS FMT_2_DESC_1_3
				,T1.FMT_2_DESC_2 AS FMT_2_DESC_2
				,T1.FMT_2_DESC_3 AS FMT_2_DESC_3
				,T1.FMT_3_DESC_1 AS FMT_3_DESC_1
				,T1.FMT_3_DESC_2 AS FMT_3_DESC_2
				,T1.ETC_DTLS_SPEC AS ETC_DTLS_SPEC
				,T1.FCLTS_MNG_GROUP_NO AS FCLTS_MNG_GROUP_NO
				,T1.REG_USR AS REG_USR
				,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
				,T1.UPD_USR AS UPD_USR
				,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
				,REPLACE(NVL(T1.LOC_DO,' ') || ' ' || NVL(T1.LOC_SI,' ') || ' ' || NVL(T1.LOC_DONG,' ') || NVL(T1.LOC_JIBUN,' '),'  ',' ') AS LOC
				,GAM_GET_FCLTS_GBN_NM(T1.FCLTS_GBN) AS FCLTS_GBN_NM
				,GAM_GET_FCLTS_SE_NM(T1.FCLTS_SE) AS FCLTS_SE_NM
				,GAM_GET_FCLTS_KND_NM(T1.FCLTS_KND) AS FCLTS_KND_NM
				,T2.FCLTS_MNG_GROUP_NM AS FCLTS_MNG_GROUP_NM
				,T1.BASE_FMT AS BASE_FMT
				,T1.STRCT_FMT AS STRCT_FMT
				,T1.AR AS AR
				,T1.ARCH_AR AS ARCH_AR
				,T1.PLOT_AR AS PLOT_AR
				,T1.MAIN_USAGE_PRPOS AS MAIN_USAGE_PRPOS
				,T1.PRK_AR AS PRK_AR
				,T1.ISD_PRK_AR AS ISD_PRK_AR
				,T1.OSD_PRK_AR AS OSD_PRK_AR
				,T1.PRK_CNT AS PRK_CNT
				,T1.ISD_PRK_CNT AS ISD_PRK_CNT
				,T1.OSD_PRK_CNT AS OSD_PRK_CNT
				,T1.EXHAUST_DUCT_ENNC AS EXHAUST_DUCT_ENNC
				,T1.VNTLTN_ARCNDT_MTHD AS VNTLTN_ARCNDT_MTHD
				,T1.WRT_TANK_LOC AS WRT_TANK_LOC
				,T1.SBT_LOC AS SBT_LOC
				,T1.OIL_SAVEFCLTY_LOC AS OIL_SAVEFCLTY_LOC
				,T1.SWG_CLUPFCLTY_LOC AS SWG_CLUPFCLTY_LOC
				,T1.LIFT_CNT_PSNGR AS LIFT_CNT_PSNGR
				,T1.LIFT_CNT_CARGO AS LIFT_CNT_CARGO
				,T1.LIFT_CNT_EMGCY AS LIFT_CNT_EMGCY
				,T1.LIFT_OPER_MTHD AS LIFT_OPER_MTHD
				,T1.CLNG_ENNC AS CLNG_ENNC
				,T1.CLNG_SRC AS CLNG_SRC
				,T1.HTNG_ENNC AS HTNG_ENNC
				,T1.HTNG_SRC AS HTNG_SRC
				,T1.SPICTANK_FMT AS SPICTANK_FMT
				,T1.ELCTY_LEAD_IN_CAPA AS ELCTY_LEAD_IN_CAPA
				,T1.GROUND_FLOOR_CN AS GROUND_FLOOR_CN
				,T1.TOP_FLOOR_CN AS TOP_FLOOR_CN
				,T1.UNDER_FLOOR_CN AS UNDER_FLOOR_CN
				,T1.HIGH_HT AS HIGH_HT
				,T1.HIGH_FLLOR_HT AS HIGH_FLLOR_HT
				,T1.HIGH_FLLOR_HT_POS AS HIGH_FLLOR_HT_POS
				,T1.BASE_SIDE_DP AS BASE_SIDE_DP
				,T1.FLOOR_AR_RATE AS FLOOR_AR_RATE
				,T1.CAPA_RATE AS CAPA_RATE
				,T1.DT_MAX_USAGE_CN AS DT_MAX_USAGE_CN
				,T1.DT_USAGE_CN AS DT_USAGE_CN
				,T1.BLD_MNTN_MNG_SYS_YN AS BLD_MNTN_MNG_SYS_YN
				,T1.MNTN_MNG_ADD_FCLTY_YN AS MNTN_MNG_ADD_FCLTY_YN
				,T1.APPT_TP AS APPT_TP
				,T1.BRIDGE_START_LOC AS BRIDGE_START_LOC
				,T1.BRIDGE_END_LOC AS BRIDGE_END_LOC
				,T1.PLAN_LIVE_WGHT AS PLAN_LIVE_WGHT
				,T1.ALLOW_PASS_WGHT AS ALLOW_PASS_WGHT
				,T1.EXT_LT AS EXT_LT
				,T1.EXT_SPAN_CN AS EXT_SPAN_CN
				,T1.EXT_MAX_SPAN_LT AS EXT_MAX_SPAN_LT
				,T1.PAVE_WD AS PAVE_WD
				,T1.ROAD_WD AS ROAD_WD
				,T1.SUM_PAVE_ROAD_WD AS SUM_PAVE_ROAD_WD
				,T1.UP_ROAD_CN AS UP_ROAD_CN
				,T1.DOWN_ROAD_CN AS DOWN_ROAD_CN
				,T1.SUM_UP_DOWN_ROAD_CN AS SUM_UP_DOWN_ROAD_CN
				,T1.SPAN_COMP AS SPAN_COMP
				,T1.MAIN_SPAN_FMT AS MAIN_SPAN_FMT
				,T1.SUN_SPAN_FMT AS SUN_SPAN_FMT
				,T1.PROP_SE AS PROP_SE
				,T1.BULD_CONN_SE AS BULD_CONN_SE
				,T1.SUB_PASS_LMT_HT AS SUB_PASS_LMT_HT
				,T1.BRIDGE_PIER_FMT_1 AS BRIDGE_PIER_FMT_1
				,T1.BRIDGE_PIER_CN_1 AS BRIDGE_PIER_CN_1
				,T1.BRIDGE_PIER_BASE_FMT_1 AS BRIDGE_PIER_BASE_FMT_1
				,T1.BRIDGE_PIER_FMT_2 AS BRIDGE_PIER_FMT_2
				,T1.BRIDGE_PIER_CN_2 AS BRIDGE_PIER_CN_2
				,T1.BRIDGE_PIER_BASE_FMT_2 AS BRIDGE_PIER_BASE_FMT_2
				,T1.BRIDGE_PROP_FMT_1 AS BRIDGE_PROP_FMT_1
				,T1.BRIDGE_PROP_BASE_FMT_1 AS BRIDGE_PROP_BASE_FMT_1
				,T1.BRIDGE_PROP_FMT_2 AS BRIDGE_PROP_FMT_2
				,T1.BRIDGE_PROP_BASE_FMT_2 AS BRIDGE_PROP_BASE_FMT_2
				,T1.CROSS_ROUTE AS CROSS_ROUTE
				,T1.CROSS_RIVER_HIGH_DPWT AS CROSS_RIVER_HIGH_DPWT
			FROM FCLTS_MNG_REGIST_F T1
			LEFT OUTER JOIN FCLTS_MNG_GROUP_F T2 ON (T1.FCLTS_MNG_GROUP_NO = T2.FCLTS_MNG_GROUP_NO)
		WHERE T1.FCLTS_NO = #fcltsNo#
	</select>

	<select id="gamFcltsMngRegistMngDao.selectFcltsMngRegistMngListSum_S" parameterClass="gamFcltsMngRegistMngVO" resultMap="gamFcltsMngRegistMngSumMap">
		SELECT
				 TO_CHAR(NVL(COUNT(*),0),'999,999,999,999,999') AS TOTAL_COUNT
				,TO_CHAR(NVL(SUM(T1.CNSTRCT_AMT),0),'999,999,999,999,999') AS SUM_CNSTRCT_AMT
			FROM FCLTS_MNG_REGIST_F T1
		WHERE 1=1

		<isNotEmpty property="sFcltsNo">
		AND T1.FCLTS_NO = #sFcltsNo#
		</isNotEmpty>

		<isNotEmpty property="sFcltsNm">
		AND T1.FCLTS_NM LIKE  '%' || #sFcltsNm# || '%'
		</isNotEmpty>

		<isNotEmpty property="sFcltsGbn">
		AND T1.FCLTS_GBN = #sFcltsGbn#
		</isNotEmpty>

		<isNotEmpty property="sStartBldDt">
		AND T1.BLD_DT <![CDATA[ >= ]]> TO_DATE(#sStartBldDt#,'YYYY-MM-DD')
		</isNotEmpty>

		<isNotEmpty property="sEndBldDt">
		AND T1.BLD_DT <![CDATA[ < ]]> TO_DATE(#sEndBldDt#,'YYYY-MM-DD') + 1
		</isNotEmpty>

	</select>

	<select id="gamFcltsMngRegistMngDao.selectFcltsMngGroupNm_S" parameterClass="hashmap" resultClass="java.lang.String">
		SELECT FCLTS_MNG_GROUP_NM
			FROM FCLTS_MNG_GROUP_F
		WHERE FCLTS_MNG_GROUP_NO = #sFcltsMngGroupNo#
	</select>

	<select id="gamFcltsMngRegistMngDao.selectFcltsMngRegistMngQcMngDtlsPlanList_D" parameterClass="GamFcltsMngRegistMngQcMngDtlsVO" resultClass="egovMap">
		SELECT T.*
			FROM (
				SELECT  ROWNUM RNUM, S.*
					FROM (
						SELECT
								 T1.FCLTS_JOB_SE AS FCLTS_JOB_SE
								,LTRIM(TO_CHAR(NVL(T1.QC_MNG_SEQ,0),'00000')) AS QC_MNG_SEQ
								,T1.ENFORCE_YEAR AS ENFORCE_YEAR
								,T1.QC_MNG_NM AS QC_MNG_NM
								,T1.QC_SE AS QC_SE
								,T1.QC_INSP_TP AS QC_INSP_TP
								,T1.QC_INSP_SE AS QC_INSP_SE
								,TO_CHAR(T1.QC_INSP_DT,'YYYY-MM-DD') AS QC_INSP_DT
								,T1.QC_INSP_INSTT_NM AS QC_INSP_INSTT_NM
								,T1.RESPON_ENGINEER_NM AS RESPON_ENGINEER_NM
								,TO_CHAR(T1.QC_BEGIN_DT,'YYYY-MM-DD') AS QC_BEGIN_DT
								,TO_CHAR(T1.QC_END_DT,'YYYY-MM-DD') AS QC_END_DT
								,LTRIM(TO_CHAR(NVL(T1.QC_INSP_AMT,0),'9,999,999,999,999,990')) AS QC_INSP_AMT
								,T1.STTUS_EVL_LVL AS STTUS_EVL_LVL
								,T1.ACTION_CN AS ACTION_CN
								,T1.RM AS RM
								,T1.REG_USR AS REG_USR
								,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
								,T1.UPD_USR AS UPD_USR
								,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
								,T1.QC_INSP_RESULT AS QC_INSP_RESULT
								,T1.CTRT_NO AS CTRT_NO
								,LTRIM(TO_CHAR(NVL(T1.QC_INSP_BDGT,0),'9,999,999,999,999,990')) AS QC_INSP_BDGT
								,TO_CHAR(T1.WRT_DT,'YYYY-MM-DD') AS WRT_DT
								,T1.WRT_USR AS WRT_USR
								,GAM_GET_QC_SE_NM(T1.QC_SE) AS QC_SE_NM
								,GAM_GET_QC_INSP_TP_NM(T1.QC_INSP_TP) AS QC_INSP_TP_NM
								,GAM_GET_QC_INSP_SE_NM(T1.QC_INSP_SE) AS QC_INSP_SE_NM
								,GAM_GET_STTUS_EVL_LVL_NM(T1.STTUS_EVL_LVL) AS STTUS_EVL_LVL_NM
								,TO_CHAR(T1.QC_BEGIN_DT,'YYYY-MM-DD') || ' ~ ' || TO_CHAR(T1.QC_END_DT,'YYYY-MM-DD') AS QC_INSP_DT_FROM_TO
							FROM QC_MNG_DTLS_F T1
						WHERE T1.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#

						<isNotEmpty property="fcltsJobSe">
						AND T1.FCLTS_JOB_SE = #fcltsJobSe#
						</isNotEmpty>

						AND T1.PLAN_HIST_SE = 'P'
						ORDER BY T1.QC_INSP_DT ASC
				) S
		) T
		<![CDATA[
		WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex#
		]]>
	</select>

	<select id="gamFcltsMngRegistMngDao.selectFcltsMngRegistMngQcMngDtlsHistList_D" parameterClass="GamFcltsMngRegistMngQcMngDtlsVO" resultClass="egovMap">
		SELECT T.*
			FROM (
				SELECT  ROWNUM RNUM, S.*
					FROM (
						SELECT
								 T1.FCLTS_JOB_SE AS FCLTS_JOB_SE
								,LTRIM(TO_CHAR(NVL(T1.QC_MNG_SEQ,0),'00000')) AS QC_MNG_SEQ
								,T1.ENFORCE_YEAR AS ENFORCE_YEAR
								,T1.QC_MNG_NM AS QC_MNG_NM
								,T1.QC_SE AS QC_SE
								,T1.QC_INSP_TP AS QC_INSP_TP
								,T1.QC_INSP_SE AS QC_INSP_SE
								,TO_CHAR(T1.QC_INSP_DT,'YYYY-MM-DD') AS QC_INSP_DT
								,T1.QC_INSP_INSTT_NM AS QC_INSP_INSTT_NM
								,T1.RESPON_ENGINEER_NM AS RESPON_ENGINEER_NM
								,TO_CHAR(T1.QC_BEGIN_DT,'YYYY-MM-DD') AS QC_BEGIN_DT
								,TO_CHAR(T1.QC_END_DT,'YYYY-MM-DD') AS QC_END_DT
								,LTRIM(TO_CHAR(NVL(T1.QC_INSP_AMT,0),'9,999,999,999,999,990')) AS QC_INSP_AMT
								,T1.STTUS_EVL_LVL AS STTUS_EVL_LVL
								,T1.ACTION_CN AS ACTION_CN
								,T1.RM AS RM
								,T1.REG_USR AS REG_USR
								,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
								,T1.UPD_USR AS UPD_USR
								,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
								,T1.QC_INSP_RESULT AS QC_INSP_RESULT
								,T1.CTRT_NO AS CTRT_NO
								,LTRIM(TO_CHAR(NVL(T1.QC_INSP_BDGT,0),'9,999,999,999,999,990')) AS QC_INSP_BDGT
								,TO_CHAR(T1.WRT_DT,'YYYY-MM-DD') AS WRT_DT
								,T1.WRT_USR AS WRT_USR
								,GAM_GET_QC_SE_NM(T1.QC_SE) AS QC_SE_NM
								,GAM_GET_QC_INSP_TP_NM(T1.QC_INSP_TP) AS QC_INSP_TP_NM
								,GAM_GET_QC_INSP_SE_NM(T1.QC_INSP_SE) AS QC_INSP_SE_NM
								,GAM_GET_STTUS_EVL_LVL_NM(T1.STTUS_EVL_LVL) AS STTUS_EVL_LVL_NM
								,TO_CHAR(T1.QC_BEGIN_DT,'YYYY-MM-DD') || ' ~ ' || TO_CHAR(T1.QC_END_DT,'YYYY-MM-DD') AS QC_INSP_DT_FROM_TO
							FROM QC_MNG_DTLS_F T1
						WHERE T1.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#

						<isNotEmpty property="fcltsJobSe">
						AND T1.FCLTS_JOB_SE = #fcltsJobSe#
						</isNotEmpty>

						AND T1.PLAN_HIST_SE = 'H'
						ORDER BY T1.QC_INSP_DT ASC
				) S
		) T
		<![CDATA[
		WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex#
		]]>
	</select>

	<select id="gamFcltsMngRegistMngDao.selectFcltsMngRegistMngMntnRprDtlsPlanList_D" parameterClass="GamFcltsMngRegistMngMntnRprDtlsVO" resultClass="egovMap">
		SELECT T.*
			FROM (
				SELECT  ROWNUM RNUM, S.*
					FROM (
						SELECT
								 T1.MNTN_RPR_CNST_NM AS MNTN_RPR_CNST_NM
								,T1.PLANNER_NM AS PLANNER_NM
								,T1.CNST_CHARG_NM AS CNST_CHARG_NM
								,TO_CHAR(T1.MNTN_RPR_CNST_START_DT,'YYYY-MM-DD') AS MNTN_RPR_CNST_START_DT
								,TO_CHAR(T1.MNTN_RPR_CNST_END_DT,'YYYY-MM-DD') AS MNTN_RPR_CNST_END_DT
								,LTRIM(TO_CHAR(NVL(T1.MNTN_RPR_CNST_AMT,0),'9,999,999,999,999,990')) AS MNTN_RPR_CNST_AMT
								,T1.RM AS RM
								,T1.REG_USR AS REG_USR
								,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
								,T1.UPD_USR AS UPD_USR
								,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
								,T1.CTRT_NO AS CTRT_NO
								,T1.FCLTS_JOB_SE AS FCLTS_JOB_SE
								,LTRIM(TO_CHAR(NVL(T1.MNTN_RPR_SEQ,0),'00000')) AS MNTN_RPR_SEQ
								,T1.MNTN_RPR_SE AS MNTN_RPR_SE
								,T1.MNTN_RPR_PART AS MNTN_RPR_PART
								,T1.MNTN_RPR_CN AS MNTN_RPR_CN
								,LTRIM(TO_CHAR(NVL(T1.MNTN_RPR_BDGT,0),'9,999,999,999,999,990')) AS MNTN_RPR_BDGT
								,T1.CNSTRTR AS CNSTRTR
								,T1.RESPON_ENGINEER AS RESPON_ENGINEER
								,T1.ENFORCE_YEAR AS ENFORCE_YEAR
								,T1.MNTN_SUB_RPR_SE AS MNTN_SUB_RPR_SE
								,TO_CHAR(T1.WRT_DT,'YYYY-MM-DD') AS WRT_DT
								,T1.WRT_USR AS WRT_USR
								,GAM_GET_MNTN_RPR_SE_NM(T1.MNTN_RPR_SE) AS MNTN_RPR_SE_NM
								,TO_CHAR(T1.MNTN_RPR_CNST_START_DT,'YYYY-MM-DD') || ' ~ ' || TO_CHAR(T1.MNTN_RPR_CNST_END_DT,'YYYY-MM-DD') AS MNTN_RPR_CNST_DT_FROM_TO
							FROM MNTN_RPR_DTLS_F T1
						WHERE T1.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#

						<isNotEmpty property="fcltsJobSe">
						AND T1.FCLTS_JOB_SE = #fcltsJobSe#
						</isNotEmpty>

						AND T1.PLAN_HIST_SE = 'P'
						ORDER BY T1.MNTN_RPR_CNST_START_DT ASC
				) S
		) T
		<![CDATA[
		WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex#
		]]>
	</select>

	<select id="gamFcltsMngRegistMngDao.selectFcltsMngRegistMngMntnRprDtlsHistList_D" parameterClass="GamFcltsMngRegistMngMntnRprDtlsVO" resultClass="egovMap">
		SELECT T.*
			FROM (
				SELECT  ROWNUM RNUM, S.*
					FROM (
						SELECT
								 T1.MNTN_RPR_CNST_NM AS MNTN_RPR_CNST_NM
								,T1.PLANNER_NM AS PLANNER_NM
								,T1.CNST_CHARG_NM AS CNST_CHARG_NM
								,TO_CHAR(T1.MNTN_RPR_CNST_START_DT,'YYYY-MM-DD') AS MNTN_RPR_CNST_START_DT
								,TO_CHAR(T1.MNTN_RPR_CNST_END_DT,'YYYY-MM-DD') AS MNTN_RPR_CNST_END_DT
								,LTRIM(TO_CHAR(NVL(T1.MNTN_RPR_CNST_AMT,0),'9,999,999,999,999,990')) AS MNTN_RPR_CNST_AMT
								,T1.RM AS RM
								,T1.REG_USR AS REG_USR
								,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
								,T1.UPD_USR AS UPD_USR
								,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
								,T1.CTRT_NO AS CTRT_NO
								,T1.FCLTS_JOB_SE AS FCLTS_JOB_SE
								,LTRIM(TO_CHAR(NVL(T1.MNTN_RPR_SEQ,0),'00000')) AS MNTN_RPR_SEQ
								,T1.MNTN_RPR_SE AS MNTN_RPR_SE
								,T1.MNTN_RPR_PART AS MNTN_RPR_PART
								,T1.MNTN_RPR_CN AS MNTN_RPR_CN
								,LTRIM(TO_CHAR(NVL(T1.MNTN_RPR_BDGT,0),'9,999,999,999,999,990')) AS MNTN_RPR_BDGT
								,T1.CNSTRTR AS CNSTRTR
								,T1.RESPON_ENGINEER AS RESPON_ENGINEER
								,T1.ENFORCE_YEAR AS ENFORCE_YEAR
								,T1.MNTN_SUB_RPR_SE AS MNTN_SUB_RPR_SE
								,TO_CHAR(T1.WRT_DT,'YYYY-MM-DD') AS WRT_DT
								,T1.WRT_USR AS WRT_USR
								,GAM_GET_MNTN_RPR_SE_NM(T1.MNTN_RPR_SE) AS MNTN_RPR_SE_NM
								,TO_CHAR(T1.MNTN_RPR_CNST_START_DT,'YYYY-MM-DD') || ' ~ ' || TO_CHAR(T1.MNTN_RPR_CNST_END_DT,'YYYY-MM-DD') AS MNTN_RPR_CNST_DT_FROM_TO
							FROM MNTN_RPR_DTLS_F T1
						WHERE T1.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#

						<isNotEmpty property="fcltsJobSe">
						AND T1.FCLTS_JOB_SE = #fcltsJobSe#
						</isNotEmpty>

						AND T1.PLAN_HIST_SE = 'H'
						ORDER BY T1.MNTN_RPR_CNST_START_DT ASC
				) S
		) T
		<![CDATA[
		WHERE ROWNUM <= #recordCountPerPage# and RNUM > #firstIndex#
		]]>
	</select>

	<select id="gamFcltsMngRegistMngDao.selectFcltsMngRegistMngPkHwp_S" parameterClass="gamFcltsMngRegistMngVO" resultClass="egovMap">
		SELECT
				 T1.FCLTS_NO AS FCLTS_NO
				,T1.FCLTS_NM AS FCLTS_NM
				,T1.ROUTE AS ROUTE
				,T1.FCLTS_GBN AS FCLTS_GBN
				,T1.FCLTS_SE AS FCLTS_SE
				,T1.FCLTS_KND AS FCLTS_KND
				,T1.LOC_DO AS LOC_DO
				,T1.LOC_SI AS LOC_SI
				,T1.LOC_DONG AS LOC_DONG
				,T1.LOC_JIBUN AS LOC_JIBUN
				,T1.MNG_MAINBD_SE AS MNG_MAINBD_SE
				,T1.MNG_MAINBD AS MNG_MAINBD
				,T1.OWNER AS OWNER
				,EXTRACT(YEAR FROM T1.BLD_DT) || '년 ' || LPAD(EXTRACT(MONTH FROM T1.BLD_DT), 2, '0') || '월 ' || LPAD(EXTRACT(DAY FROM T1.BLD_DT), 2, '0') || '일' AS BLD_DT
				,EXTRACT(YEAR FROM T1.FLAW_END_DT) || '년 ' || LPAD(EXTRACT(MONTH FROM T1.FLAW_END_DT), 2, '0') || '월 ' || LPAD(EXTRACT(DAY FROM T1.FLAW_END_DT), 2, '0') || '일' AS FLAW_END_DT
				,T1.DTLS_SPEC_YN AS DTLS_SPEC_YN
				,T1.QC_HIST_YN AS QC_HIST_YN
				,T1.MNTN_HIST_YN AS MNTN_HIST_YN
				,TO_CHAR(T1.PLAN_BEGIN_DT,'YYYY-MM-DD') AS PLAN_BEGIN_DT
				,TO_CHAR(T1.PLAN_END_DT,'YYYY-MM-DD') AS PLAN_END_DT
				,T1.PLANNER AS PLANNER
				,TO_CHAR(T1.CNST_BEGIN_DT,'YYYY-MM-DD') AS CNST_BEGIN_DT
				,TO_CHAR(T1.CNST_END_DT,'YYYY-MM-DD') AS CNST_END_DT
				,T1.CNSTRTR AS CNSTRTR
				,LTRIM(TO_CHAR( TRUNC(NVL(T1.CNSTRCT_AMT,0) / 1000000, 0),'9,999,999,999,999,990')) AS CNSTRCT_AMT
				,T1.ERQ_PROOF_PLAN_APPLC_ENNC AS ERQ_PROOF_PLAN_APPLC_ENNC
				,TO_CHAR(T1.INSPECT_BEGIN_DT,'YYYY-MM-DD') AS INSPECT_BEGIN_DT
				,TO_CHAR(T1.INSPECT_END_DT,'YYYY-MM-DD') AS INSPECT_END_DT
				,T1.INSPECTOR AS INSPECTOR
				,T1.CNST_ORDER_BODY AS CNST_ORDER_BODY
				,T1.CNST_NM AS CNST_NM
				,T1.CNST_SUPERVISOR AS CNST_SUPERVISOR
				,T1.PLAN_BOOK_MNTEN AS PLAN_BOOK_MNTEN
				,EXTRACT(YEAR FROM T1.WRT_DT) || '년 ' || LPAD(EXTRACT(MONTH FROM T1.WRT_DT), 2, '0') || '월 ' || LPAD(EXTRACT(DAY FROM T1.WRT_DT), 2, '0') || '일' AS WRT_DT
				,T1.WRT_USR AS WRT_USR
				,EXTRACT(YEAR FROM T1.LAST_UPDT_DT) || '년 ' || LPAD(EXTRACT(MONTH FROM T1.LAST_UPDT_DT), 2, '0') || '월 ' || LPAD(EXTRACT(DAY FROM T1.LAST_UPDT_DT), 2, '0') || '일' AS LAST_UPDT_DT
				,T1.LAST_UPDT_USR AS LAST_UPDT_USR
				,T1.BASIC_RM AS BASIC_RM
				,T1.MAX_SHIP_SCL AS MAX_SHIP_SCL
				,T1.EXTD AS EXTD
				,T1.UPSIDE_ALT AS UPSIDE_ALT
				,T1.DPWT AS DPWT
				,T1.FMT_1_DESC_1 AS FMT_1_DESC_1
				,T1.FMT_1_DESC_2 AS FMT_1_DESC_2
				,T1.FMT_1_DESC_3 AS FMT_1_DESC_3
				,T1.FMT_1_DESC_4 AS FMT_1_DESC_4
				,T1.FMT_2_DESC_1_1 AS FMT_2_DESC_1_1
				,T1.FMT_2_DESC_1_2 AS FMT_2_DESC_1_2
				,T1.FMT_2_DESC_1_3 AS FMT_2_DESC_1_3
				,T1.FMT_2_DESC_2 AS FMT_2_DESC_2
				,T1.FMT_2_DESC_3 AS FMT_2_DESC_3
				,T1.FMT_3_DESC_1 AS FMT_3_DESC_1
				,T1.FMT_3_DESC_2 AS FMT_3_DESC_2
				,T1.ETC_DTLS_SPEC AS ETC_DTLS_SPEC
				,T1.FCLTS_MNG_GROUP_NO AS FCLTS_MNG_GROUP_NO
				,T1.REG_USR AS REG_USR
				,TO_CHAR(T1.REGIST_DT,'YYYY-MM-DD HH24:MI:SS') AS REGIST_DT
				,T1.UPD_USR AS UPD_USR
				,TO_CHAR(T1.UPDT_DT,'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
				,REPLACE(NVL(T1.LOC_DO,' ') || ' ' || NVL(T1.LOC_SI,' ') || ' ' || NVL(T1.LOC_DONG,' ') || NVL(T1.LOC_JIBUN,' '),'  ',' ') AS LOC
				,GAM_GET_FCLTS_GBN_NM(T1.FCLTS_GBN) AS FCLTS_GBN_NM
				,GAM_GET_FCLTS_SE_NM(T1.FCLTS_SE) AS FCLTS_SE_NM
				,GAM_GET_FCLTS_KND_NM(T1.FCLTS_KND) AS FCLTS_KND_NM
				,T2.FCLTS_MNG_GROUP_NM AS FCLTS_MNG_GROUP_NM
				,T1.BASE_FMT AS BASE_FMT
				,T1.STRCT_FMT AS STRCT_FMT
				,T1.AR AS AR
				,T1.ARCH_AR AS ARCH_AR
				,T1.PLOT_AR AS PLOT_AR
				,T1.MAIN_USAGE_PRPOS AS MAIN_USAGE_PRPOS
				,T1.PRK_AR AS PRK_AR
				,T1.ISD_PRK_AR AS ISD_PRK_AR
				,T1.OSD_PRK_AR AS OSD_PRK_AR
				,T1.PRK_CNT AS PRK_CNT
				,T1.ISD_PRK_CNT AS ISD_PRK_CNT
				,T1.OSD_PRK_CNT AS OSD_PRK_CNT
				,T1.EXHAUST_DUCT_ENNC AS EXHAUST_DUCT_ENNC
				,T1.VNTLTN_ARCNDT_MTHD AS VNTLTN_ARCNDT_MTHD
				,T1.WRT_TANK_LOC AS WRT_TANK_LOC
				,T1.SBT_LOC AS SBT_LOC
				,T1.OIL_SAVEFCLTY_LOC AS OIL_SAVEFCLTY_LOC
				,T1.SWG_CLUPFCLTY_LOC AS SWG_CLUPFCLTY_LOC
				,T1.LIFT_CNT_PSNGR AS LIFT_CNT_PSNGR
				,T1.LIFT_CNT_CARGO AS LIFT_CNT_CARGO
				,T1.LIFT_CNT_EMGCY AS LIFT_CNT_EMGCY
				,T1.LIFT_OPER_MTHD AS LIFT_OPER_MTHD
				,T1.CLNG_ENNC AS CLNG_ENNC
				,T1.CLNG_SRC AS CLNG_SRC
				,T1.HTNG_ENNC AS HTNG_ENNC
				,T1.HTNG_SRC AS HTNG_SRC
				,T1.SPICTANK_FMT AS SPICTANK_FMT
				,T1.ELCTY_LEAD_IN_CAPA AS ELCTY_LEAD_IN_CAPA
				,T1.GROUND_FLOOR_CN AS GROUND_FLOOR_CN
				,T1.TOP_FLOOR_CN AS TOP_FLOOR_CN
				,T1.UNDER_FLOOR_CN AS UNDER_FLOOR_CN
				,T1.HIGH_HT AS HIGH_HT
				,T1.HIGH_FLLOR_HT AS HIGH_FLLOR_HT
				,T1.HIGH_FLLOR_HT_POS AS HIGH_FLLOR_HT_POS
				,T1.BASE_SIDE_DP AS BASE_SIDE_DP
				,T1.FLOOR_AR_RATE AS FLOOR_AR_RATE
				,T1.CAPA_RATE AS CAPA_RATE
				,T1.DT_MAX_USAGE_CN AS DT_MAX_USAGE_CN
				,T1.DT_USAGE_CN AS DT_USAGE_CN
				,T1.BLD_MNTN_MNG_SYS_YN AS BLD_MNTN_MNG_SYS_YN
				,T1.MNTN_MNG_ADD_FCLTY_YN AS MNTN_MNG_ADD_FCLTY_YN
				,T1.APPT_TP AS APPT_TP
				,T1.BRIDGE_START_LOC AS BRIDGE_START_LOC
				,T1.BRIDGE_END_LOC AS BRIDGE_END_LOC
				,T1.PLAN_LIVE_WGHT AS PLAN_LIVE_WGHT
				,T1.ALLOW_PASS_WGHT AS ALLOW_PASS_WGHT
				,T1.EXT_LT AS EXT_LT
				,T1.EXT_SPAN_CN AS EXT_SPAN_CN
				,T1.EXT_MAX_SPAN_LT AS EXT_MAX_SPAN_LT
				,T1.PAVE_WD AS PAVE_WD
				,T1.ROAD_WD AS ROAD_WD
				,T1.SUM_PAVE_ROAD_WD AS SUM_PAVE_ROAD_WD
				,T1.UP_ROAD_CN AS UP_ROAD_CN
				,T1.DOWN_ROAD_CN AS DOWN_ROAD_CN
				,T1.SUM_UP_DOWN_ROAD_CN AS SUM_UP_DOWN_ROAD_CN
				,T1.SPAN_COMP AS SPAN_COMP
				,T1.MAIN_SPAN_FMT AS MAIN_SPAN_FMT
				,T1.SUN_SPAN_FMT AS SUN_SPAN_FMT
				,T1.PROP_SE AS PROP_SE
				,T1.BULD_CONN_SE AS BULD_CONN_SE
				,T1.SUB_PASS_LMT_HT AS SUB_PASS_LMT_HT
				,T1.BRIDGE_PIER_FMT_1 AS BRIDGE_PIER_FMT_1
				,T1.BRIDGE_PIER_CN_1 AS BRIDGE_PIER_CN_1
				,T1.BRIDGE_PIER_BASE_FMT_1 AS BRIDGE_PIER_BASE_FMT_1
				,T1.BRIDGE_PIER_FMT_2 AS BRIDGE_PIER_FMT_2
				,T1.BRIDGE_PIER_CN_2 AS BRIDGE_PIER_CN_2
				,T1.BRIDGE_PIER_BASE_FMT_2 AS BRIDGE_PIER_BASE_FMT_2
				,T1.BRIDGE_PROP_FMT_1 AS BRIDGE_PROP_FMT_1
				,T1.BRIDGE_PROP_BASE_FMT_1 AS BRIDGE_PROP_BASE_FMT_1
				,T1.BRIDGE_PROP_FMT_2 AS BRIDGE_PROP_FMT_2
				,T1.BRIDGE_PROP_BASE_FMT_2 AS BRIDGE_PROP_BASE_FMT_2
				,T1.CROSS_ROUTE AS CROSS_ROUTE
				,T1.CROSS_RIVER_HIGH_DPWT AS CROSS_RIVER_HIGH_DPWT
			FROM FCLTS_MNG_REGIST_F T1
			LEFT OUTER JOIN FCLTS_MNG_GROUP_F T2 ON (T1.FCLTS_MNG_GROUP_NO = T2.FCLTS_MNG_GROUP_NO)
		WHERE T1.FCLTS_NO = #fcltsNo#
	</select>

	<select id="gamFcltsMngRegistMngDao.selectFcltsMngRegistMngQcMngDtlsHistListHwp_D" parameterClass="GamFcltsMngRegistMngQcMngDtlsVO" resultClass="egovMap">
			SELECT
					TO_CHAR(T1.QC_BEGIN_DT,'YYYY-MM-DD') || ' ~ ' || TO_CHAR(T1.QC_END_DT,'YYYY-MM-DD') AS QC_INSP_DT_FROM_TO
					,GAM_GET_QC_INSP_SE_NM(T1.QC_INSP_SE) AS QC_INSP_SE_NM
					,T1.QC_INSP_INSTT_NM AS QC_INSP_INSTT_NM
					,T1.RESPON_ENGINEER_NM AS RESPON_ENGINEER_NM
					,LTRIM(TO_CHAR( TRUNC(NVL(T1.QC_INSP_AMT,0) / 1000, 0),'9,999,999,990')) AS QC_INSP_AMT
					,GAM_GET_STTUS_EVL_LVL_NM(T1.STTUS_EVL_LVL) AS STTUS_EVL_LVL_NM
					,T1.QC_INSP_RESULT AS QC_INSP_RESULT
					,T1.ACTION_CN AS ACTION_CN
					,TO_CHAR(T1.WRT_DT,'YYYY-MM-DD') AS WRT_DT
					,T1.WRT_USR AS WRT_USR
				FROM QC_MNG_DTLS_F T1
			WHERE T1.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#

			<isNotEmpty property="fcltsJobSe">
			AND T1.FCLTS_JOB_SE = #fcltsJobSe#
			</isNotEmpty>

			AND T1.PLAN_HIST_SE = 'H'
			ORDER BY T1.QC_INSP_DT ASC
	</select>

	<select id="gamFcltsMngRegistMngDao.selectFcltsMngRegistMngMntnRprDtlsHistListHwp_D" parameterClass="GamFcltsMngRegistMngMntnRprDtlsVO" resultClass="egovMap">
			SELECT
					TO_CHAR(T1.MNTN_RPR_CNST_START_DT,'YYYY-MM-DD') || ' ~ ' || TO_CHAR(T1.MNTN_RPR_CNST_END_DT,'YYYY-MM-DD') AS MNTN_RPR_CNST_DT_FROM_TO
					, DECODE(T1.MNTN_RPR_SE, '1', '개량', '2', '보수', '3', '보강', '4', '변경-증설', '5', '변경-구조변경', '9', '기타', '') AS MNTN_RPR_SE
					,T1.MNTN_RPR_PART AS MNTN_RPR_PART
					,T1.MNTN_RPR_CN AS MNTN_RPR_CN
					,T1.PLANNER_NM AS PLANNER_NM
					,LTRIM(TO_CHAR( TRUNC(NVL(T1.MNTN_RPR_CNST_AMT,0) / 1000, 0),'9,999,999,990')) AS MNTN_RPR_CNST_AMT
					,T1.CNSTRTR AS CNSTRTR
					,T1.RESPON_ENGINEER AS RESPON_ENGINEER
					,T1.CNST_CHARG_NM AS CNST_CHARG_NM
					,TO_CHAR(T1.WRT_DT,'YYYY-MM-DD') AS WRT_DT
					,T1.WRT_USR AS WRT_USR
				FROM MNTN_RPR_DTLS_F T1
			WHERE T1.FCLTS_MNG_GROUP_NO = #fcltsMngGroupNo#

			<isNotEmpty property="fcltsJobSe">
			AND T1.FCLTS_JOB_SE = #fcltsJobSe#
			</isNotEmpty>

			AND T1.PLAN_HIST_SE = 'H'
			ORDER BY T1.MNTN_RPR_CNST_START_DT ASC
	</select>

</sqlMap>
